diff -urN client/Android/android_cliprdr.c ../../informatimago/FreeRDP/client/Android/android_cliprdr.c
--- client/Android/android_cliprdr.c	2019-07-25 19:50:59.665891491 +0300
+++ ../../informatimago/FreeRDP/client/Android/android_cliprdr.c	2019-07-25 20:11:23.707961558 +0300
@@ -141,7 +141,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT android_cliprdr_monitor_ready(CliprdrClientContext* cliprdr,
-                                          const CLIPRDR_MONITOR_READY* monitorReady)
+                                          CLIPRDR_MONITOR_READY* monitorReady)
 {
 	UINT rc;
 	androidContext* afc;
@@ -170,7 +170,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT android_cliprdr_server_capabilities(CliprdrClientContext* cliprdr,
-                                                const CLIPRDR_CAPABILITIES* capabilities)
+                                                CLIPRDR_CAPABILITIES* capabilities)
 {
 	UINT32 index;
 	CLIPRDR_CAPABILITY_SET* capabilitySet;
@@ -207,7 +207,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT android_cliprdr_server_format_list(CliprdrClientContext* cliprdr,
-                                               const CLIPRDR_FORMAT_LIST* formatList)
+                                               CLIPRDR_FORMAT_LIST* formatList)
 {
 	UINT rc;
 	UINT32 index;
@@ -287,7 +287,7 @@
  */
 static UINT
 android_cliprdr_server_format_list_response(CliprdrClientContext* cliprdr,
-                                            const CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
+                                            CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
 {
 	if (!cliprdr || !formatListResponse)
 		return ERROR_INVALID_PARAMETER;
@@ -302,7 +302,7 @@
  */
 static UINT
 android_cliprdr_server_lock_clipboard_data(CliprdrClientContext* cliprdr,
-                                           const CLIPRDR_LOCK_CLIPBOARD_DATA* lockClipboardData)
+                                           CLIPRDR_LOCK_CLIPBOARD_DATA* lockClipboardData)
 {
 	if (!cliprdr || !lockClipboardData)
 		return ERROR_INVALID_PARAMETER;
@@ -315,8 +315,9 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT android_cliprdr_server_unlock_clipboard_data(
-    CliprdrClientContext* cliprdr, const CLIPRDR_UNLOCK_CLIPBOARD_DATA* unlockClipboardData)
+static UINT
+android_cliprdr_server_unlock_clipboard_data(CliprdrClientContext* cliprdr,
+                                             CLIPRDR_UNLOCK_CLIPBOARD_DATA* unlockClipboardData)
 {
 	if (!cliprdr || !unlockClipboardData)
 		return ERROR_INVALID_PARAMETER;
@@ -331,7 +332,7 @@
  */
 static UINT
 android_cliprdr_server_format_data_request(CliprdrClientContext* cliprdr,
-                                           const CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
+                                           CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
 {
 	UINT rc;
 	BYTE* data;
@@ -374,7 +375,7 @@
  */
 static UINT
 android_cliprdr_server_format_data_response(CliprdrClientContext* cliprdr,
-                                            const CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
+                                            CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
 {
 	BYTE* data;
 	UINT32 size;
@@ -447,8 +448,9 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT android_cliprdr_server_file_contents_request(
-    CliprdrClientContext* cliprdr, const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
+static UINT
+android_cliprdr_server_file_contents_request(CliprdrClientContext* cliprdr,
+                                             CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
 	if (!cliprdr || !fileContentsRequest)
 		return ERROR_INVALID_PARAMETER;
@@ -461,8 +463,9 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT android_cliprdr_server_file_contents_response(
-    CliprdrClientContext* cliprdr, const CLIPRDR_FILE_CONTENTS_RESPONSE* fileContentsResponse)
+static UINT
+android_cliprdr_server_file_contents_response(CliprdrClientContext* cliprdr,
+                                              CLIPRDR_FILE_CONTENTS_RESPONSE* fileContentsResponse)
 {
 	if (!cliprdr || !fileContentsResponse)
 		return ERROR_INVALID_PARAMETER;
diff -urN client/Android/android_event.c ../../informatimago/FreeRDP/client/Android/android_event.c
--- client/Android/android_event.c	2019-07-25 19:50:59.669891511 +0300
+++ ../../informatimago/FreeRDP/client/Android/android_event.c	2019-07-25 20:11:23.715961599 +0300
@@ -193,7 +193,7 @@
 	free(event);
 }
 
-ANDROID_EVENT_KEY* android_event_unicodekey_new(UINT16 flags, UINT16 key)
+ANDROID_EVENT_KEY* android_event_unicodekey_new(UINT16 key)
 {
 	ANDROID_EVENT_KEY* event;
 	event = (ANDROID_EVENT_KEY*)calloc(1, sizeof(ANDROID_EVENT_KEY));
@@ -202,7 +202,6 @@
 		return NULL;
 
 	event->type = EVENT_TYPE_KEY_UNICODE;
-	event->flags = flags;
 	event->scancode = key;
 	return event;
 }
diff -urN client/Android/android_event.h ../../informatimago/FreeRDP/client/Android/android_event.h
--- client/Android/android_event.h	2019-07-25 19:50:59.673891531 +0300
+++ ../../informatimago/FreeRDP/client/Android/android_event.h	2019-07-25 20:11:23.719961618 +0300
@@ -66,7 +66,7 @@
 FREERDP_LOCAL BOOL android_check_handle(freerdp* inst);
 
 FREERDP_LOCAL ANDROID_EVENT_KEY* android_event_key_new(int flags, UINT16 scancode);
-FREERDP_LOCAL ANDROID_EVENT_KEY* android_event_unicodekey_new(UINT16 flags, UINT16 key);
+FREERDP_LOCAL ANDROID_EVENT_KEY* android_event_unicodekey_new(UINT16 key);
 FREERDP_LOCAL ANDROID_EVENT_CURSOR* android_event_cursor_new(UINT16 flags, UINT16 x, UINT16 y);
 FREERDP_LOCAL ANDROID_EVENT* android_event_disconnect_new(void);
 FREERDP_LOCAL ANDROID_EVENT_CLIPBOARD* android_event_clipboard_new(void* data, int data_length);
diff -urN client/Android/android_freerdp.c ../../informatimago/FreeRDP/client/Android/android_freerdp.c
--- client/Android/android_freerdp.c	2019-07-25 19:50:59.689891611 +0300
+++ ../../informatimago/FreeRDP/client/Android/android_freerdp.c	2019-07-25 20:11:23.739961718 +0300
@@ -125,6 +125,24 @@
 
 static BOOL android_begin_paint(rdpContext* context)
 {
+	rdpGdi* gdi;
+	HGDI_WND hwnd;
+
+	if (!context)
+		return FALSE;
+
+	gdi = context->gdi;
+
+	if (!gdi || !gdi->primary || !gdi->primary->hdc)
+		return FALSE;
+
+	hwnd = gdi->primary->hdc->hwnd;
+
+	if (!hwnd || !hwnd->invalid)
+		return FALSE;
+
+	hwnd->invalid->null = TRUE;
+	hwnd->ninvalid = 0;
 	return TRUE;
 }
 
@@ -159,7 +177,7 @@
 
 	ninvalid = hwnd->ninvalid;
 
-	if (ninvalid < 1)
+	if (ninvalid == 0)
 		return TRUE;
 
 	cinvalid = hwnd->cinvalid;
@@ -182,8 +200,6 @@
 
 	freerdp_callback("OnGraphicsUpdate", "(JIIII)V", (jlong)context->instance, x1, y1, x2 - x1,
 	                 y2 - y1);
-	hwnd->invalid->null = TRUE;
-	hwnd->ninvalid = 0;
 	return TRUE;
 }
 
@@ -949,12 +965,11 @@
 }
 
 static jboolean JNICALL jni_freerdp_send_unicodekey_event(JNIEnv* env, jclass cls, jlong instance,
-                                                          jint keycode, jboolean down)
+                                                          jint keycode)
 {
 	ANDROID_EVENT* event;
 	freerdp* inst = (freerdp*)instance;
-	UINT16 flags = (down == JNI_TRUE) ? 0 : KBD_FLAGS_RELEASE;
-	event = (ANDROID_EVENT*)android_event_unicodekey_new(flags, keycode);
+	event = (ANDROID_EVENT*)android_event_unicodekey_new(keycode);
 
 	if (!event)
 		return JNI_FALSE;
@@ -997,6 +1012,7 @@
 	const jbyte* data = jdata != NULL ? (*env)->GetStringUTFChars(env, jdata, NULL) : NULL;
 	int data_length = data ? strlen(data) : 0;
 	jboolean ret = JNI_FALSE;
+	;
 	event = (ANDROID_EVENT*)android_event_clipboard_new((void*)data, data_length);
 
 	if (!event)
@@ -1060,7 +1076,7 @@
 	  &jni_freerdp_update_graphics },
 	{ "freerdp_send_cursor_event", "(JIII)Z", &jni_freerdp_send_cursor_event },
 	{ "freerdp_send_key_event", "(JIZ)Z", &jni_freerdp_send_key_event },
-	{ "freerdp_send_unicodekey_event", "(JIZ)Z", &jni_freerdp_send_unicodekey_event },
+	{ "freerdp_send_unicodekey_event", "(JI)Z", &jni_freerdp_send_unicodekey_event },
 	{ "freerdp_send_clipboard_data", "(JLjava/lang/String;)Z", &jni_freerdp_send_clipboard_data }
 };
 
diff -urN client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/presentation/SessionActivity.java ../../informatimago/FreeRDP/client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/presentation/SessionActivity.java
--- client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/presentation/SessionActivity.java	2019-07-25 19:50:59.565890996 +0300
+++ ../../informatimago/FreeRDP/client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/presentation/SessionActivity.java	2019-07-25 20:11:23.607961063 +0300
@@ -780,8 +780,7 @@
 
 	@Override public void processUnicodeKey(int unicodeKey)
 	{
-		LibFreeRDP.sendUnicodeKeyEvent(session.getInstance(), unicodeKey, true);
-		LibFreeRDP.sendUnicodeKeyEvent(session.getInstance(), unicodeKey, false);
+		LibFreeRDP.sendUnicodeKeyEvent(session.getInstance(), unicodeKey);
 	}
 
 	@Override public void switchKeyboard(int keyboardType)
diff -urN client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/services/LibFreeRDP.java ../../informatimago/FreeRDP/client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/services/LibFreeRDP.java
--- client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/services/LibFreeRDP.java	2019-07-25 19:50:59.613891234 +0300
+++ ../../informatimago/FreeRDP/client/Android/Studio/freeRDPCore/src/main/java/com/freerdp/freerdpcore/services/LibFreeRDP.java	2019-07-25 20:11:23.655961301 +0300
@@ -94,8 +94,7 @@
 
 	private static native boolean freerdp_send_key_event(long inst, int keycode, boolean down);
 
-	private static native boolean freerdp_send_unicodekey_event(long inst, int keycode,
-	                                                            boolean down);
+	private static native boolean freerdp_send_unicodekey_event(long inst, int keycode);
 
 	private static native boolean freerdp_send_clipboard_data(long inst, String data);
 
@@ -428,9 +427,9 @@
 		return freerdp_send_key_event(inst, keycode, down);
 	}
 
-	public static boolean sendUnicodeKeyEvent(long inst, int keycode, boolean down)
+	public static boolean sendUnicodeKeyEvent(long inst, int keycode)
 	{
-		return freerdp_send_unicodekey_event(inst, keycode, down);
+		return freerdp_send_unicodekey_event(inst, keycode);
 	}
 
 	public static boolean sendClipboardData(long inst, String data)
diff -urN client/common/client.c ../../informatimago/FreeRDP/client/common/client.c
--- client/common/client.c	2019-07-25 19:51:00.241894347 +0300
+++ ../../informatimago/FreeRDP/client/common/client.c	2019-07-25 20:11:24.251964256 +0300
@@ -502,8 +502,6 @@
 DWORD client_cli_verify_certificate(freerdp* instance, const char* common_name, const char* subject,
                                     const char* issuer, const char* fingerprint, BOOL host_mismatch)
 {
-	WINPR_UNUSED(common_name);
-	WINPR_UNUSED(host_mismatch);
 	printf("WARNING: This callback is deprecated, migrate to client_cli_verify_certificate_ex\n");
 	printf("Certificate details:\n");
 	printf("\tSubject: %s\n", subject);
@@ -573,7 +571,6 @@
                                             const char* fingerprint, const char* old_subject,
                                             const char* old_issuer, const char* old_fingerprint)
 {
-	WINPR_UNUSED(common_name);
 	printf("WARNING: This callback is deprecated, migrate to "
 	       "client_cli_verify_changed_certificate_ex\n");
 	printf("!!! Certificate has changed !!!\n");
diff -urN client/common/cmdline.c ../../informatimago/FreeRDP/client/common/cmdline.c
--- client/common/cmdline.c	2019-07-25 19:51:00.305894664 +0300
+++ ../../informatimago/FreeRDP/client/common/cmdline.c	2019-07-25 20:11:24.323964613 +0300
@@ -226,11 +226,6 @@
 BOOL freerdp_client_print_command_line_help_ex(int argc, char** argv,
                                                COMMAND_LINE_ARGUMENT_A* custom)
 {
-	const char* name = "FreeRDP";
-
-	if (argc > 0)
-		name = argv[0];
-
 	printf("\n");
 	printf("FreeRDP - A Free Remote Desktop Protocol Implementation\n");
 	printf("See www.freerdp.com for more information\n");
@@ -246,22 +241,36 @@
 	freerdp_client_print_command_line_args(args);
 	printf("\n");
 	printf("Examples:\n");
-	printf("    %s connection.rdp /p:Pwd123! /f\n", name);
-	printf("    %s /u:CONTOSO\\JohnDoe /p:Pwd123! /v:rdp.contoso.com\n", name);
-	printf("    %s /u:JohnDoe /p:Pwd123! /w:1366 /h:768 /v:192.168.1.100:4489\n", name);
-	printf("    %s /u:JohnDoe /p:Pwd123! /vmconnect:C824F53E-95D2-46C6-9A18-23A5BB403532 "
-	       "/v:192.168.1.100\n",
-	       name);
+	printf("    xfreerdp connection.rdp /p:Pwd123! /f\n");
+	printf("    xfreerdp /u:CONTOSO\\JohnDoe /p:Pwd123! /v:rdp.contoso.com\n");
+	printf("    xfreerdp /u:JohnDoe /p:Pwd123! /w:1366 /h:768 /v:192.168.1.100:4489\n");
+	printf("    xfreerdp /u:JohnDoe /p:Pwd123! /vmconnect:C824F53E-95D2-46C6-9A18-23A5BB403532 "
+	       "/v:192.168.1.100\n");
 	printf("\n");
 	printf("Clipboard Redirection: +clipboard\n");
 	printf("\n");
 	printf("Drive Redirection: /drive:home,/home/user\n");
 	printf("Smartcard Redirection: /smartcard:<device>\n");
+	printf("Smartcard logon with rdp only:                /smartcard-logon [/sec:rdp]\n");
+	printf("Smartcard logon with Kerberos authentication: /smartcard-logon /sec:nla\n");
+	printf("Those options are only accepted with /smartcard-logon:\n");
+	printf("    PIN code: /pin:<PIN code>\n");
+	printf("    PKCS11 module to load: /pkcs11-module:<module>\n");
+	printf("    PKINIT anchors: /pkinit-anchors:<pkinit_anchors>\n");
+	printf("    Kerberos Ticket start time: /start-time:<delay to issue ticket>\n");
+	printf("    Kerberos Ticket lifetime: /lifetime:<ticket lifetime>\n");
+	printf("    Kerberos Ticket renewable lifetime: /renewable-lifetime:<ticket renewable "
+	       "lifetime>\n");
+	/* See also http://web.mit.edu/kerberos/krb5-latest/doc/basic/date_format.html */
+	printf("    The delay and lifetime have the following syntax: <integer>[s|m|h|d] (for seconds, "
+	       " minutes,  hours and days)\n");
+	printf("    Activate Kerberos PKINIT trace: /T\n");
+	printf("    CSP Name: /csp:<csp name>\n");
+	printf("    Card Name: /card:<card name>\n");
 	printf("Serial Port Redirection: /serial:<name>,<device>,[SerCx2|SerCx|Serial],[permissive]\n");
 	printf("Serial Port Redirection: /serial:COM1,/dev/ttyS0\n");
 	printf("Parallel Port Redirection: /parallel:<name>,<device>\n");
 	printf("Printer Redirection: /printer:<device>,<driver>\n");
-	printf("TCP redirection: /rdp2tcp:/usr/bin/rdp2tcp\n");
 	printf("\n");
 	printf("Audio Output Redirection: /sound:sys:oss,dev:1,format:1\n");
 	printf("Audio Output Redirection: /sound:sys:alsa\n");
@@ -278,7 +287,7 @@
 #else
 	printf("    export https_proxy=http://proxy.contoso.com:3128/\n");
 #endif
-	printf("    %s /g:rdp.contoso.com ...\n", name);
+	printf("    xfreerdp /g:rdp.contoso.com ...\n");
 	printf("\n");
 	printf("More documentation is coming, in the meantime consult source files\n");
 	printf("\n");
@@ -291,10 +300,6 @@
 	{
 		size_t length;
 		rdpSettings* settings;
-
-		if (argc <= index)
-			return -1;
-
 		length = strlen(argv[index]);
 
 		if (length > 4)
@@ -334,13 +339,19 @@
 		RDPDR_DRIVE* drive;
 
 		if (count < 3)
+		{
+			WLog_ERR(TAG, "Missing argument for the %s option", params[0]);
 			return FALSE;
+		}
 
 		settings->DeviceRedirection = TRUE;
 		drive = (RDPDR_DRIVE*)calloc(1, sizeof(RDPDR_DRIVE));
 
 		if (!drive)
+		{
+			WLog_ERR(TAG, "Could not allocate memory for the drive %s", params[1]);
 			return FALSE;
+		}
 
 		drive->Type = RDPDR_DTYP_FILESYSTEM;
 
@@ -349,6 +360,7 @@
 			if (!(drive->Name = _strdup(params[1])))
 			{
 				free(drive);
+				WLog_ERR(TAG, "Could not allocate memory for the drive name %s", params[1]);
 				return FALSE;
 			}
 		}
@@ -359,8 +371,20 @@
 			const BOOL isSpecial =
 			    (strncmp(params[2], "*", 2) == 0) || (strncmp(params[2], "%", 2) == 0) ? TRUE
 			                                                                           : FALSE;
+			BOOL bad = FALSE;
+
+			if (!isPath && !isSpecial)
+			{
+				WLog_ERR(TAG, "Drive argument is not a path or special: %s", params[2]);
+				bad = TRUE;
+			}
+			else if (!(drive->Path = _strdup(params[2])))
+			{
+				WLog_ERR(TAG, "Could not allocate memory for the drive path %s", params[2]);
+				bad = TRUE;
+			}
 
-			if ((!isPath && !isSpecial) || !(drive->Path = _strdup(params[2])))
+			if (bad)
 			{
 				free(drive->Name);
 				free(drive);
@@ -370,6 +394,7 @@
 
 		if (!freerdp_device_collection_add(settings, (RDPDR_DEVICE*)drive))
 		{
+			WLog_ERR(TAG, "Could not add the drive %s", drive->Name);
 			free(drive->Path);
 			free(drive->Name);
 			free(drive);
@@ -397,10 +422,13 @@
 
 			printer->Type = RDPDR_DTYP_PRINT;
 
-			if (!(printer->Name = _strdup(params[1])))
+			if (count > 1)
 			{
-				free(printer);
-				return FALSE;
+				if (!(printer->Name = _strdup(params[1])))
+				{
+					free(printer);
+					return FALSE;
+				}
 			}
 
 			if (count > 2)
@@ -574,6 +602,7 @@
 		return TRUE;
 	}
 
+	WLog_ERR(TAG, "Invalid device %s", params[0]);
 	return FALSE;
 }
 
@@ -582,7 +611,7 @@
 	int index;
 	ADDIN_ARGV* args;
 
-	if (!settings || !params || !params[0] || (count < 0))
+	if (!settings || !params || !params[0])
 		return FALSE;
 
 	if (freerdp_static_channel_collection_find(settings, params[0]))
@@ -594,7 +623,7 @@
 		return FALSE;
 
 	args->argc = count;
-	args->argv = (char**)calloc((size_t)args->argc, sizeof(char*));
+	args->argv = (char**)calloc(args->argc, sizeof(char*));
 
 	if (!args->argv)
 		goto error_argv;
@@ -633,7 +662,7 @@
 	int index;
 	ADDIN_ARGV* args;
 
-	if (!settings || !params || !params[0] || (count < 0))
+	if (!settings || !params || !params[0])
 		return FALSE;
 
 	if (freerdp_dynamic_channel_collection_find(settings, params[0]))
@@ -645,7 +674,7 @@
 		return FALSE;
 
 	args->argc = count;
-	args->argv = (char**)calloc((size_t)args->argc, sizeof(char*));
+	args->argv = (char**)calloc(args->argc, sizeof(char*));
 
 	if (!args->argv)
 		goto error_argv;
@@ -679,81 +708,111 @@
 	return FALSE;
 }
 
+/*
+string_list_allocate
+
+Allocate and clear memory for a string list (array of char*) with additionnal bytes.
+Return the string list, set (*tail) to point to the additionnal bytes.
+
+Note: One purpose is to store the strings in the string list in the
+additionnal bytes, so the whole string list can be freed with a simple
+call to free(), instead of calling string_list_free().
+*/
+static char** string_list_allocate(size_t entry_count, size_t additionnal_size, char** tail)
+{
+	size_t total_size = entry_count * sizeof(char*) + additionnal_size * sizeof(char);
+	char** list = malloc(total_size);
+
+	if (list == NULL)
+	{
+		return NULL;
+	}
+
+	memset(list, 0, total_size);
+	(*tail) = (char*)&list[entry_count];
+	return list;
+}
+
+static size_t string_count_char(const char* string, char character)
+{
+	size_t count = 0;
+	const char* it = string;
+
+	while ((it = strchr(it, character)) != NULL)
+	{
+		it++;
+		count++;
+	}
+
+	return count;
+}
+
 static char** freerdp_command_line_parse_comma_separated_values_ex(const char* name,
                                                                    const char* list, size_t* count)
 {
-	char** p;
-	char* str;
-	size_t nArgs;
-	size_t index;
-	size_t nCommas;
-	size_t prefix, len;
-	nCommas = 0;
 	assert(NULL != count);
 	*count = 0;
 
-	if (!list)
+	if (list == NULL)
 	{
-		if (name)
+		char** p = NULL;
+		char* copy = NULL;
+
+		if (name == NULL)
 		{
-			size_t len = strlen(name);
-			p = (char**)calloc(2UL + len, sizeof(char*));
+			return NULL;
+		}
 
-			if (p)
-			{
-				char* dst = (char*)&p[1];
-				p[0] = dst;
-				sprintf_s(dst, len + 1, "%s", name);
-				*count = 1;
-				return p;
-			}
+		p = string_list_allocate(1, 1 + strlen(name), &copy);
+
+		if (p == NULL)
+		{
+			return NULL;
 		}
 
-		return NULL;
+		strcpy(copy, name);
+		p[0] = copy;
+		(*count) = 1;
+		return p;
 	}
-
+	else
 	{
-		const char* it = list;
+		size_t index = 0;
+		size_t nCommas = string_count_char(list, ',');
+		size_t nArgs = nCommas + 1 + ((name == NULL) ? 0 : 1);
+		size_t namelen = (name == NULL) ? 0 : strlen(name);
+		char* store = NULL;
+		char** p = string_list_allocate(nArgs, namelen + 1 + strlen(list) + 1, &store);
 
-		while ((it = strchr(it, ',')) != NULL)
+		if (p == NULL)
 		{
-			it++;
-			nCommas++;
+			return NULL;
 		}
-	}
-
-	nArgs = nCommas + 1;
 
-	if (name)
-		nArgs++;
-
-	prefix = (nArgs + 1UL) * sizeof(char*);
-	len = strlen(list);
-	p = (char**)calloc(len + prefix + 1, sizeof(char*));
-
-	if (!p)
-		return NULL;
-
-	str = &((char*)p)[prefix];
-	memcpy(str, list, len);
+		if (name != NULL)
+		{
+			strcpy(store, name);
+			p[index++] = store;
+			store = strchr(store, '\0') + 1;
+		}
 
-	if (name)
-		p[0] = (char*)name;
+		strcpy(store, list);
 
-	for (index = name ? 1 : 0; index < nArgs; index++)
-	{
-		char* comma = strchr(str, ',');
-		p[index] = str;
-
-		if (comma)
+		while (index < nArgs)
 		{
-			str = comma + 1;
-			*comma = '\0';
+			char* comma = strchr(store, ',');
+			p[index++] = store;
+
+			if (comma)
+			{
+				store = comma + 1;
+				*comma = '\0';
+			}
 		}
-	}
 
-	*count = nArgs;
-	return p;
+		*count = nArgs;
+		return p;
+	}
 }
 
 static char** freerdp_command_line_parse_comma_separated_values(char* list, size_t* count)
@@ -926,14 +985,14 @@
 BOOL freerdp_parse_username(const char* username, char** user, char** domain)
 {
 	char* p;
-	size_t length = 0;
+	int length = 0;
 	p = strchr(username, '\\');
 	*user = NULL;
 	*domain = NULL;
 
 	if (p)
 	{
-		length = (size_t)(p - username);
+		length = (int)(p - username);
 		*user = _strdup(&p[1]);
 
 		if (!*user)
@@ -984,7 +1043,7 @@
 
 	if (p)
 	{
-		size_t length = (size_t)(p - hostname);
+		size_t length = (p - hostname);
 		LONGLONG val;
 
 		if (!value_to_int(p + 1, &val, 1, UINT16_MAX))
@@ -1012,7 +1071,7 @@
 	return TRUE;
 }
 
-BOOL freerdp_set_connection_type(rdpSettings* settings, UINT32 type)
+BOOL freerdp_set_connection_type(rdpSettings* settings, int type)
 {
 	settings->ConnectionType = type;
 
@@ -1146,15 +1205,11 @@
 
 static int freerdp_detect_command_line_pre_filter(void* context, int index, int argc, LPSTR* argv)
 {
-	size_t length;
-	WINPR_UNUSED(context);
+	int length;
 
 	if (index == 1)
 	{
-		if (argc < index)
-			return -1;
-
-		length = strlen(argv[index]);
+		length = (int)strlen(argv[index]);
 
 		if (length > 4)
 		{
@@ -1183,7 +1238,7 @@
 	DWORD flags;
 	int detect_status;
 	COMMAND_LINE_ARGUMENT_A* arg;
-	flags = COMMAND_LINE_SEPARATOR_COLON | COMMAND_LINE_SILENCE_PARSER;
+	flags = COMMAND_LINE_SEPARATOR_COLON;
 	flags |= COMMAND_LINE_SIGIL_SLASH | COMMAND_LINE_SIGIL_PLUS_MINUS;
 
 	if (ignoreUnknown)
@@ -1223,7 +1278,7 @@
 	DWORD flags;
 	int detect_status;
 	COMMAND_LINE_ARGUMENT_A* arg;
-	flags = COMMAND_LINE_SEPARATOR_SPACE | COMMAND_LINE_SILENCE_PARSER;
+	flags = COMMAND_LINE_SEPARATOR_SPACE;
 	flags |= COMMAND_LINE_SIGIL_DASH | COMMAND_LINE_SIGIL_DOUBLE_DASH;
 	flags |= COMMAND_LINE_SIGIL_ENABLE_DISABLE;
 
@@ -1257,16 +1312,16 @@
 	return detect_status;
 }
 
-static BOOL freerdp_client_detect_command_line(int argc, char** argv, DWORD* flags)
+static BOOL freerdp_client_detect_command_line(int argc, char** argv, DWORD* flags,
+                                               BOOL ignoreUnknown)
 {
 	int old_cli_status;
-	size_t old_cli_count;
+	int old_cli_count;
 	int posix_cli_status;
 	size_t posix_cli_count;
 	int windows_cli_status;
 	size_t windows_cli_count;
 	BOOL compatibility = FALSE;
-	const BOOL ignoreUnknown = TRUE;
 	windows_cli_status = freerdp_detect_windows_style_command_line_syntax(
 	    argc, argv, &windows_cli_count, ignoreUnknown);
 	posix_cli_status =
@@ -1392,11 +1447,22 @@
 	return strncmp(&str[strLen - extLen], ext, extLen) == 0;
 }
 
-static void activate_smartcard_logon_rdp(rdpSettings* settings)
+static void activate_smartcard_logon(rdpSettings* settings)
 {
 	settings->SmartcardLogon = TRUE;
-	/* TODO: why not? settings->UseRdpSecurityLayer = TRUE; */
-	freerdp_settings_set_bool(settings, FreeRDP_PasswordIsSmartcardPin, TRUE);
+	/* We initialize all the settings, for all the variants of smartcard logon: */
+	settings->Pin = NULL;
+	settings->PinPadIsPresent = FALSE;
+	copy_value("0s", &settings->KerberosStartTime);
+	/* Ticket lifetime value in seconds ; KDC default value : 600mn (i.e. 36000s) ; 600mn at maximum
+	 */
+	copy_value("10h", &settings->KerberosLifeTime);
+	/* Ticket renewable lifetime value in seconds ; KDC default value : 1 day (i.e. 86400s) ; 7 days
+	 * at maximum */
+	copy_value("1d", &settings->KerberosRenewableLifeTime);
+	settings->Krb5Trace = FALSE;
+	freerdp_set_param_bool(settings, FreeRDP_PasswordIsSmartcardPin,
+	                       TRUE); /* TODO: why not? settings->UseRdpSecurityLayer = TRUE; */
 }
 
 /**
@@ -1440,6 +1506,16 @@
 	return TRUE;
 }
 
+#define CHECK_MEMORY(pointer)                                              \
+	do                                                                     \
+	{                                                                      \
+		if (!(pointer))                                                    \
+		{                                                                  \
+			WLog_ERR(TAG, "%s:%d: out of memory", __FUNCTION__, __LINE__); \
+			return COMMAND_LINE_ERROR_MEMORY;                              \
+		}                                                                  \
+	} while (0)
+
 int freerdp_client_settings_parse_command_line_arguments(rdpSettings* settings, int argc,
                                                          char** argv, BOOL allowUnknown)
 {
@@ -1466,9 +1542,10 @@
 	}
 
 	if (!ext && !assist)
-		compatibility = freerdp_client_detect_command_line(argc, argv, &flags);
+		compatibility = freerdp_client_detect_command_line(argc, argv, &flags, allowUnknown);
 	else
-		compatibility = freerdp_client_detect_command_line(argc - 1, &argv[1], &flags);
+		compatibility =
+		    freerdp_client_detect_command_line(argc - 1, &argv[1], &flags, allowUnknown);
 
 	settings->ProxyHostname = NULL;
 	settings->ProxyUsername = NULL;
@@ -1518,7 +1595,6 @@
 
 		CommandLineSwitchStart(arg) CommandLineSwitchCase(arg, "v")
 		{
-			assert(arg->Value);
 			free(settings->ServerHostname);
 			settings->ServerHostname = NULL;
 			p = strchr(arg->Value, '[');
@@ -1535,7 +1611,7 @@
 					if (!value_to_int(&p[1], &val, 1, UINT16_MAX))
 						return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-					length = (size_t)(p - arg->Value);
+					length = (int)(p - arg->Value);
 					settings->ServerPort = (UINT16)val;
 
 					if (!(settings->ServerHostname = (char*)calloc(length + 1UL, sizeof(char))))
@@ -1558,7 +1634,7 @@
 				if (!p2)
 					continue;
 
-				length = (size_t)(p2 - p);
+				length = p2 - p;
 
 				if (!(settings->ServerHostname = (char*)calloc(length, sizeof(char))))
 					return COMMAND_LINE_ERROR_MEMORY;
@@ -1588,7 +1664,6 @@
 		{
 			size_t count = 0;
 			char* cur = arg->Value;
-			assert(arg->Value);
 			settings->RedirectionPreferType = 0;
 
 			do
@@ -1658,7 +1733,6 @@
 		}
 		CommandLineSwitchCase(arg, "size")
 		{
-			assert(arg->Value);
 			p = strchr(arg->Value, 'x');
 
 			if (p)
@@ -1668,8 +1742,8 @@
 				if (!parseSizeValue(arg->Value, &w, &h) || (w > UINT16_MAX) || (h > UINT16_MAX))
 					return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-				settings->DesktopWidth = (UINT32)w;
-				settings->DesktopHeight = (UINT32)h;
+				settings->DesktopWidth = w;
+				settings->DesktopHeight = h;
 			}
 			else
 			{
@@ -1816,8 +1890,8 @@
 				if (!parseSizeValue(arg->Value, &w, &h) || (w > UINT16_MAX) || (h > UINT16_MAX))
 					return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-				settings->SmartSizingWidth = (UINT32)w;
-				settings->SmartSizingHeight = (UINT32)h;
+				settings->SmartSizingWidth = w;
+				settings->SmartSizingHeight = h;
 			}
 		}
 		CommandLineSwitchCase(arg, "bpp")
@@ -1936,7 +2010,6 @@
 
 			if (arg->Flags & COMMAND_LINE_VALUE_PRESENT)
 			{
-				assert(arg->Value);
 				p = strchr(arg->Value, ':');
 
 				if (p)
@@ -1947,7 +2020,7 @@
 					if (!value_to_int(&p[1], &val, 0, UINT32_MAX))
 						return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-					s = (size_t)(p - arg->Value);
+					s = (p - arg->Value);
 					settings->GatewayPort = (UINT32)val;
 
 					if (!(settings->GatewayHostname = (char*)calloc(s + 1UL, sizeof(char))))
@@ -1980,7 +2053,6 @@
 			if (arg->Flags & COMMAND_LINE_VALUE_PRESENT)
 			{
 				char* atPtr;
-				assert(arg->Value);
 				/* value is [scheme://][user:password@]hostname:port */
 				p = strstr(arg->Value, "://");
 
@@ -2056,7 +2128,7 @@
 					if (!value_to_int(&p[1], &val, 0, UINT16_MAX))
 						return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-					length = (size_t)(p - arg->Value);
+					length = (p - arg->Value);
 					settings->ProxyPort = (UINT16)val;
 					settings->ProxyHostname = (char*)malloc(length + 1);
 					strncpy(settings->ProxyHostname, arg->Value, length);
@@ -2147,11 +2219,6 @@
 			settings->DisableWallpaper = TRUE;
 			settings->DisableFullWindowDrag = TRUE;
 		}
-		CommandLineSwitchCase(arg, "app-workdir")
-		{
-			if (!copy_value(arg->Value, &settings->RemoteApplicationWorkingDir))
-				return COMMAND_LINE_ERROR_MEMORY;
-		}
 		CommandLineSwitchCase(arg, "load-balance-info")
 		{
 			if (!copy_value(arg->Value, (char**)&settings->LoadBalanceInfo))
@@ -2251,7 +2318,7 @@
 		}
 		CommandLineSwitchCase(arg, "network")
 		{
-			UINT32 type = 0;
+			int type = 0;
 
 			if (_stricmp(arg->Value, "modem") == 0)
 				type = CONNECTION_TYPE_MODEM;
@@ -2277,11 +2344,14 @@
 				if (!value_to_int(arg->Value, &val, 1, 7))
 					return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
-				type = (UINT32)val;
+				type = (int)val;
 			}
 
 			if (!freerdp_set_connection_type(settings, type))
+			{
+				WLog_ERR(TAG, "Cannot set the connection type %ld", type);
 				return COMMAND_LINE_ERROR;
+			}
 		}
 		CommandLineSwitchCase(arg, "fonts")
 		{
@@ -2308,8 +2378,8 @@
 				return COMMAND_LINE_ERROR_MISSING_ARGUMENT;
 			}
 
-			settings->DesktopPosX = (UINT32)x;
-			settings->DesktopPosY = (UINT32)y;
+			settings->DesktopPosX = x;
+			settings->DesktopPosY = y;
 		}
 		CommandLineSwitchCase(arg, "menu-anims")
 		{
@@ -2350,7 +2420,16 @@
 				else
 #endif
 				    if (_strnicmp("RFX", arg->Value, 4) != 0)
+				{
+					WLog_ERR(TAG,
+					         "Bad value for gfx option: %s, should be "
+#ifdef WITH_GFX_H264
+					         "AVC444,  AVC420 or "
+#endif
+					         "RFX",
+					         arg->Value);
 					return COMMAND_LINE_ERROR;
+				}
 			}
 		}
 		CommandLineSwitchCase(arg, "gfx-thin-client")
@@ -2390,7 +2469,11 @@
 					settings->GfxAVC444 = TRUE;
 				}
 				else if (_strnicmp("AVC420", arg->Value, 7) != 0)
+				{
+					WLog_ERR(TAG, "Bad value for gfx-h264 option: %s, should be AVC444 or AVC420",
+					         arg->Value);
 					return COMMAND_LINE_ERROR;
+				}
 			}
 		}
 #endif
@@ -2400,8 +2483,6 @@
 		}
 		CommandLineSwitchCase(arg, "rfx-mode")
 		{
-			assert(arg->Value);
-
 			if (strcmp(arg->Value, "video") == 0)
 				settings->RemoteFxCodecMode = 0x00;
 			else if (strcmp(arg->Value, "image") == 0)
@@ -2459,8 +2540,6 @@
 		}
 		CommandLineSwitchCase(arg, "sec")
 		{
-			assert(arg->Value);
-
 			if (strcmp("rdp", arg->Value) == 0) /* Standard RDP */
 			{
 				settings->RdpSecurity = TRUE;
@@ -2527,11 +2606,14 @@
 
 			if (arg->Flags & COMMAND_LINE_VALUE_PRESENT)
 			{
-				assert(arg->Value);
 				promptForPassword = (strncmp(arg->Value, "force", 6) == 0);
 
 				if (!promptForPassword)
+				{
+					WLog_ERR(TAG, "Bad value for from-stdin option: %s, should be force",
+					         arg->Value);
 					return COMMAND_LINE_ERROR;
+				}
 			}
 		}
 		CommandLineSwitchCase(arg, "log-level")
@@ -2539,12 +2621,18 @@
 			wLog* root = WLog_GetRoot();
 
 			if (!WLog_SetStringLogLevel(root, arg->Value))
+			{
+				WLog_ERR(TAG, "Could not set the log-level: %s", arg->Value);
 				return COMMAND_LINE_ERROR;
+			}
 		}
 		CommandLineSwitchCase(arg, "log-filters")
 		{
 			if (!WLog_AddStringLogFilters(arg->Value))
+			{
+				WLog_ERR(TAG, "Could not add the log-filter: %s", arg->Value);
 				return COMMAND_LINE_ERROR;
+			}
 		}
 		CommandLineSwitchCase(arg, "sec-rdp")
 		{
@@ -2564,7 +2652,6 @@
 		}
 		CommandLineSwitchCase(arg, "tls-ciphers")
 		{
-			assert(arg->Value);
 			free(settings->AllowedTlsCiphers);
 
 			if (strcmp(arg->Value, "netmon") == 0)
@@ -2605,10 +2692,6 @@
 		{
 			settings->AutoAcceptCertificate = enable;
 		}
-		CommandLineSwitchCase(arg, "cert-deny")
-		{
-			settings->AutoDenyCertificate = enable;
-		}
 		CommandLineSwitchCase(arg, "authentication")
 		{
 			settings->Authentication = enable;
@@ -2714,7 +2797,7 @@
 		}
 		CommandLineSwitchCase(arg, "offscreen-cache")
 		{
-			settings->OffscreenSupportLevel = (UINT32)enable;
+			settings->OffscreenSupportLevel = enable;
 		}
 		CommandLineSwitchCase(arg, "glyph-cache")
 		{
@@ -2723,7 +2806,6 @@
 		CommandLineSwitchCase(arg, "codec-cache")
 		{
 			settings->BitmapCacheV3Enabled = TRUE;
-			assert(arg->Value);
 
 			if (strcmp(arg->Value, "rfx") == 0)
 			{
@@ -2811,19 +2893,26 @@
 			if (!value_to_int(arg->Value, &val, 0, 1000))
 				return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
 
+			if (val > 1000)
+			{
+				WLog_ERR(TAG,
+				         "auto-reconnect-max-retries value is too big %lu,  should be in [0..1000]",
+				         settings->AutoReconnectMaxRetries);
+				return COMMAND_LINE_ERROR;
+			}
+
 			settings->AutoReconnectMaxRetries = (UINT32)val;
 		}
 		CommandLineSwitchCase(arg, "reconnect-cookie")
 		{
 			BYTE* base64 = NULL;
 			int length;
-			assert(arg->Value);
 			crypto_base64_decode((const char*)(arg->Value), (int)strlen(arg->Value), &base64,
 			                     &length);
 
 			if ((base64 != NULL) && (length == sizeof(ARC_SC_PRIVATE_PACKET)))
 			{
-				memcpy(settings->ServerAutoReconnectCookie, base64, (size_t)length);
+				memcpy(settings->ServerAutoReconnectCookie, base64, length);
 			}
 			else
 			{
@@ -2919,21 +3008,127 @@
 			if (!copy_value(arg->Value, &settings->ActionScript))
 				return COMMAND_LINE_ERROR_MEMORY;
 		}
-		CommandLineSwitchCase(arg, "rdp2tcp")
+		CommandLineSwitchCase(arg, "fipsmode")
+		{
+			settings->FIPSMode = enable;
+		}
+		CommandLineSwitchCase(arg, "smartcard-logon")
+		{
+			if (!settings->SmartcardLogon)
+				activate_smartcard_logon(settings);
+		}
+		CommandLineSwitchCase(arg, "pin")
 		{
-			free(settings->RDP2TCPArgs);
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/pin option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+			else if (!copy_value(arg->Value, &settings->Pin))
+			{
+				return COMMAND_LINE_ERROR_MEMORY;
+			}
+
+			/* overwrite argument so it won't appear in ps */
+			p = arg->Value;
 
-			if (!(settings->RDP2TCPArgs = _strdup(arg->Value)))
+			while (*p)
+				*(p++) = 'X';
+
+			while (*arg->Value)
+				*(arg->Value++) = 'X';
+		}
+		CommandLineSwitchCase(arg, "pkcs11-module")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/pkcs11-module option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+			else if (!copy_value(arg->Value, &settings->Pkcs11Module))
+			{
 				return COMMAND_LINE_ERROR_MEMORY;
+			}
 		}
-		CommandLineSwitchCase(arg, "fipsmode")
+		CommandLineSwitchCase(arg, "pkinit-anchors")
 		{
-			settings->FIPSMode = enable;
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/pkinit-anchors option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+			else if (!copy_value(arg->Value, &settings->PkinitAnchors))
+			{
+				return COMMAND_LINE_ERROR_MEMORY;
+			}
 		}
-		CommandLineSwitchCase(arg, "smartcard-logon")
+		CommandLineSwitchCase(arg, "start-time")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/start-time option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+
+			/* Let kinit parse time strings according to krb5_string_to_deltat syntax. */
+			CHECK_MEMORY(copy_value(arg->Value, &settings->KerberosStartTime));
+		}
+		CommandLineSwitchCase(arg, "lifetime")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/lifetime option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+
+			/* Let kinit parse time strings according to krb5_string_to_deltat syntax. */
+			CHECK_MEMORY(copy_value(arg->Value, &settings->KerberosLifeTime));
+		}
+		CommandLineSwitchCase(arg, "renewable-lifetime")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG,
+				         "/renewable-lifetime option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+
+			/* Let kinit parse time strings according to krb5_string_to_deltat syntax. */
+			CHECK_MEMORY(copy_value(arg->Value, &settings->KerberosRenewableLifeTime));
+		}
+		CommandLineSwitchCase(arg, "T")
 		{
 			if (!settings->SmartcardLogon)
-				activate_smartcard_logon_rdp(settings);
+			{
+				WLog_ERR(TAG, "/T option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+
+			settings->Krb5Trace = TRUE;
+		}
+		CommandLineSwitchCase(arg, "csp")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/csp option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+			else if (!copy_value(arg->Value, &settings->CspName))
+			{
+				return COMMAND_LINE_ERROR_MEMORY;
+			}
+		}
+		CommandLineSwitchCase(arg, "card")
+		{
+			if (!settings->SmartcardLogon)
+			{
+				WLog_ERR(TAG, "/card option can only be given after /smartcard-logon");
+				return COMMAND_LINE_ERROR;
+			}
+			else if (!copy_value(arg->Value, &settings->CardName))
+			{
+				return COMMAND_LINE_ERROR_MEMORY;
+			}
 		}
 		CommandLineSwitchDefault(arg)
 		{
@@ -2950,13 +3145,27 @@
 			BOOL ret;
 			free(settings->Domain);
 			ret = freerdp_parse_username(user, &settings->Username, &settings->Domain);
-			free(user);
 
 			if (!ret)
+			{
+				WLog_ERR(TAG, "Could not parse username %s", user);
+				free(user);
 				return COMMAND_LINE_ERROR;
+			}
+
+			free(user);
 		}
 		else
+		{
 			settings->Username = user;
+		}
+
+		if (settings->SmartcardLogon)
+		{
+			/* We don't need the Username for smartcard logon */
+			free(settings->Username);
+			settings->Username = NULL;
+		}
 	}
 
 	if (gwUser)
@@ -2972,7 +3181,10 @@
 			free(gwUser);
 
 			if (!ret)
+			{
+				WLog_ERR(TAG, "Could not parse gateway username %s", gwUser);
 				return COMMAND_LINE_ERROR;
+			}
 		}
 		else
 			settings->GatewayUsername = gwUser;
@@ -2987,10 +3199,15 @@
 			settings->Password = calloc(size, sizeof(char));
 
 			if (!settings->Password)
-				return COMMAND_LINE_ERROR;
+			{
+				return COMMAND_LINE_ERROR_MEMORY;
+			}
 
 			if (!freerdp_passphrase_read("Password: ", settings->Password, size, 1))
+			{
+				WLog_ERR(TAG, "Could not read password.");
 				return COMMAND_LINE_ERROR;
+			}
 		}
 
 		if (settings->GatewayEnabled && !settings->GatewayUseSameCredentials)
@@ -3000,11 +3217,14 @@
 				settings->GatewayPassword = calloc(size, sizeof(char));
 
 				if (!settings->GatewayPassword)
-					return COMMAND_LINE_ERROR;
+					return COMMAND_LINE_ERROR_MEMORY;
 
 				if (!freerdp_passphrase_read("Gateway Password: ", settings->GatewayPassword, size,
 				                             1))
+				{
+					WLog_ERR(TAG, "Could not read gateway password.");
 					return COMMAND_LINE_ERROR;
+				}
 			}
 		}
 	}
@@ -3053,7 +3273,7 @@
 {
 	PVIRTUALCHANNELENTRY entry = NULL;
 	PVIRTUALCHANNELENTRYEX entryEx = NULL;
-	entryEx = (PVIRTUALCHANNELENTRYEX)(void*)freerdp_load_channel_addin_entry(
+	entryEx = (PVIRTUALCHANNELENTRYEX)freerdp_load_channel_addin_entry(
 	    name, NULL, NULL, FREERDP_ADDIN_CHANNEL_STATIC | FREERDP_ADDIN_CHANNEL_ENTRYEX);
 
 	if (!entryEx)
@@ -3223,13 +3443,6 @@
 			return FALSE;
 	}
 
-	if (settings->RDP2TCPArgs)
-	{
-		if (!freerdp_client_load_static_channel_addin(channels, settings, "rdp2tcp",
-		                                              settings->RDP2TCPArgs))
-			return FALSE;
-	}
-
 	for (index = 0; index < settings->StaticChannelCount; index++)
 	{
 		args = settings->StaticChannelArray[index];
diff -urN client/common/cmdline.h ../../informatimago/FreeRDP/client/common/cmdline.h
--- client/common/cmdline.h	2019-07-25 19:51:00.421895240 +0300
+++ ../../informatimago/FreeRDP/client/common/cmdline.h	2019-07-25 20:11:24.439965189 +0300
@@ -42,8 +42,6 @@
 	  "Remote application icon for user interface" },
 	{ "app-name", COMMAND_LINE_VALUE_REQUIRED, "<app-name>", NULL, NULL, -1, NULL,
 	  "Remote application name for user interface" },
-	{ "app-workdir", COMMAND_LINE_VALUE_REQUIRED, "<workspace path>", NULL, NULL, -1, NULL,
-	  "Remote application workspace path" },
 	{ "assistance", COMMAND_LINE_VALUE_REQUIRED, "<password>", NULL, NULL, -1, NULL,
 	  "Remote assistance password" },
 	{ "async-channels", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueFalse, NULL, -1, NULL,
@@ -62,14 +60,12 @@
 	  "Automatic reconnection" },
 	{ "auto-reconnect-max-retries", COMMAND_LINE_VALUE_REQUIRED, "<retries>", NULL, NULL, -1, NULL,
 	  "Automatic reconnection maximum retries, 0 for unlimited [0,1000]" },
-	{ "bitmap-cache", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueFalse, NULL, -1, NULL,
+	{ "bitmap-cache", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueTrue, NULL, -1, NULL,
 	  "bitmap cache" },
 	{ "bpp", COMMAND_LINE_VALUE_REQUIRED, "<depth>", "16", NULL, -1, NULL,
 	  "Session bpp (color depth)" },
 	{ "buildconfig", COMMAND_LINE_VALUE_FLAG | COMMAND_LINE_PRINT_BUILDCONFIG, NULL, NULL, NULL, -1,
 	  NULL, "Print the build configuration" },
-	{ "cert-deny", COMMAND_LINE_VALUE_FLAG, NULL, NULL, NULL, -1, NULL,
-	  "Automatically abort connection for any certificate that can not be validated." },
 	{ "cert-ignore", COMMAND_LINE_VALUE_FLAG, NULL, NULL, NULL, -1, NULL, "Ignore certificate" },
 	{ "cert-name", COMMAND_LINE_VALUE_REQUIRED, "<name>", NULL, NULL, -1, NULL,
 	  "Certificate name" },
@@ -112,8 +108,7 @@
 	{ "fipsmode", COMMAND_LINE_VALUE_BOOL, NULL, NULL, NULL, -1, NULL, "FIPS mode" },
 	{ "floatbar", COMMAND_LINE_VALUE_OPTIONAL,
 	  "sticky:[on|off],default:[visible|hidden],show:[always|fullscreen||window]", NULL, NULL, -1,
-	  NULL,
-	  "floatbar is disabled by default (when enabled defaults to sticky in fullscreen mode)" },
+	  NULL, "floatbar (default sticky in fullscreen mode)" },
 	{ "fonts", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueTrue, NULL, -1, NULL,
 	  "smooth fonts (ClearType)" },
 	{ "frame-ack", COMMAND_LINE_VALUE_REQUIRED, "<number>", NULL, NULL, -1, NULL,
@@ -158,7 +153,7 @@
 	{ "gat", COMMAND_LINE_VALUE_REQUIRED, "<access token>", NULL, NULL, -1, NULL,
 	  "Gateway Access Token" },
 	{ "h", COMMAND_LINE_VALUE_REQUIRED, "<height>", "768", NULL, -1, NULL, "Height" },
-	{ "heartbeat", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueTrue, NULL, -1, NULL,
+	{ "heartbeat", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueFalse, NULL, -1, NULL,
 	  "Support heartbeat PDUs" },
 	{ "help", COMMAND_LINE_VALUE_FLAG | COMMAND_LINE_PRINT_HELP, NULL, NULL, NULL, -1, "?",
 	  "Print help" },
@@ -215,7 +210,7 @@
 	  "[modem|broadband|broadband-low|broadband-high|wan|lan|auto]", NULL, NULL, -1, NULL,
 	  "Network connection type" },
 	{ "nsc", COMMAND_LINE_VALUE_FLAG, NULL, NULL, NULL, -1, "nscodec", "NSCodec support" },
-	{ "offscreen-cache", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueFalse, NULL, -1, NULL,
+	{ "offscreen-cache", COMMAND_LINE_VALUE_BOOL, NULL, BoolValueTrue, NULL, -1, NULL,
 	  "offscreen bitmap cache" },
 	{ "orientation", COMMAND_LINE_VALUE_REQUIRED, "[0|90|180|270]", NULL, NULL, -1, NULL,
 	  "Orientation of display in degrees" },
@@ -250,8 +245,6 @@
 	  "Pass the hash (restricted admin mode)" },
 	{ "pwidth", COMMAND_LINE_VALUE_REQUIRED, "<width>", NULL, NULL, -1, NULL,
 	  "Physical width of display (in millimeters)" },
-	{ "rdp2tcp", COMMAND_LINE_VALUE_REQUIRED, "<executable path[:arg...]>", NULL, NULL, -1, NULL,
-	  "TCP redirection" },
 	{ "reconnect-cookie", COMMAND_LINE_VALUE_REQUIRED, "<base64-cookie>", NULL, NULL, -1, NULL,
 	  "Pass base64 reconnect cookie to the connection" },
 	{ "redirect-prefer", COMMAND_LINE_VALUE_REQUIRED, "<FQDN|IP|NETBIOS>,[...]", NULL, NULL, -1,
@@ -293,6 +286,20 @@
 	  "Redirect the smartcard devices containing any of the <str> in their names." },
 	{ "smartcard-logon", COMMAND_LINE_VALUE_FLAG, NULL, NULL, NULL, -1, NULL,
 	  "Activates Smartcard Logon authentication. (EXPERIMENTAL: NLA not supported)" },
+	{ "pin", COMMAND_LINE_VALUE_OPTIONAL, "<PIN code>", NULL, NULL, -1, NULL, "PIN code" },
+	{ "pkcs11-module", COMMAND_LINE_VALUE_OPTIONAL, "<module>", NULL, NULL, -1, NULL,
+	  "Module PKCS11" },
+	{ "pkinit-anchors", COMMAND_LINE_VALUE_OPTIONAL, "<pkinit anchors>", NULL, NULL, -1, NULL,
+	  "PKINIT anchors" },
+	{ "start-time", COMMAND_LINE_VALUE_OPTIONAL, "<start time>", NULL, NULL, -1, NULL,
+	  "Kerberos Ticket start time" },
+	{ "lifetime", COMMAND_LINE_VALUE_OPTIONAL, "<lifetime>", NULL, NULL, -1, NULL,
+	  "Kerberos Ticket lifetime" },
+	{ "renewable-lifetime", COMMAND_LINE_VALUE_OPTIONAL, "<renewable lifetime>", NULL, NULL, -1,
+	  NULL, "Kerberos Ticket renewable lifetime" },
+	{ "T", COMMAND_LINE_VALUE_OPTIONAL, NULL, NULL, NULL, -1, NULL, "Activate KRB5 PKINIT Trace" },
+	{ "csp", COMMAND_LINE_VALUE_OPTIONAL, "<csp name>", NULL, NULL, -1, NULL, "CSP Name" },
+	{ "card", COMMAND_LINE_VALUE_OPTIONAL, "<card name>", NULL, NULL, -1, NULL, "Card Name" },
 	{ "sound", COMMAND_LINE_VALUE_OPTIONAL,
 	  "[sys:<sys>,][dev:<dev>,][format:<format>,][rate:<rate>,][channel:<channel>,][latency:<"
 	  "latency>,][quality:<quality>]",
diff -urN client/common/compatibility.c ../../informatimago/FreeRDP/client/common/compatibility.c
--- client/common/compatibility.c	2019-07-25 19:51:00.465895458 +0300
+++ ../../informatimago/FreeRDP/client/common/compatibility.c	2019-07-25 20:11:24.483965406 +0300
@@ -423,11 +423,9 @@
 }
 static int freerdp_client_old_command_line_post_filter(void* context, COMMAND_LINE_ARGUMENT_A* arg)
 {
-	WINPR_UNUSED(context);
-	WINPR_UNUSED(arg);
 	return 0;
 }
-int freerdp_detect_old_command_line_syntax(int argc, char** argv, size_t* count)
+int freerdp_detect_old_command_line_syntax(int argc, char** argv, int* count)
 {
 	int status;
 	DWORD flags;
@@ -436,7 +434,7 @@
 	COMMAND_LINE_ARGUMENT_A* arg;
 	*count = 0;
 	detect_status = 0;
-	flags = COMMAND_LINE_SEPARATOR_SPACE | COMMAND_LINE_SILENCE_PARSER;
+	flags = COMMAND_LINE_SEPARATOR_SPACE;
 	flags |= COMMAND_LINE_SIGIL_DASH | COMMAND_LINE_SIGIL_DOUBLE_DASH;
 	flags |= COMMAND_LINE_SIGIL_NOT_ESCAPED;
 	settings = (rdpSettings*)calloc(1, sizeof(rdpSettings));
@@ -526,8 +524,6 @@
 
 	arg = old_args;
 	errno = 0;
-	settings->BitmapCacheEnabled = TRUE;
-	settings->OffscreenSupportLevel = TRUE;
 
 	do
 	{
@@ -671,9 +667,9 @@
 		}
 		CommandLineSwitchCase(arg, "x")
 		{
-			unsigned long type;
+			long type;
 			char* pEnd;
-			type = strtoul(arg->Value, &pEnd, 16);
+			type = strtol(arg->Value, &pEnd, 16);
 
 			if (errno != 0)
 				return COMMAND_LINE_ERROR_UNEXPECTED_VALUE;
diff -urN client/common/compatibility.h ../../informatimago/FreeRDP/client/common/compatibility.h
--- client/common/compatibility.h	2019-07-25 19:51:00.469895478 +0300
+++ ../../informatimago/FreeRDP/client/common/compatibility.h	2019-07-25 20:11:24.487965427 +0300
@@ -23,8 +23,8 @@
 #include <freerdp/api.h>
 #include <freerdp/freerdp.h>
 
-FREERDP_LOCAL int freerdp_detect_old_command_line_syntax(int argc, char** argv, size_t* count);
-FREERDP_LOCAL int freerdp_client_parse_old_command_line_arguments(int argc, char** argv,
-                                                                  rdpSettings* settings);
+FREERDP_API int freerdp_detect_old_command_line_syntax(int argc, char** argv, int* count);
+FREERDP_API int freerdp_client_parse_old_command_line_arguments(int argc, char** argv,
+                                                                rdpSettings* settings);
 
 #endif /* FREERDP_CLIENT_COMMON_COMPATIBILITY_H */
diff -urN client/common/file.c ../../informatimago/FreeRDP/client/common/file.c
--- client/common/file.c	2019-07-25 19:51:00.497895617 +0300
+++ ../../informatimago/FreeRDP/client/common/file.c	2019-07-25 20:11:24.507965526 +0300
@@ -47,151 +47,12 @@
 #include <freerdp/log.h>
 #define TAG CLIENT_TAG("common")
 
-/*#define DEBUG_CLIENT_FILE	1*/
+//#define DEBUG_CLIENT_FILE	1
 
 static BYTE BOM_UTF16_LE[2] = { 0xFF, 0xFE };
 
 #define INVALID_INTEGER_VALUE 0xFFFFFFFF
 
-#define RDP_FILE_LINE_FLAG_FORMATTED 0x00000001
-#define RDP_FILE_LINE_FLAG_STANDARD 0x00000002
-#define RDP_FILE_LINE_FLAG_TYPE_STRING 0x00000010
-#define RDP_FILE_LINE_FLAG_TYPE_INTEGER 0x00000020
-#define RDP_FILE_LINE_FLAG_TYPE_BINARY 0x00000040
-
-struct rdp_file_line
-{
-	size_t index;
-	char* text;
-	DWORD flags;
-	char* name;
-	LPSTR sValue;
-	DWORD iValue;
-	PBYTE bValue;
-	int valueLength;
-};
-typedef struct rdp_file_line rdpFileLine;
-
-struct rdp_file
-{
-	DWORD UseMultiMon;                 /* use multimon */
-	DWORD ScreenModeId;                /* screen mode id */
-	DWORD SpanMonitors;                /* span monitors */
-	DWORD SmartSizing;                 /* smartsizing */
-	DWORD EnableSuperSpan;             /* enablesuperpan */
-	DWORD SuperSpanAccelerationFactor; /* superpanaccelerationfactor */
-
-	DWORD DesktopWidth;  /* desktopwidth */
-	DWORD DesktopHeight; /* desktopheight */
-	DWORD DesktopSizeId; /* desktop size id */
-	DWORD SessionBpp;    /* session bpp */
-
-	DWORD Compression;       /* compression */
-	DWORD KeyboardHook;      /* keyboardhook */
-	DWORD DisableCtrlAltDel; /* disable ctrl+alt+del */
-
-	DWORD AudioMode;         /* audiomode */
-	DWORD AudioQualityMode;  /* audioqualitymode */
-	DWORD AudioCaptureMode;  /* audiocapturemode */
-	DWORD VideoPlaybackMode; /* videoplaybackmode */
-
-	DWORD ConnectionType; /* connection type */
-
-	DWORD NetworkAutoDetect;   /* networkautodetect */
-	DWORD BandwidthAutoDetect; /* bandwidthautodetect */
-
-	DWORD PinConnectionBar;     /* pinconnectionbar */
-	DWORD DisplayConnectionBar; /* displayconnectionbar */
-
-	DWORD WorkspaceId;              /* workspaceid */
-	DWORD EnableWorkspaceReconnect; /* enableworkspacereconnect */
-
-	DWORD DisableWallpaper;        /* disable wallpaper */
-	DWORD AllowFontSmoothing;      /* allow font smoothing */
-	DWORD AllowDesktopComposition; /* allow desktop composition */
-	DWORD DisableFullWindowDrag;   /* disable full window drag */
-	DWORD DisableMenuAnims;        /* disable menu anims */
-	DWORD DisableThemes;           /* disable themes */
-	DWORD DisableCursorSetting;    /* disable cursor setting */
-
-	DWORD BitmapCacheSize;          /* bitmapcachesize */
-	DWORD BitmapCachePersistEnable; /* bitmapcachepersistenable */
-
-	LPSTR Username;   /* username */
-	LPSTR Domain;     /* domain */
-	LPSTR Password;   /*password*/
-	PBYTE Password51; /* password 51 */
-
-	LPSTR FullAddress;          /* full address */
-	LPSTR AlternateFullAddress; /* alternate full address */
-	DWORD ServerPort;           /* server port */
-
-	DWORD RedirectDrives;              /* redirectdrives */
-	DWORD RedirectPrinters;            /* redirectprinters */
-	DWORD RedirectComPorts;            /* redirectcomports */
-	DWORD RedirectSmartCards;          /* redirectsmartcards */
-	DWORD RedirectClipboard;           /* redirectclipboard */
-	DWORD RedirectPosDevices;          /* redirectposdevices */
-	DWORD RedirectDirectX;             /* redirectdirectx */
-	DWORD DisablePrinterRedirection;   /* disableprinterredirection */
-	DWORD DisableClipboardRedirection; /* disableclipboardredirection */
-	LPSTR UsbDevicesToRedirect;        /* usbdevicestoredirect */
-
-	DWORD ConnectToConsole;        /* connect to console */
-	DWORD AdministrativeSession;   /* administrative session */
-	DWORD AutoReconnectionEnabled; /* autoreconnection enabled */
-	DWORD AutoReconnectMaxRetries; /* autoreconnect max retries */
-
-	DWORD PublicMode;             /* public mode */
-	DWORD AuthenticationLevel;    /* authentication level */
-	DWORD PromptCredentialOnce;   /* promptcredentialonce */
-	DWORD PromptForCredentials;   /* prompt for credentials */
-	DWORD NegotiateSecurityLayer; /* negotiate security layer */
-	DWORD EnableCredSSPSupport;   /* enablecredsspsupport */
-	LPSTR LoadBalanceInfo;        /* loadbalanceinfo */
-
-	DWORD RemoteApplicationMode;             /* remoteapplicationmode */
-	LPSTR RemoteApplicationName;             /* remoteapplicationname */
-	LPSTR RemoteApplicationIcon;             /* remoteapplicationicon */
-	LPSTR RemoteApplicationProgram;          /* remoteapplicationprogram */
-	LPSTR RemoteApplicationFile;             /* remoteapplicationfile */
-	LPSTR RemoteApplicationGuid;             /* remoteapplicationguid */
-	LPSTR RemoteApplicationCmdLine;          /* remoteapplicationcmdline */
-	DWORD RemoteApplicationExpandCmdLine;    /* remoteapplicationexpandcmdline */
-	DWORD RemoteApplicationExpandWorkingDir; /* remoteapplicationexpandworkingdir */
-	DWORD DisableConnectionSharing;          /* disableconnectionsharing */
-	DWORD DisableRemoteAppCapsCheck;         /* disableremoteappcapscheck */
-
-	LPSTR AlternateShell;        /* alternate shell */
-	LPSTR ShellWorkingDirectory; /* shell working directory */
-
-	LPSTR GatewayHostname;           /* gatewayhostname */
-	DWORD GatewayUsageMethod;        /* gatewayusagemethod */
-	DWORD GatewayProfileUsageMethod; /* gatewayprofileusagemethod */
-	DWORD GatewayCredentialsSource;  /* gatewaycredentialssource */
-	LPSTR GatewayAccessToken;        /* gatewayaccesstoken */
-
-	DWORD UseRedirectionServerName; /* use redirection server name */
-
-	DWORD RdgIsKdcProxy; /* rdgiskdcproxy */
-	LPSTR KdcProxyName;  /* kdcproxyname */
-
-	LPSTR DrivesToRedirect;  /* drivestoredirect */
-	LPSTR DevicesToRedirect; /* devicestoredirect */
-	LPSTR WinPosStr;         /* winposstr */
-
-	LPSTR PreconnectionBlob; /* pcb */
-
-	size_t lineCount;
-	size_t lineSize;
-	rdpFileLine* lines;
-
-	int argc;
-	char** argv;
-	size_t argSize;
-	void* context;
-};
-
 /*
  * Set an integer in a rdpFile
  *
@@ -202,7 +63,7 @@
 static int freerdp_client_rdp_file_set_integer(rdpFile* file, const char* name, int value,
                                                int index)
 {
-	int standard = 0;
+	int standard = 1;
 #ifdef DEBUG_CLIENT_FILE
 	WLog_DBG(TAG, "%s:i:%d", name, value);
 #endif
@@ -307,9 +168,10 @@
 		file->AuthenticationLevel = value;
 	else if (_stricmp(name, "promptcredentialonce") == 0)
 		file->PromptCredentialOnce = value;
-	else if ((_stricmp(name, "prompt for credentials") == 0) ||
-	         (_stricmp(name, "prompt for credentials on client") == 0))
+	else if (_stricmp(name, "prompt for credentials") == 0)
 		file->PromptForCredentials = value;
+	else if (_stricmp(name, "promptcredentialonce") == 0)
+		file->PromptForCredentialsOnce = value;
 	else if (_stricmp(name, "negotiate security layer") == 0)
 		file->NegotiateSecurityLayer = value;
 	else if (_stricmp(name, "enablecredsspsupport") == 0)
@@ -348,7 +210,7 @@
 		file->lines[index].flags = RDP_FILE_LINE_FLAG_FORMATTED;
 		file->lines[index].flags |= RDP_FILE_LINE_FLAG_TYPE_INTEGER;
 
-		if (standard == 0)
+		if (standard)
 			file->lines[index].flags |= RDP_FILE_LINE_FLAG_STANDARD;
 
 		file->lines[index].valueLength = 0;
@@ -365,10 +227,7 @@
 	ivalue = strtol(value, NULL, 0);
 
 	if ((errno != 0) || (ivalue < INT32_MIN) || (ivalue > INT32_MAX))
-	{
-		WLog_ERR(TAG, "Failed to convert RDP file integer option %s [value=%s]", name, value);
 		return FALSE;
-	}
 
 	if (freerdp_client_rdp_file_set_integer(file, name, ivalue, index) < 0)
 		return FALSE;
@@ -474,11 +333,11 @@
 	return standard;
 }
 
-static BOOL freerdp_client_add_option(rdpFile* file, const char* option)
+static BOOL freerdp_client_add_option(rdpFile* file, char* option)
 {
 	while ((file->argc + 1) > file->argSize)
 	{
-		size_t new_size;
+		int new_size;
 		char** new_argv;
 		new_size = file->argSize * 2;
 		new_argv = (char**)realloc(file->argv, new_size * sizeof(char*));
@@ -499,15 +358,14 @@
 	return TRUE;
 }
 
-static SSIZE_T freerdp_client_parse_rdp_file_add_line(rdpFile* file, const char* line,
-                                                      SSIZE_T index)
+static int freerdp_client_parse_rdp_file_add_line(rdpFile* file, char* line, int index)
 {
 	if (index < 0)
-		index = (SSIZE_T)file->lineCount;
+		index = file->lineCount;
 
 	while ((file->lineCount + 1) > file->lineSize)
 	{
-		size_t new_size;
+		int new_size;
 		rdpFileLine* new_line;
 		new_size = file->lineSize * 2;
 		new_line = (rdpFileLine*)realloc(file->lines, new_size * sizeof(rdpFileLine));
@@ -525,7 +383,7 @@
 	if (!file->lines[file->lineCount].text)
 		return -1;
 
-	file->lines[file->lineCount].index = (size_t)index;
+	file->lines[file->lineCount].index = index;
 	(file->lineCount)++;
 	return index;
 }
@@ -536,10 +394,7 @@
 	char* valueA = _strdup(value);
 
 	if (!valueA)
-	{
-		WLog_ERR(TAG, "Failed to convert RDP file string option %s [value=%s]", name, value);
 		return FALSE;
-	}
 
 	if (freerdp_client_rdp_file_set_string(file, name, valueA, index) == -1)
 		ret = FALSE;
@@ -548,19 +403,13 @@
 	return ret;
 }
 
-static BOOL freerdp_client_parse_rdp_file_option(rdpFile* file, const char* option, SSIZE_T index)
+static BOOL freerdp_client_parse_rdp_file_option(rdpFile* file, char* option, int index)
 {
 	return freerdp_client_add_option(file, option);
 }
 
 BOOL freerdp_client_parse_rdp_file_buffer(rdpFile* file, const BYTE* buffer, size_t size)
 {
-	return freerdp_client_parse_rdp_file_buffer_ex(file, buffer, size, NULL);
-}
-
-BOOL freerdp_client_parse_rdp_file_buffer_ex(rdpFile* file, const BYTE* buffer, size_t size,
-                                             rdp_file_fkt_parse parse)
-{
 	BOOL rc = FALSE;
 	int index;
 	size_t length;
@@ -580,10 +429,7 @@
 		size = size / 2 - 1;
 
 		if (ConvertFromUnicode(CP_UTF8, 0, (LPCWSTR)(&buffer[2]), size, &copy, 0, NULL, NULL) < 0)
-		{
-			WLog_ERR(TAG, "Failed to convert RDP file from UCS2 to UTF8");
 			return FALSE;
-		}
 	}
 	else
 	{
@@ -636,10 +482,7 @@
 			name = beg;
 			value = &d2[1];
 
-			if (parse && parse(file->context, name, *type, value))
-			{
-			}
-			else if (*type == 'i')
+			if (*type == 'i')
 			{
 				/* integer type */
 				if (!freerdp_client_parse_rdp_file_integer(file, name, value, index))
@@ -654,7 +497,6 @@
 			else if (*type == 'b')
 			{
 				/* binary type */
-				WLog_ERR(TAG, "Unsupported RDP file binary option %s [value=%s]", name, value);
 			}
 		}
 
@@ -671,11 +513,6 @@
 
 BOOL freerdp_client_parse_rdp_file(rdpFile* file, const char* name)
 {
-	return freerdp_client_parse_rdp_file_ex(file, name, NULL);
-}
-
-BOOL freerdp_client_parse_rdp_file_ex(rdpFile* file, const char* name, rdp_file_fkt_parse parse)
-{
 	BOOL status;
 	BYTE* buffer;
 	FILE* fp = NULL;
@@ -684,10 +521,7 @@
 	fp = fopen(name, "r");
 
 	if (!fp)
-	{
-		WLog_ERR(TAG, "Failed to open RDP file %s", name);
 		return FALSE;
-	}
 
 	_fseeki64(fp, 0, SEEK_END);
 	file_size = _ftelli64(fp);
@@ -695,7 +529,6 @@
 
 	if (file_size < 1)
 	{
-		WLog_ERR(TAG, "RDP file %s is empty", name);
 		fclose(fp);
 		return FALSE;
 	}
@@ -720,14 +553,13 @@
 
 	if (read_size < 1)
 	{
-		WLog_ERR(TAG, "Could not read from RDP file %s", name);
 		free(buffer);
 		return FALSE;
 	}
 
 	buffer[file_size] = '\0';
 	buffer[file_size + 1] = '\0';
-	status = freerdp_client_parse_rdp_file_buffer_ex(file, buffer, file_size, parse);
+	status = freerdp_client_parse_rdp_file_buffer(file, buffer, file_size);
 	free(buffer);
 	return status;
 }
@@ -743,7 +575,7 @@
 	{                                                                                 \
 		if                                                                            \
 			SETTING_MODIFIED(_settings, _field) _target = _strdup(_settings->_field); \
-		if (!_target && _settings->_field)                                            \
+		if (!_target)                                                                 \
 			return FALSE;                                                             \
 	} while (0)
 
@@ -754,7 +586,6 @@
 	SETTING_MODIFIED_SET_STRING(file->Password, settings, Password);
 	SETTING_MODIFIED_SET(file->ServerPort, settings, ServerPort);
 	SETTING_MODIFIED_SET_STRING(file->FullAddress, settings, ServerHostname);
-	SETTING_MODIFIED_SET_STRING(file->AlternateFullAddress, settings, ServerHostname);
 	SETTING_MODIFIED_SET(file->DesktopWidth, settings, DesktopWidth);
 	SETTING_MODIFIED_SET(file->DesktopHeight, settings, DesktopHeight);
 	SETTING_MODIFIED_SET(file->SessionBpp, settings, ColorDepth);
@@ -780,7 +611,6 @@
 	SETTING_MODIFIED_SET_STRING(file->GatewayAccessToken, settings, GatewayAccessToken);
 	SETTING_MODIFIED_SET(file->GatewayUsageMethod, settings, GatewayUsageMethod);
 	SETTING_MODIFIED_SET(file->PromptCredentialOnce, settings, GatewayUseSameCredentials);
-	SETTING_MODIFIED_SET(file->PromptForCredentials, settings, PromptForCredentials);
 	SETTING_MODIFIED_SET(file->RemoteApplicationMode, settings, RemoteApplicationMode);
 	SETTING_MODIFIED_SET_STRING(file->RemoteApplicationProgram, settings, RemoteApplicationProgram);
 	SETTING_MODIFIED_SET_STRING(file->RemoteApplicationName, settings, RemoteApplicationName);
@@ -797,14 +627,21 @@
 BOOL freerdp_client_write_rdp_file(const rdpFile* file, const char* name, BOOL unicode)
 {
 	FILE* fp;
-	size_t size;
+	int length;
 	char* buffer;
 	int status = 0;
 	WCHAR* unicodestr = NULL;
-	size = freerdp_client_write_rdp_file_buffer(file, NULL, 0);
-	buffer = (char*)calloc((size + 1), sizeof(char));
+	length = (int)freerdp_client_write_rdp_file_buffer(file, NULL, 0);
 
-	if (freerdp_client_write_rdp_file_buffer(file, buffer, size + 1) != size)
+	if (length < 0)
+	{
+		WLog_ERR(TAG, "freerdp_client_write_rdp_file: error determining buffer size.");
+		return FALSE;
+	}
+
+	buffer = (char*)calloc((length + 1), sizeof(char));
+
+	if (freerdp_client_write_rdp_file_buffer(file, buffer, length + 1) != length)
 	{
 		WLog_ERR(TAG, "freerdp_client_write_rdp_file: error writing to output buffer");
 		free(buffer);
@@ -817,22 +654,11 @@
 	{
 		if (unicode)
 		{
-			int length;
-
-			if (size > INT_MAX)
-			{
-				free(buffer);
-				free(unicodestr);
-				fclose(fp);
-				return FALSE;
-			}
-
-			length = (int)size;
 			ConvertToUnicode(CP_UTF8, 0, buffer, length, &unicodestr, 0);
 
 			/* Write multi-byte header */
-			if ((length < 0) || (fwrite(BOM_UTF16_LE, sizeof(BYTE), 2, fp) != 2) ||
-			    (fwrite(unicodestr, 2, (size_t)length, fp) != (size_t)length))
+			if (fwrite(BOM_UTF16_LE, sizeof(BYTE), 2, fp) != 2 ||
+			    fwrite(unicodestr, 2, length, fp) != length)
 			{
 				free(buffer);
 				free(unicodestr);
@@ -844,7 +670,7 @@
 		}
 		else
 		{
-			if (fwrite(buffer, 1, size, fp) != size)
+			if (fwrite(buffer, 1, length, fp) != length)
 			{
 				free(buffer);
 				fclose(fp);
@@ -860,323 +686,47 @@
 	return (status == 0) ? TRUE : FALSE;
 }
 
-static size_t freerdp_client_write_setting_to_buffer(char** buffer, size_t* bufferSize,
-                                                     const char* fmt, ...)
-{
-	va_list ap;
-	size_t len;
-	char* buf = *buffer;
-	size_t bufSize = *bufferSize;
-	va_start(ap, fmt);
-	len = vsnprintf(buf, bufSize, fmt, ap);
-	va_end(ap);
-
-	if (len < 0)
-		return -1;
-
-	/* _snprintf doesn't add the ending \0 to its return value */
-	++len;
-
-	/* we just want to know the size - return it */
-	if (!buf && !bufSize)
-		return len;
-
-	/* update buffer size and buffer position and replace \0 with \n */
-	if (bufSize >= len)
-	{
-		*bufferSize -= len;
-		buf[len - 1] = '\n';
-		*buffer = buf + len;
-	}
-	else
-		return -1;
-
-	return len;
-}
-
 size_t freerdp_client_write_rdp_file_buffer(const rdpFile* file, char* buffer, size_t size)
 {
-	size_t res;
-	size_t totalSize = 0;
-
-	/* either buffer and size are null or non-null */
-	if ((!buffer || !size) && (buffer || size))
-		return -1;
-
-#define WRITE_SETTING(fmt_, param_)                                                 \
-	{                                                                               \
-		res = freerdp_client_write_setting_to_buffer(&buffer, &size, fmt_, param_); \
-		if (res < 0)                                                                \
-			return -1;                                                              \
-		totalSize += res;                                                           \
-	}
-
-	/* integer parameters */
-	if (~file->UseMultiMon)
-		WRITE_SETTING("use multimon:i:%d", file->UseMultiMon);
-
-	if (~file->ScreenModeId)
-		WRITE_SETTING("screen mode id:i:%d", file->ScreenModeId);
-
-	if (~file->SpanMonitors)
-		WRITE_SETTING("span monitors:i:%d", file->SpanMonitors);
-
-	if (~file->SmartSizing)
-		WRITE_SETTING("smart sizing:i:%d", file->SmartSizing);
-
-	if (~file->EnableSuperSpan)
-		WRITE_SETTING("enablesuperpan:i:%d", file->EnableSuperSpan);
-
-	if (~file->SuperSpanAccelerationFactor)
-		WRITE_SETTING("superpanaccelerationfactor:i:%d", file->SuperSpanAccelerationFactor);
-
-	if (~file->DesktopWidth)
-		WRITE_SETTING("desktopwidth:i:%d", file->DesktopWidth);
-
-	if (~file->DesktopHeight)
-		WRITE_SETTING("desktopheight:i:%d", file->DesktopHeight);
-
-	if (~file->DesktopSizeId)
-		WRITE_SETTING("desktop size id:i:%d", file->DesktopSizeId);
-
-	if (~file->SessionBpp)
-		WRITE_SETTING("session bpp:i:%d", file->SessionBpp);
-
-	if (~file->Compression)
-		WRITE_SETTING("compression:i:%d", file->Compression);
-
-	if (~file->KeyboardHook)
-		WRITE_SETTING("keyboardhook:i:%d", file->KeyboardHook);
-
-	if (~file->DisableCtrlAltDel)
-		WRITE_SETTING("disable ctrl+alt+del:i:%d", file->DisableCtrlAltDel);
-
-	if (~file->AudioMode)
-		WRITE_SETTING("audiomode:i:%d", file->AudioMode);
-
-	if (~file->AudioQualityMode)
-		WRITE_SETTING("audioqualitymode:i:%d", file->AudioQualityMode);
-
-	if (~file->AudioCaptureMode)
-		WRITE_SETTING("audiocapturemode:i:%d", file->AudioCaptureMode);
-
-	if (~file->VideoPlaybackMode)
-		WRITE_SETTING("videoplaybackmode:i:%d", file->VideoPlaybackMode);
-
-	if (~file->ConnectionType)
-		WRITE_SETTING("connection type:i:%d", file->ConnectionType);
-
-	if (~file->NetworkAutoDetect)
-		WRITE_SETTING("networkautodetect:i:%d", file->NetworkAutoDetect);
-
-	if (~file->BandwidthAutoDetect)
-		WRITE_SETTING("bandwidthautodetect:i:%d", file->BandwidthAutoDetect);
-
-	if (~file->PinConnectionBar)
-		WRITE_SETTING("pinconnectionbar:i:%d", file->PinConnectionBar);
-
-	if (~file->DisplayConnectionBar)
-		WRITE_SETTING("displayconnectionbar:i:%d", file->DisplayConnectionBar);
-
-	if (~file->WorkspaceId)
-		WRITE_SETTING("workspaceid:i:%d", file->WorkspaceId);
-
-	if (~file->EnableWorkspaceReconnect)
-		WRITE_SETTING("enableworkspacereconnect:i:%d", file->EnableWorkspaceReconnect);
-
-	if (~file->DisableWallpaper)
-		WRITE_SETTING("disable wallpaper:i:%d", file->DisableWallpaper);
-
-	if (~file->AllowFontSmoothing)
-		WRITE_SETTING("allow font smoothing:i:%d", file->AllowFontSmoothing);
-
-	if (~file->AllowDesktopComposition)
-		WRITE_SETTING("allow desktop composition:i:%d", file->AllowDesktopComposition);
-
-	if (~file->DisableFullWindowDrag)
-		WRITE_SETTING("disable full window drag:i:%d", file->DisableFullWindowDrag);
-
-	if (~file->DisableMenuAnims)
-		WRITE_SETTING("disable menu anims:i:%d", file->DisableMenuAnims);
-
-	if (~file->DisableThemes)
-		WRITE_SETTING("disable themes:i:%d", file->DisableThemes);
-
-	if (~file->DisableCursorSetting)
-		WRITE_SETTING("disable cursor setting:i:%d", file->DisableCursorSetting);
-
-	if (~file->BitmapCacheSize)
-		WRITE_SETTING("bitmapcachesize:i:%d", file->BitmapCacheSize);
-
-	if (~file->BitmapCachePersistEnable)
-		WRITE_SETTING("bitmapcachepersistenable:i:%d", file->BitmapCachePersistEnable);
-
-	if (~file->ServerPort)
-		WRITE_SETTING("server port:i:%d", file->ServerPort);
-
-	if (~file->RedirectDrives)
-		WRITE_SETTING("redirectdrives:i:%d", file->RedirectDrives);
-
-	if (~file->RedirectPrinters)
-		WRITE_SETTING("redirectprinters:i:%d", file->RedirectPrinters);
-
-	if (~file->RedirectComPorts)
-		WRITE_SETTING("redirectcomports:i:%d", file->RedirectComPorts);
-
-	if (~file->RedirectSmartCards)
-		WRITE_SETTING("redirectsmartcards:i:%d", file->RedirectSmartCards);
-
-	if (~file->RedirectClipboard)
-		WRITE_SETTING("redirectclipboard:i:%d", file->RedirectClipboard);
-
-	if (~file->RedirectPosDevices)
-		WRITE_SETTING("redirectposdevices:i:%d", file->RedirectPosDevices);
-
-	if (~file->RedirectDirectX)
-		WRITE_SETTING("redirectdirectx:i:%d", file->RedirectDirectX);
-
-	if (~file->DisablePrinterRedirection)
-		WRITE_SETTING("disableprinterredirection:i:%d", file->DisablePrinterRedirection);
-
-	if (~file->DisableClipboardRedirection)
-		WRITE_SETTING("disableclipboardredirection:i:%d", file->DisableClipboardRedirection);
-
-	if (~file->ConnectToConsole)
-		WRITE_SETTING("connect to console:i:%d", file->ConnectToConsole);
-
-	if (~file->AdministrativeSession)
-		WRITE_SETTING("administrative session:i:%d", file->AdministrativeSession);
-
-	if (~file->AutoReconnectionEnabled)
-		WRITE_SETTING("autoreconnection enabled:i:%d", file->AutoReconnectionEnabled);
-
-	if (~file->AutoReconnectMaxRetries)
-		WRITE_SETTING("autoreconnect max retries:i:%d", file->AutoReconnectMaxRetries);
-
-	if (~file->PublicMode)
-		WRITE_SETTING("public mode:i:%d", file->PublicMode);
-
-	if (~file->AuthenticationLevel)
-		WRITE_SETTING("authentication level:i:%d", file->AuthenticationLevel);
-
-	if (~file->PromptCredentialOnce)
-		WRITE_SETTING("promptcredentialonce:i:%d", file->PromptCredentialOnce);
-
-	if (~file->PromptForCredentials)
-		WRITE_SETTING("prompt for credentials on client:i:%d", file->PromptForCredentials);
-
-	if (~file->NegotiateSecurityLayer)
-		WRITE_SETTING("negotiate security layer:i:%d", file->NegotiateSecurityLayer);
-
-	if (~file->EnableCredSSPSupport)
-		WRITE_SETTING("enablecredsspsupport:i:%d", file->EnableCredSSPSupport);
-
-	if (~file->RemoteApplicationMode)
-		WRITE_SETTING("remoteapplicationmode:i:%d", file->RemoteApplicationMode);
-
-	if (~file->RemoteApplicationExpandCmdLine)
-		WRITE_SETTING("remoteapplicationexpandcmdline:i:%d", file->RemoteApplicationExpandCmdLine);
-
-	if (~file->RemoteApplicationExpandWorkingDir)
-		WRITE_SETTING("remoteapplicationexpandworkingdir:i:%d",
-		              file->RemoteApplicationExpandWorkingDir);
-
-	if (~file->DisableConnectionSharing)
-		WRITE_SETTING("disableconnectionsharing:i:%d", file->DisableConnectionSharing);
-
-	if (~file->DisableRemoteAppCapsCheck)
-		WRITE_SETTING("disableremoteappcapscheck:i:%d", file->DisableRemoteAppCapsCheck);
-
-	if (~file->GatewayUsageMethod)
-		WRITE_SETTING("gatewayusagemethod:i:%d", file->GatewayUsageMethod);
-
-	if (~file->GatewayProfileUsageMethod)
-		WRITE_SETTING("gatewayprofileusagemethod:i:%d", file->GatewayProfileUsageMethod);
-
-	if (~file->GatewayCredentialsSource)
-		WRITE_SETTING("gatewaycredentialssource:i:%d", file->GatewayCredentialsSource);
-
-	if (~file->UseRedirectionServerName)
-		WRITE_SETTING("use redirection server name:i:%d", file->UseRedirectionServerName);
-
-	if (~file->RdgIsKdcProxy)
-		WRITE_SETTING("rdgiskdcproxy:i:%d", file->RdgIsKdcProxy);
-
-	/* string parameters */
-	if (~((size_t)file->Username))
-		WRITE_SETTING("username:s:%s", file->Username);
-
-	if (~((size_t)file->Domain))
-		WRITE_SETTING("domain:s:%s", file->Domain);
-
-	if (~((size_t)file->Password))
-		WRITE_SETTING("password:s:%s", file->Password);
-
-	if (~((size_t)file->FullAddress))
-		WRITE_SETTING("full address:s:%s", file->FullAddress);
-
-	if (~((size_t)file->AlternateFullAddress))
-		WRITE_SETTING("alternate full address:s:%s", file->AlternateFullAddress);
-
-	if (~((size_t)file->UsbDevicesToRedirect))
-		WRITE_SETTING("usbdevicestoredirect:s:%s", file->UsbDevicesToRedirect);
-
-	if (~((size_t)file->LoadBalanceInfo))
-		WRITE_SETTING("loadbalanceinfo:s:%s", file->LoadBalanceInfo);
-
-	if (~((size_t)file->RemoteApplicationName))
-		WRITE_SETTING("remoteapplicationname:s:%s", file->RemoteApplicationName);
-
-	if (~((size_t)file->RemoteApplicationIcon))
-		WRITE_SETTING("remoteapplicationicon:s:%s", file->RemoteApplicationIcon);
-
-	if (~((size_t)file->RemoteApplicationProgram))
-		WRITE_SETTING("remoteapplicationprogram:s:%s", file->RemoteApplicationProgram);
-
-	if (~((size_t)file->RemoteApplicationFile))
-		WRITE_SETTING("remoteapplicationfile:s:%s", file->RemoteApplicationFile);
-
-	if (~((size_t)file->RemoteApplicationGuid))
-		WRITE_SETTING("remoteapplicationguid:s:%s", file->RemoteApplicationGuid);
-
-	if (~((size_t)file->RemoteApplicationCmdLine))
-		WRITE_SETTING("remoteapplicationcmdline:s:%s", file->RemoteApplicationCmdLine);
-
-	if (~((size_t)file->AlternateShell))
-		WRITE_SETTING("alternate shell:s:%s", file->AlternateShell);
-
-	if (~((size_t)file->ShellWorkingDirectory))
-		WRITE_SETTING("shell working directory:s:%s", file->ShellWorkingDirectory);
-
-	if (~((size_t)file->GatewayHostname))
-		WRITE_SETTING("gatewayhostname:s:%s", file->GatewayHostname);
-
-	if (~((size_t)file->GatewayAccessToken))
-		WRITE_SETTING("gatewayaccesstoken:s:%s", file->GatewayAccessToken);
+	int index;
+	int length;
+	char* output;
+	rdpFileLine* line;
 
-	if (~((size_t)file->KdcProxyName))
-		WRITE_SETTING("kdcproxyname:s:%s", file->KdcProxyName);
+	if (!buffer)
+		size = 0;
 
-	if (~((size_t)file->DrivesToRedirect))
-		WRITE_SETTING("drivestoredirect:s:%s", file->DrivesToRedirect);
+	output = buffer;
 
-	if (~((size_t)file->DevicesToRedirect))
-		WRITE_SETTING("devicestoredirect:s:%s", file->DevicesToRedirect);
+	for (index = 0; index < file->lineCount; index++)
+	{
+		line = &(file->lines[index]);
+		length = (int)strlen(line->text);
 
-	if (~((size_t)file->WinPosStr))
-		WRITE_SETTING("winposstr:s:%s", file->WinPosStr);
+		if (!buffer)
+		{
+			size += length + 1;
+		}
+		else
+		{
+			CopyMemory(output, line->text, length);
+			output += length;
+			*output = '\n';
+			output++;
+		}
+	}
 
-	if (~((size_t)file->PreconnectionBlob))
-		WRITE_SETTING("pcb:s:%s", file->PreconnectionBlob);
+	if (buffer)
+		size = (output - buffer);
 
-	return totalSize;
+	return size;
 }
 
 BOOL freerdp_client_populate_settings_from_rdp_file(rdpFile* file, rdpSettings* settings)
 {
 	if (~((size_t)file->Domain))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_Domain, file->Domain))
+		if (freerdp_set_param_string(settings, FreeRDP_Domain, file->Domain) != 0)
 			return FALSE;
 	}
 
@@ -1188,12 +738,12 @@
 		if (!freerdp_parse_username(file->Username, &user, &domain))
 			return FALSE;
 
-		if (!freerdp_settings_set_string(settings, FreeRDP_Username, user))
+		if (freerdp_set_param_string(settings, FreeRDP_Username, user) != 0)
 			return FALSE;
 
 		if (domain)
 		{
-			if (!freerdp_settings_set_string(settings, FreeRDP_Domain, domain))
+			if (freerdp_set_param_string(settings, FreeRDP_Domain, domain) != 0)
 				return FALSE;
 		}
 
@@ -1203,101 +753,62 @@
 
 	if (~((size_t)file->Password))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_Password, file->Password))
+		if (freerdp_set_param_string(settings, FreeRDP_Password, file->Password) != 0)
 			return FALSE;
 	}
 
+	if (~((size_t)file->FullAddress))
 	{
-		const char* address = NULL;
-
-		/* With MSTSC alternate full address always wins,
-		 * so mimic this. */
-		if (~((size_t)file->AlternateFullAddress))
-			address = file->AlternateFullAddress;
-		else if (~((size_t)file->FullAddress))
-			address = file->FullAddress;
-
-		if (address)
-		{
-			int port = -1;
-			char* host = NULL;
+		int port = -1;
+		char* host = NULL;
 
-			if (!freerdp_parse_hostname(address, &host, &port))
-				return FALSE;
+		if (!freerdp_parse_hostname(file->FullAddress, &host, &port))
+			return FALSE;
 
-			if (!freerdp_settings_set_string(settings, FreeRDP_ServerHostname, host))
-				return FALSE;
+		if (freerdp_set_param_string(settings, FreeRDP_ServerHostname, host) != 0)
+			return FALSE;
 
-			free(host);
+		if (port > 0)
+			freerdp_set_param_uint32(settings, FreeRDP_ServerPort, (UINT32)port);
 
-			if (port > 0)
-			{
-				if (!freerdp_settings_set_uint32(settings, FreeRDP_ServerPort, (UINT32)port))
-					return FALSE;
-			}
-		}
+		free(host);
 	}
 
 	if (~file->ServerPort)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_ServerPort, file->ServerPort))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_ServerPort, file->ServerPort);
 
 	if (~file->DesktopWidth)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_DesktopWidth, file->DesktopWidth))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_DesktopWidth, file->DesktopWidth);
 
 	if (~file->DesktopHeight)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_DesktopHeight, file->DesktopHeight))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_DesktopHeight, file->DesktopHeight);
 
 	if (~file->SessionBpp)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_ColorDepth, file->SessionBpp))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_ColorDepth, file->SessionBpp);
 
 	if (~file->ConnectToConsole)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_ConsoleSession, file->ConnectToConsole))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_ConsoleSession, file->ConnectToConsole);
 
 	if (~file->AdministrativeSession)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_ConsoleSession,
-		                               file->AdministrativeSession))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_ConsoleSession, file->AdministrativeSession);
 
 	if (~file->NegotiateSecurityLayer)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_NegotiateSecurityLayer,
-		                               file->NegotiateSecurityLayer))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_NegotiateSecurityLayer,
+		                       file->NegotiateSecurityLayer);
 
 	if (~file->EnableCredSSPSupport)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_NlaSecurity, file->EnableCredSSPSupport))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_NlaSecurity, file->EnableCredSSPSupport);
 
 	if (~((size_t)file->AlternateShell))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_AlternateShell, file->AlternateShell))
+		if (freerdp_set_param_string(settings, FreeRDP_AlternateShell, file->AlternateShell) != 0)
 			return FALSE;
 	}
 
 	if (~((size_t)file->ShellWorkingDirectory))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_ShellWorkingDirectory,
-		                                 file->ShellWorkingDirectory))
+		if (freerdp_set_param_string(settings, FreeRDP_ShellWorkingDirectory,
+		                             file->ShellWorkingDirectory) != 0)
 			return FALSE;
 	}
 
@@ -1315,16 +826,14 @@
 		 * 1: The remote session will appear in a window.
 		 * 2: The remote session will appear full screen.
 		 */
-		if (!freerdp_settings_set_bool(settings, FreeRDP_Fullscreen,
-		                               (file->ScreenModeId == 2) ? TRUE : FALSE))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_Fullscreen,
+		                       (file->ScreenModeId == 2) ? TRUE : FALSE);
 	}
 
-	if (~(file->SmartSizing))
+	if (~((size_t)file->SmartSizing))
 	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_SmartSizing,
-		                               (file->SmartSizing == 1) ? TRUE : FALSE))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_SmartSizing,
+		                       (file->SmartSizing == 1) ? TRUE : FALSE);
 	}
 
 	if (~((size_t)file->LoadBalanceInfo))
@@ -1357,36 +866,27 @@
 	}
 
 	if (~file->ConnectionType)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_ConnectionType, file->ConnectionType))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_ConnectionType, file->ConnectionType);
 
 	if (~file->AudioMode)
 	{
 		if (file->AudioMode == AUDIO_MODE_REDIRECT)
 		{
-			if (!freerdp_settings_set_bool(settings, FreeRDP_AudioPlayback, TRUE))
-				return FALSE;
+			freerdp_set_param_bool(settings, FreeRDP_AudioPlayback, TRUE);
 		}
 		else if (file->AudioMode == AUDIO_MODE_PLAY_ON_SERVER)
 		{
-			if (!freerdp_settings_set_bool(settings, FreeRDP_RemoteConsoleAudio, TRUE))
-				return FALSE;
+			freerdp_set_param_bool(settings, FreeRDP_RemoteConsoleAudio, TRUE);
 		}
 		else if (file->AudioMode == AUDIO_MODE_NONE)
 		{
-			if (!freerdp_settings_set_bool(settings, FreeRDP_AudioPlayback, FALSE) ||
-			    !freerdp_settings_set_bool(settings, FreeRDP_RemoteConsoleAudio, FALSE))
-				return FALSE;
+			freerdp_set_param_bool(settings, FreeRDP_AudioPlayback, FALSE);
+			freerdp_set_param_bool(settings, FreeRDP_RemoteConsoleAudio, FALSE);
 		}
 	}
 
 	if (~file->Compression)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_CompressionEnabled, file->Compression))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_CompressionEnabled, file->Compression);
 
 	if (~((size_t)file->GatewayHostname))
 	{
@@ -1396,222 +896,132 @@
 		if (!freerdp_parse_hostname(file->GatewayHostname, &host, &port))
 			return FALSE;
 
-		if (!freerdp_settings_set_string(settings, FreeRDP_GatewayHostname, host))
+		if (freerdp_set_param_string(settings, FreeRDP_GatewayHostname, host) != 0)
 			return FALSE;
 
-		free(host);
-
 		if (port > 0)
-		{
-			if (!freerdp_settings_set_uint32(settings, FreeRDP_GatewayPort, (UINT32)port))
-				return FALSE;
-		}
+			freerdp_set_param_uint32(settings, FreeRDP_GatewayPort, (UINT32)port);
+
+		free(host);
 	}
 
 	if (~((size_t)file->GatewayAccessToken))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_GatewayAccessToken,
-		                                 file->GatewayAccessToken))
+		if (freerdp_set_param_string(settings, FreeRDP_GatewayAccessToken,
+		                             file->GatewayAccessToken) != 0)
 			return FALSE;
 	}
 
 	if (~file->GatewayUsageMethod)
-	{
-		if (!freerdp_set_gateway_usage_method(settings, file->GatewayUsageMethod))
-			return FALSE;
-	}
+		freerdp_set_gateway_usage_method(settings, file->GatewayUsageMethod);
 
 	if (~file->PromptCredentialOnce)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_GatewayUseSameCredentials,
-		                               file->PromptCredentialOnce))
-			return FALSE;
-	}
-
-	if (~file->PromptForCredentials)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_PromptForCredentials,
-		                               file->PromptForCredentials))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_GatewayUseSameCredentials,
+		                       file->PromptCredentialOnce);
 
 	if (~file->RemoteApplicationMode)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RemoteApplicationMode,
-		                               file->RemoteApplicationMode))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_RemoteApplicationMode,
+		                       file->RemoteApplicationMode);
 
 	if (~((size_t)file->RemoteApplicationProgram))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationProgram,
-		                                 file->RemoteApplicationProgram))
+		if (freerdp_set_param_string(settings, FreeRDP_RemoteApplicationProgram,
+		                             file->RemoteApplicationProgram) != 0)
 			return FALSE;
 	}
 
 	if (~((size_t)file->RemoteApplicationName))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationName,
-		                                 file->RemoteApplicationName))
+		if (freerdp_set_param_string(settings, FreeRDP_RemoteApplicationName,
+		                             file->RemoteApplicationName) != 0)
 			return FALSE;
 	}
 
 	if (~((size_t)file->RemoteApplicationIcon))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationIcon,
-		                                 file->RemoteApplicationIcon))
+		if (freerdp_set_param_string(settings, FreeRDP_RemoteApplicationIcon,
+		                             file->RemoteApplicationIcon) != 0)
 			return FALSE;
 	}
 
 	if (~((size_t)file->RemoteApplicationFile))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationFile,
-		                                 file->RemoteApplicationFile))
-			return FALSE;
-	}
-
-	if (~((size_t)file->RemoteApplicationGuid))
-	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationGuid,
-		                                 file->RemoteApplicationGuid))
+		if (freerdp_set_param_string(settings, FreeRDP_RemoteApplicationGuid,
+		                             file->RemoteApplicationGuid) != 0)
 			return FALSE;
 	}
 
 	if (~((size_t)file->RemoteApplicationCmdLine))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_RemoteApplicationCmdLine,
-		                                 file->RemoteApplicationCmdLine))
+		if (freerdp_set_param_string(settings, FreeRDP_RemoteApplicationCmdLine,
+		                             file->RemoteApplicationCmdLine) != 0)
 			return FALSE;
 	}
 
 	if (~file->SpanMonitors)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_SpanMonitors, file->SpanMonitors))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_SpanMonitors, file->SpanMonitors);
 
 	if (~file->UseMultiMon)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_UseMultimon, file->UseMultiMon))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_UseMultimon, file->UseMultiMon);
 
 	if (~file->AllowFontSmoothing)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_AllowFontSmoothing,
-		                               file->AllowFontSmoothing))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_AllowFontSmoothing, file->AllowFontSmoothing);
 
 	if (~file->DisableWallpaper)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_DisableWallpaper, file->DisableWallpaper))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_DisableWallpaper, file->DisableWallpaper);
 
 	if (~file->DisableFullWindowDrag)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_DisableFullWindowDrag,
-		                               file->DisableFullWindowDrag))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_DisableFullWindowDrag,
+		                       file->DisableFullWindowDrag);
 
 	if (~file->DisableMenuAnims)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_DisableMenuAnims, file->DisableMenuAnims))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_DisableMenuAnims, file->DisableMenuAnims);
 
 	if (~file->DisableThemes)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_DisableThemes, file->DisableThemes))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_DisableThemes, file->DisableThemes);
 
 	if (~file->AllowDesktopComposition)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_AllowDesktopComposition,
-		                               file->AllowDesktopComposition))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_AllowDesktopComposition,
+		                       file->AllowDesktopComposition);
 
 	if (~file->BitmapCachePersistEnable)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_BitmapCachePersistEnabled,
-		                               file->BitmapCachePersistEnable))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_BitmapCachePersistEnabled,
+		                       file->BitmapCachePersistEnable);
 
 	if (~file->DisableRemoteAppCapsCheck)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_DisableRemoteAppCapsCheck,
-		                               file->DisableRemoteAppCapsCheck))
-			return FALSE;
-	}
-
-	if (~file->NetworkAutoDetect)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_NetworkAutoDetect,
-		                               file->NetworkAutoDetect))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_DisableRemoteAppCapsCheck,
+		                       file->DisableRemoteAppCapsCheck);
 
 	if (~file->AutoReconnectionEnabled)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_AutoReconnectionEnabled,
-		                               file->AutoReconnectionEnabled))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_AutoReconnectionEnabled,
+		                       file->AutoReconnectionEnabled);
 
 	if (~file->AutoReconnectMaxRetries)
-	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_AutoReconnectMaxRetries,
-		                                 file->AutoReconnectMaxRetries))
-			return FALSE;
-	}
+		freerdp_set_param_uint32(settings, FreeRDP_AutoReconnectMaxRetries,
+		                         file->AutoReconnectMaxRetries);
 
 	if (~file->RedirectSmartCards)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectSmartCards,
-		                               file->RedirectSmartCards))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_RedirectSmartCards, file->RedirectSmartCards);
 
 	if (~file->RedirectClipboard)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectClipboard,
-		                               file->RedirectClipboard))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_RedirectClipboard, file->RedirectClipboard);
 
 	if (~file->RedirectPrinters)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectPrinters, file->RedirectPrinters))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_RedirectPrinters, file->RedirectPrinters);
 
 	if (~file->RedirectDrives)
-	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectDrives, file->RedirectDrives))
-			return FALSE;
-	}
+		freerdp_set_param_bool(settings, FreeRDP_RedirectDrives, file->RedirectDrives);
 
 	if (~file->RedirectPosDevices)
 	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectSerialPorts,
-		                               file->RedirectComPorts) ||
-		    !freerdp_settings_set_bool(settings, FreeRDP_RedirectParallelPorts,
-		                               file->RedirectComPorts))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_RedirectSerialPorts, file->RedirectComPorts);
+		freerdp_set_param_bool(settings, FreeRDP_RedirectParallelPorts, file->RedirectComPorts);
 	}
 
 	if (~file->RedirectComPorts)
 	{
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectSerialPorts,
-		                               file->RedirectComPorts) ||
-		    !freerdp_settings_set_bool(settings, FreeRDP_RedirectParallelPorts,
-		                               file->RedirectComPorts))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_RedirectSerialPorts, file->RedirectComPorts);
+		freerdp_set_param_bool(settings, FreeRDP_RedirectParallelPorts, file->RedirectComPorts);
 	}
 
 	if (~file->RedirectDirectX)
@@ -1645,8 +1055,7 @@
 		 * 	devicestoredirect:s:USB\VID_04A9&PID_30C1\6&4BD985D&0&2;,DynamicDevices
 		 *
 		 */
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectDrives, TRUE))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_RedirectDrives, TRUE);
 	}
 
 	if (~((size_t)file->DrivesToRedirect))
@@ -1658,24 +1067,19 @@
 		 * comma-separated list of drive letters to redirect.
 		 */
 		const BOOL empty = !file->DrivesToRedirect || (strlen(file->DrivesToRedirect) == 0);
-
-		if (!freerdp_settings_set_bool(settings, FreeRDP_RedirectDrives, !empty))
-			return FALSE;
+		freerdp_set_param_bool(settings, FreeRDP_RedirectDrives, !empty);
 	}
 
 	if (~file->KeyboardHook)
 	{
-		if (!freerdp_settings_set_uint32(settings, FreeRDP_KeyboardHook, file->KeyboardHook))
-			return FALSE;
+		freerdp_set_param_uint32(settings, FreeRDP_KeyboardHook, file->KeyboardHook);
 	}
 
 	if (~((size_t)file->PreconnectionBlob))
 	{
-		if (!freerdp_settings_set_string(settings, FreeRDP_PreconnectionBlob,
-		                                 file->PreconnectionBlob) ||
-		    !freerdp_settings_set_bool(settings, FreeRDP_SendPreconnectionPdu, TRUE) ||
-		    !freerdp_settings_set_bool(settings, FreeRDP_VmConnectMode, TRUE))
-			return FALSE;
+		freerdp_set_param_string(settings, FreeRDP_PreconnectionBlob, file->PreconnectionBlob);
+		freerdp_set_param_bool(settings, FreeRDP_SendPreconnectionPdu, TRUE);
+		freerdp_set_param_bool(settings, FreeRDP_VmConnectMode, TRUE);
 	}
 
 	if (file->argc > 1)
@@ -1698,9 +1102,10 @@
 	line = &(file->lines[index]);
 	return line;
 }
+
 static rdpFileLine* freerdp_client_rdp_file_find_line_by_name(rdpFile* file, const char* name)
 {
-	size_t index;
+	int index;
 	BOOL bFound = FALSE;
 	rdpFileLine* line = NULL;
 
@@ -1720,6 +1125,7 @@
 
 	return (bFound) ? line : NULL;
 }
+
 /**
  * Set a string option to a rdpFile
  * @param file rdpFile
@@ -1727,6 +1133,7 @@
  * @param value value of the option
  * @return 0 on success
  */
+
 int freerdp_client_rdp_file_set_string_option(rdpFile* file, const char* name, const char* value)
 {
 	int index;
@@ -1775,6 +1182,7 @@
 	free(text);
 	return -1;
 }
+
 const char* freerdp_client_rdp_file_get_string_option(rdpFile* file, const char* name)
 {
 	rdpFileLine* line;
@@ -1788,6 +1196,7 @@
 
 	return line->sValue;
 }
+
 int freerdp_client_rdp_file_set_integer_option(rdpFile* file, const char* name, int value)
 {
 	int index;
@@ -1834,6 +1243,7 @@
 
 	return 0;
 }
+
 int freerdp_client_rdp_file_get_integer_option(rdpFile* file, const char* name)
 {
 	rdpFileLine* line;
@@ -1847,11 +1257,13 @@
 
 	return line->iValue;
 }
+
 static void freerdp_client_file_string_check_free(LPSTR str)
 {
 	if (~((size_t)str))
 		free(str);
 }
+
 rdpFile* freerdp_client_rdp_file_new()
 {
 	rdpFile* file;
@@ -1892,9 +1304,10 @@
 
 	return file;
 }
+
 void freerdp_client_rdp_file_free(rdpFile* file)
 {
-	size_t i;
+	int i;
 
 	if (file)
 	{
@@ -1942,8 +1355,3 @@
 		free(file);
 	}
 }
-
-void freerdp_client_rdp_file_set_callback_context(rdpFile* file, void* context)
-{
-	file->context = context;
-}
diff -urN client/common/test/TestClient.c ../../informatimago/FreeRDP/client/common/test/TestClient.c
--- client/common/test/TestClient.c	2019-07-25 20:17:16.573711405 +0300
+++ ../../informatimago/FreeRDP/client/common/test/TestClient.c	2019-07-25 20:11:24.511965545 +0300
@@ -4,149 +4,151 @@
 #include <string.h> /* NOLINT */
 
 #if defined(_MSC_VER)
-#pragma warning(disable : 4996) /* deprecation */
+#	pragma warning(disable : 4996) /* deprecation */
 #endif
 
-
-
 /* Forward declare test functions. */
 int TestClientRdpFile(int, char*[]);
 int TestClientChannels(int, char*[]);
 int TestClientCmdLine(int, char*[]);
 
-
 #ifdef __cplusplus
-#define CM_CAST(TYPE, EXPR) static_cast<TYPE>(EXPR)
+#	define CM_CAST(TYPE, EXPR) static_cast<TYPE>(EXPR)
 #else
-#define CM_CAST(TYPE, EXPR) (TYPE)(EXPR)
+#	define CM_CAST(TYPE, EXPR) (TYPE)(EXPR)
 #endif
 
 /* Create map.  */
 
-typedef int (*MainFuncPointer)(int, char* []); /* NOLINT */
-typedef struct /* NOLINT */
+typedef int (*MainFuncPointer)(int, char*[]); /* NOLINT */
+typedef struct                                /* NOLINT */
 {
-  const char* name;
-  MainFuncPointer func;
+	const char* name;
+	MainFuncPointer func;
 } functionMapEntry;
 
 static functionMapEntry cmakeGeneratedFunctionMapEntries[] = {
-    {
-    "TestClientRdpFile",
-    TestClientRdpFile
-  },
-  {
-    "TestClientChannels",
-    TestClientChannels
-  },
-  {
-    "TestClientCmdLine",
-    TestClientCmdLine
-  },
+	{ "TestClientRdpFile", TestClientRdpFile },
+	{ "TestClientChannels", TestClientChannels },
+	{ "TestClientCmdLine", TestClientCmdLine },
 
-  { NULL, NULL } /* NOLINT */
+	{ NULL, NULL } /* NOLINT */
 };
 
-static const int NumTests = CM_CAST(int,
-  sizeof(cmakeGeneratedFunctionMapEntries) / sizeof(functionMapEntry)) - 1;
+static const int NumTests =
+    CM_CAST(int, sizeof(cmakeGeneratedFunctionMapEntries) / sizeof(functionMapEntry)) - 1;
 
 /* Allocate and create a lowercased copy of string
    (note that it has to be free'd manually) */
 static char* lowercase(const char* string)
 {
-  char *new_string, *p;
-  size_t stringSize;
+	char *new_string, *p;
+	size_t stringSize;
 
-  stringSize = CM_CAST(size_t, strlen(string) + 1);
-  new_string = CM_CAST(char*, malloc(sizeof(char) * stringSize));
+	stringSize = CM_CAST(size_t, strlen(string) + 1);
+	new_string = CM_CAST(char*, malloc(sizeof(char) * stringSize));
 
-  if (new_string == NULL) { /* NOLINT */
-    return NULL;            /* NOLINT */
-  }
-  strcpy(new_string, string);
-  for (p = new_string; *p != 0; ++p) {
-    *p = CM_CAST(char, tolower(*p));
-  }
-  return new_string;
+	if (new_string == NULL)
+	{                /* NOLINT */
+		return NULL; /* NOLINT */
+	}
+	strcpy(new_string, string);
+	for (p = new_string; *p != 0; ++p)
+	{
+		*p = CM_CAST(char, tolower(*p));
+	}
+	return new_string;
 }
 
 int main(int ac, char* av[])
 {
-  int i, testNum = 0, partial_match;
-  char *arg;
-  int testToRun = -1;
-
-  
-
-  /* If no test name was given */
-  /* process command line with user function.  */
-  if (ac < 2) {
-    /* Ask for a test.  */
-    printf("Available tests:\n");
-    for (i = 0; i < NumTests; ++i) {
-      printf("%3d. %s\n", i, cmakeGeneratedFunctionMapEntries[i].name);
-    }
-    printf("To run a test, enter the test number: ");
-    fflush(stdout);
-    if (scanf("%d", &testNum) != 1) {
-      printf("Couldn't parse that input as a number\n");
-      return -1;
-    }
-    if (testNum >= NumTests) {
-      printf("%3d is an invalid test number.\n", testNum);
-      return -1;
-    }
-    testToRun = testNum;
-    ac--;
-    av++;
-  }
-  partial_match = 0;
-  arg = NULL; /* NOLINT */
-  /* If partial match is requested.  */
-  if (testToRun == -1 && ac > 1) {
-    partial_match = (strcmp(av[1], "-R") == 0) ? 1 : 0;
-  }
-  if (partial_match != 0 && ac < 3) {
-    printf("-R needs an additional parameter.\n");
-    return -1;
-  }
-  if (testToRun == -1) {
-    arg = lowercase(av[1 + partial_match]);
-  }
-  for (i = 0; i < NumTests && testToRun == -1; ++i) {
-    char *test_name = lowercase(cmakeGeneratedFunctionMapEntries[i].name);
-    if (partial_match != 0 && strstr(test_name, arg) != NULL) { /* NOLINT */
-      testToRun = i;
-      ac -= 2;
-      av += 2;
-    } else if (partial_match == 0 && strcmp(test_name, arg) == 0) {
-      testToRun = i;
-      ac--;
-      av++;
-    }
-    free(test_name);
-  }
-  free(arg);
-  if (testToRun != -1) {
-    int result;
-
-    if (testToRun < 0 || testToRun >= NumTests) {
-      printf("testToRun was modified by TestDriver code to an invalid value: "
-             "%3d.\n",
-             testNum);
-      return -1;
-    }
-    result = (*cmakeGeneratedFunctionMapEntries[testToRun].func)(ac, av);
-
-    return result;
-  }
-
-  /* Nothing was run, display the test names.  */
-  printf("Available tests:\n");
-  for (i = 0; i < NumTests; ++i) {
-    printf("%3d. %s\n", i, cmakeGeneratedFunctionMapEntries[i].name);
-  }
-  printf("Failed: %s is an invalid test name.\n", av[1]);
+	int i, testNum = 0, partial_match;
+	char* arg;
+	int testToRun = -1;
+
+	/* If no test name was given */
+	/* process command line with user function.  */
+	if (ac < 2)
+	{
+		/* Ask for a test.  */
+		printf("Available tests:\n");
+		for (i = 0; i < NumTests; ++i)
+		{
+			printf("%3d. %s\n", i, cmakeGeneratedFunctionMapEntries[i].name);
+		}
+		printf("To run a test, enter the test number: ");
+		fflush(stdout);
+		if (scanf("%d", &testNum) != 1)
+		{
+			printf("Couldn't parse that input as a number\n");
+			return -1;
+		}
+		if (testNum >= NumTests)
+		{
+			printf("%3d is an invalid test number.\n", testNum);
+			return -1;
+		}
+		testToRun = testNum;
+		ac--;
+		av++;
+	}
+	partial_match = 0;
+	arg = NULL; /* NOLINT */
+	/* If partial match is requested.  */
+	if (testToRun == -1 && ac > 1)
+	{
+		partial_match = (strcmp(av[1], "-R") == 0) ? 1 : 0;
+	}
+	if (partial_match != 0 && ac < 3)
+	{
+		printf("-R needs an additional parameter.\n");
+		return -1;
+	}
+	if (testToRun == -1)
+	{
+		arg = lowercase(av[1 + partial_match]);
+	}
+	for (i = 0; i < NumTests && testToRun == -1; ++i)
+	{
+		char* test_name = lowercase(cmakeGeneratedFunctionMapEntries[i].name);
+		if (partial_match != 0 && strstr(test_name, arg) != NULL)
+		{ /* NOLINT */
+			testToRun = i;
+			ac -= 2;
+			av += 2;
+		}
+		else if (partial_match == 0 && strcmp(test_name, arg) == 0)
+		{
+			testToRun = i;
+			ac--;
+			av++;
+		}
+		free(test_name);
+	}
+	free(arg);
+	if (testToRun != -1)
+	{
+		int result;
+
+		if (testToRun < 0 || testToRun >= NumTests)
+		{
+			printf("testToRun was modified by TestDriver code to an invalid value: "
+			       "%3d.\n",
+			       testNum);
+			return -1;
+		}
+		result = (*cmakeGeneratedFunctionMapEntries[testToRun].func)(ac, av);
+
+		return result;
+	}
+
+	/* Nothing was run, display the test names.  */
+	printf("Available tests:\n");
+	for (i = 0; i < NumTests; ++i)
+	{
+		printf("%3d. %s\n", i, cmakeGeneratedFunctionMapEntries[i].name);
+	}
+	printf("Failed: %s is an invalid test name.\n", av[1]);
 
-  return -1;
+	return -1;
 }
diff -urN client/common/test/TestClientChannels.c ../../informatimago/FreeRDP/client/common/test/TestClientChannels.c
--- client/common/test/TestClientChannels.c	2019-07-25 19:51:00.501895637 +0300
+++ ../../informatimago/FreeRDP/client/common/test/TestClientChannels.c	2019-07-25 20:11:24.511965545 +0300
@@ -11,8 +11,6 @@
 	DWORD dwFlags;
 	FREERDP_ADDIN* pAddin;
 	FREERDP_ADDIN** ppAddins;
-	WINPR_UNUSED(argc);
-	WINPR_UNUSED(argv);
 	dwFlags = FREERDP_ADDIN_DYNAMIC;
 	printf("Enumerate all\n");
 	ppAddins = freerdp_channels_list_addins(NULL, NULL, NULL, dwFlags);
diff -urN client/common/test/TestClientCmdLine.c ../../informatimago/FreeRDP/client/common/test/TestClientCmdLine.c
--- client/common/test/TestClientCmdLine.c	2019-07-25 19:51:00.513895696 +0300
+++ ../../informatimago/FreeRDP/client/common/test/TestClientCmdLine.c	2019-07-25 20:11:24.519965585 +0300
@@ -109,105 +109,105 @@
 {
 	int expected_status;
 	validate_settings_pr validate_settings;
-	const char* command_line[128];
+	char* command_line[128];
 	struct
 	{
 		int index;
-		const char* expected_value;
+		char* expected_value;
 	} modified_arguments[8];
 } test;
 
 static test tests[] = {
 	{ COMMAND_LINE_STATUS_PRINT_HELP,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "--help", 0 },
+	  { "xfreerdp", "--help", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT_HELP,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/help", 0 },
+	  { "xfreerdp", "/help", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT_HELP,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-help", 0 },
+	  { "xfreerdp", "-help", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT_VERSION,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "--version", 0 },
+	  { "xfreerdp", "--version", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT_VERSION,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/version", 0 },
+	  { "xfreerdp", "/version", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT_VERSION,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-version", 0 },
+	  { "xfreerdp", "-version", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "test.freerdp.com", 0 },
+	  { "xfreerdp", "test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-v", "test.freerdp.com", 0 },
+	  { "xfreerdp", "-v", "test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "--v", "test.freerdp.com", 0 },
+	  { "xfreerdp", "--v", "test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/v:test.freerdp.com", 0 },
+	  { "xfreerdp", "/v:test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "--plugin", "rdpsnd", "--plugin", "rdpdr", "--data",
+	  { "xfreerdp", "--plugin", "rdpsnd", "--plugin", "rdpdr", "--data",
 	    "disk:media:" DRIVE_REDIRECT_PATH, "--", "test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/sound", "/drive:media," DRIVE_REDIRECT_PATH, "/v:test.freerdp.com", 0 },
+	  { "xfreerdp", "/sound", "/drive:media," DRIVE_REDIRECT_PATH, "/v:test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-u", "test", "-p", "test", "test.freerdp.com", 0 },
+	  { "xfreerdp", "-u", "test", "-p", "test", "test.freerdp.com", 0 },
 	  { { 4, "****" }, { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-u", "test", "-p", "test", "-v", "test.freerdp.com", 0 },
+	  { "xfreerdp", "-u", "test", "-p", "test", "-v", "test.freerdp.com", 0 },
 	  { { 4, "****" }, { 0 } } },
 	{ 0,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/u:test", "/p:test", "/v:test.freerdp.com", 0 },
+	  { "xfreerdp", "/u:test", "/p:test", "/v:test.freerdp.com", 0 },
 	  { { 2, "/p:****" }, { 0 } } },
 	{ COMMAND_LINE_ERROR_NO_KEYWORD,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "-invalid", 0 },
+	  { "xfreerdp", "-invalid", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_ERROR_NO_KEYWORD,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "--invalid", 0 },
+	  { "xfreerdp", "--invalid", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/kbd-list", 0 },
+	  { "xfreerdp", "/kbd-list", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_STATUS_PRINT,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/monitor-list", 0 },
+	  { "xfreerdp", "/monitor-list", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_ERROR,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/sound", "/drive:media:" DRIVE_REDIRECT_PATH, "/v:test.freerdp.com", 0 },
+	  { "xfreerdp", "/sound", "/drive:media:" DRIVE_REDIRECT_PATH, "/v:test.freerdp.com", 0 },
 	  { { 0 } } },
 	{ COMMAND_LINE_ERROR,
 	  check_settings_smartcard_no_redirection,
-	  { "testfreerdp", "/sound", "/drive:media,/foo/bar/blabla", "/v:test.freerdp.com", 0 },
+	  { "xfreerdp", "/sound", "/drive:media,/foo/bar/blabla", "/v:test.freerdp.com", 0 },
 	  { { 0 } } },
 
 #if 0
 	{
 		COMMAND_LINE_STATUS_PRINT, check_settings_smartcard_no_redirection,
-		{"testfreerdp", "-z", "--plugin", "cliprdr", "--plugin", "rdpsnd", "--data", "alsa", "latency:100", "--", "--plugin", "rdpdr", "--data", "disk:w7share:/home/w7share", "--", "--plugin", "drdynvc", "--data", "tsmf:decoder:gstreamer", "--", "-u", "test", "host.example.com", 0},
+		{"xfreerdp", "-z", "--plugin", "cliprdr", "--plugin", "rdpsnd", "--data", "alsa", "latency:100", "--", "--plugin", "rdpdr", "--data", "disk:w7share:/home/w7share", "--", "--plugin", "drdynvc", "--data", "tsmf:decoder:gstreamer", "--", "-u", "test", "host.example.com", 0},
 		{{0}}
 	},
 #endif
@@ -237,17 +237,14 @@
 int TestClientCmdLine(int argc, char* argv[])
 {
 	int rc = 0;
-	size_t i;
-	WINPR_UNUSED(argc);
-	WINPR_UNUSED(argv);
+	int i;
 
 	for (i = 0; i < sizeof(tests) / sizeof(tests[0]); i++)
 	{
 		int failure = 0;
 		char** command_line = string_list_copy(tests[i].command_line);
 
-		if (!testcase(__FUNCTION__, command_line,
-		              string_list_length((const char* const*)command_line),
+		if (!testcase(__FUNCTION__, command_line, string_list_length(command_line),
 		              tests[i].expected_status, tests[i].validate_settings))
 		{
 			FAILURE("parsing arguments.\n");
@@ -258,7 +255,7 @@
 
 		if (failure)
 		{
-			string_list_print(stdout, (const char* const*)command_line);
+			string_list_print(stdout, command_line);
 			rc = -1;
 		}
 
diff -urN client/common/test/TestClientRdpFile.c ../../informatimago/FreeRDP/client/common/test/TestClientRdpFile.c
--- client/common/test/TestClientRdpFile.c	2019-07-25 19:51:00.533895795 +0300
+++ ../../informatimago/FreeRDP/client/common/test/TestClientRdpFile.c	2019-07-25 20:11:24.539965684 +0300
@@ -182,7 +182,6 @@
                                 "disable cursor setting:i:0\n"
                                 "bitmapcachepersistenable:i:1\n"
                                 "full address:s:LAB1-W7-DM-01.lab1.awake.local\n"
-                                "alternate full address:s:LAB1-W7-DM-01.lab1.awake.global\n"
                                 "audiomode:i:0\n"
                                 "redirectprinters:i:1\n"
                                 "redirectcomports:i:0\n"
@@ -211,135 +210,88 @@
 
 int TestClientRdpFile(int argc, char* argv[])
 {
-	int rc = -1;
+	int index;
 	int iValue;
-	const char* sValue;
-	char* utfname = NULL;
-	char* uniname = NULL;
+	char* sValue;
 	rdpFile* file;
-	rdpSettings* settings;
-	WINPR_UNUSED(argc);
-	WINPR_UNUSED(argv);
+	rdpFileLine* line;
 	/* Unicode */
 	file = freerdp_client_rdp_file_new();
-	settings = freerdp_settings_new(0);
 
-	if (!file || !settings)
+	if (!file)
 	{
 		printf("rdp_file_new failed\n");
-		goto fail;
+		return -1;
 	}
 
-	if (!freerdp_client_parse_rdp_file_buffer(file, testRdpFileUTF16, sizeof(testRdpFileUTF16)))
-		goto fail;
-
-	if (!freerdp_client_populate_settings_from_rdp_file(file, settings))
-		goto fail;
+	freerdp_client_parse_rdp_file_buffer(file, testRdpFileUTF16, sizeof(testRdpFileUTF16));
 
-	if (settings->UseMultimon)
+	if (file->UseMultiMon != 0)
 	{
-		printf("UseMultiMon mismatch: Actual: %" PRIu32 ", Expected: 0\n", settings->UseMultimon);
-		goto fail;
+		printf("UseMultiMon mismatch: Actual: %" PRIu32 ", Expected: 0\n", file->UseMultiMon);
+		return -1;
 	}
 
-	if (!settings->Fullscreen)
+	if (file->ScreenModeId != 2)
 	{
-		printf("ScreenModeId mismatch: Actual: %" PRIu32 ", Expected: TRUE\n",
-		       settings->Fullscreen);
-		goto fail;
+		printf("ScreenModeId mismatch: Actual: %" PRIu32 ", Expected: 2\n", file->ScreenModeId);
+		return -1;
 	}
 
-#if 0 /* TODO: Currently unused */
-
-	if (settings->GatewayProfileUsageMethod != 1)
+	if (file->GatewayProfileUsageMethod != 1)
 	{
-		printf("GatewayProfileUsageMethod mismatch: Actual: %"PRIu32", Expected: 1\n",
-		       settings->GatewayProfileUsageMethod);
-		goto fail;
+		printf("GatewayProfileUsageMethod mismatch: Actual: %" PRIu32 ", Expected: 1\n",
+		       file->GatewayProfileUsageMethod);
+		return -1;
 	}
 
-#endif
-
-	if (strcmp(settings->GatewayHostname, "LAB1-W2K8R2-GW.lab1.awake.local") != 0)
+	if (strcmp(file->GatewayHostname, "LAB1-W2K8R2-GW.lab1.awake.local") != 0)
 	{
-		printf("GatewayHostname mismatch: Actual: %s, Expected: %s\n", settings->GatewayHostname,
+		printf("GatewayHostname mismatch: Actual: %s, Expected: %s\n", file->GatewayHostname,
 		       "LAB1-W2K8R2-GW.lab1.awake.local");
-		goto fail;
-	}
-
-	if (strcmp(settings->ServerHostname, "LAB1-W7-DM-01.lab1.awake.local") != 0)
-	{
-		printf("ServerHostname mismatch: Actual: %s, Expected: %s\n", settings->ServerHostname,
-		       "LAB1-W7-DM-01.lab1.awake.local");
-		goto fail;
+		return -1;
 	}
 
 	freerdp_client_rdp_file_free(file);
-	freerdp_settings_free(settings);
 	/* Ascii */
 	file = freerdp_client_rdp_file_new();
-	settings = freerdp_settings_new(0);
+	freerdp_client_parse_rdp_file_buffer(file, (BYTE*)testRdpFileUTF8, sizeof(testRdpFileUTF8));
 
-	if (!file || !settings)
+	if (file->UseMultiMon != 0)
 	{
-		printf("rdp_file_new failed\n");
-		goto fail;
-	}
-
-	if (!freerdp_client_parse_rdp_file_buffer(file, (BYTE*)testRdpFileUTF8,
-	                                          sizeof(testRdpFileUTF8)))
-		goto fail;
-
-	if (!freerdp_client_populate_settings_from_rdp_file(file, settings))
-		goto fail;
-
-	if (settings->UseMultimon != 0)
-	{
-		printf("UseMultiMon mismatch: Actual: %" PRIu32 ", Expected: 0\n", settings->UseMultimon);
+		printf("UseMultiMon mismatch: Actual: %" PRIu32 ", Expected: 0\n", file->UseMultiMon);
 		return -1;
 	}
 
-	if (!settings->Fullscreen)
+	if (file->ScreenModeId != 2)
 	{
-		printf("ScreenModeId mismatch: Actual: %" PRIu32 ", Expected: TRUE\n",
-		       settings->Fullscreen);
+		printf("ScreenModeId mismatch: Actual: %" PRIu32 ", Expected: 2\n", file->ScreenModeId);
 		return -1;
 	}
 
-#if 0 /* TODO: Currently unused */
-
-	if (settings->GatewayProfileUsageMethod != 1)
-	{
-		printf("GatewayProfileUsageMethod mismatch: Actual: %"PRIu32", Expected: 1\n",
-		       settings->GatewayProfileUsageMethod);
-		goto fail;
-	}
-
-#endif
-
-	if (strcmp(settings->ServerHostname, "LAB1-W7-DM-01.lab1.awake.global") != 0)
+	if (file->GatewayProfileUsageMethod != 1)
 	{
-		printf("ServerHostname mismatch: Actual: %s, Expected: %s\n", settings->ServerHostname,
-		       "LAB1-W7-DM-01.lab1.awake.global");
-		goto fail;
+		printf("GatewayProfileUsageMethod mismatch: Actual: %" PRIu32 ", Expected: 1\n",
+		       file->GatewayProfileUsageMethod);
+		return -1;
 	}
 
-	if (strcmp(settings->GatewayHostname, "LAB1-W2K8R2-GW.lab1.awake.local") != 0)
+	if (strcmp(file->GatewayHostname, "LAB1-W2K8R2-GW.lab1.awake.local") != 0)
 	{
-		printf("GatewayHostname mismatch: Actual: %s, Expected: %s\n", settings->GatewayHostname,
+		printf("GatewayHostname mismatch: Actual: %s, Expected: %s\n", file->GatewayHostname,
 		       "LAB1-W2K8R2-GW.lab1.awake.local");
-		goto fail;
+		return -1;
 	}
 
 	iValue = freerdp_client_rdp_file_get_integer_option(file, "vendor integer");
 
 	if (iValue != 123)
-		goto fail;
+		return -1;
 
 	if (freerdp_client_rdp_file_set_integer_option(file, "vendor integer", 456) == -1)
 	{
 		printf("failed to set integer: vendor integer");
-		goto fail;
+		return -1;
 	}
 
 	iValue = freerdp_client_rdp_file_get_integer_option(file, "vendor integer");
@@ -347,16 +299,16 @@
 	if (iValue != 456)
 		return -1;
 
-	sValue = freerdp_client_rdp_file_get_string_option(file, "vendor string");
+	sValue = (char*)freerdp_client_rdp_file_get_string_option(file, "vendor string");
 
 	if (strncmp(sValue, "microsoft", 10) != 0)
-		goto fail;
+		return -1;
 
 	freerdp_client_rdp_file_set_string_option(file, "vendor string", "apple");
-	sValue = freerdp_client_rdp_file_get_string_option(file, "vendor string");
+	sValue = (char*)freerdp_client_rdp_file_get_string_option(file, "vendor string");
 
 	if (strncmp(sValue, "apple", 6) != 0)
-		goto fail;
+		return -1;
 
 	freerdp_client_rdp_file_set_string_option(file, "fruits", "banana,oranges");
 
@@ -366,35 +318,26 @@
 		return -1;
 	}
 
-	freerdp_client_rdp_file_free(file);
-	utfname = _strdup(tmpnam(NULL));
-	uniname = _strdup(tmpnam(NULL));
-	file = freerdp_client_rdp_file_new();
-
-	if (!file || !utfname || !uniname)
-		goto fail;
-
-	if (!freerdp_client_populate_rdp_file_from_settings(file, settings))
-		goto fail;
-
-	if (!freerdp_client_write_rdp_file(file, utfname, FALSE))
-		goto fail;
-
-	if (!freerdp_client_write_rdp_file(file, uniname, TRUE))
-		goto fail;
-
-	rc = 0;
-fail:
-
-	if (utfname)
-		DeleteFileA(utfname);
+	for (index = 0; index < file->lineCount; index++)
+	{
+		line = &(file->lines[index]);
 
-	if (uniname)
-		DeleteFileA(uniname);
+		if (line->flags & RDP_FILE_LINE_FLAG_FORMATTED)
+		{
+			if (line->flags & RDP_FILE_LINE_FLAG_TYPE_STRING)
+			{
+				printf("line %02d: name: %s value: %s, %s\n", line->index, line->name, line->sValue,
+				       (line->flags & RDP_FILE_LINE_FLAG_STANDARD) ? "standard" : "non-standard");
+			}
+			else if (line->flags & RDP_FILE_LINE_FLAG_TYPE_INTEGER)
+			{
+				printf("line %02d: name: %s value: %" PRIu32 ", %s\n", line->index, line->name,
+				       line->iValue,
+				       (line->flags & RDP_FILE_LINE_FLAG_STANDARD) ? "standard" : "non-standard");
+			}
+		}
+	}
 
-	free(utfname);
-	free(uniname);
 	freerdp_client_rdp_file_free(file);
-	freerdp_settings_free(settings);
-	return rc;
+	return 0;
 }
diff -urN client/Mac/cli/AppDelegate.m ../../informatimago/FreeRDP/client/Mac/cli/AppDelegate.m
--- client/Mac/cli/AppDelegate.m	2019-07-25 19:50:59.757891948 +0300
+++ ../../informatimago/FreeRDP/client/Mac/cli/AppDelegate.m	2019-07-25 20:11:23.803962035 +0300
@@ -73,14 +73,6 @@
 	}
 }
 
-- (void)applicationWillBecomeActive:(NSNotification *)notification {
-	[mrdpView resume];
-}
-
-- (void)applicationWillResignActive:(NSNotification *)notification {
-	[mrdpView pause];
-}
-
 - (void)applicationWillTerminate:(NSNotification *)notification {
 	NSLog(@"Stopping...\n");
 	freerdp_client_stop(context);
@@ -242,9 +234,7 @@
 			[[_singleDelegate->window contentView] addSubview:mfc->view];
 		}
 
-		dispatch_async(dispatch_get_main_queue(), ^{
-			mac_set_view_size(context, mfc->view);
-		});
+		mac_set_view_size(context, mfc->view);
 	}
 }
 
@@ -256,9 +246,7 @@
 	if (_singleDelegate)
 	{
 		mfContext *mfc = (mfContext *)context;
-		dispatch_async(dispatch_get_main_queue(), ^{
-			mac_set_view_size(context, mfc->view);
-		});
+		mac_set_view_size(context, mfc->view);
 	}
 }
 
diff -urN client/Mac/Clipboard.m ../../informatimago/FreeRDP/client/Mac/Clipboard.m
--- client/Mac/Clipboard.m	2019-07-25 19:50:59.709891710 +0300
+++ ../../informatimago/FreeRDP/client/Mac/Clipboard.m	2019-07-25 20:11:23.759961817 +0300
@@ -70,7 +70,7 @@
 	return 1;
 }
 
-static int mac_cliprdr_send_client_format_list_response(CliprdrClientContext *cliprdr, BOOL status)
+int mac_cliprdr_send_client_format_list_response(CliprdrClientContext *cliprdr, BOOL status)
 {
 	CLIPRDR_FORMAT_LIST_RESPONSE formatListResponse;
 
@@ -83,8 +83,7 @@
 	return 1;
 }
 
-static int mac_cliprdr_send_client_format_data_request(CliprdrClientContext *cliprdr,
-                                                       UINT32 formatId)
+int mac_cliprdr_send_client_format_data_request(CliprdrClientContext *cliprdr, UINT32 formatId)
 {
 	CLIPRDR_FORMAT_DATA_REQUEST formatDataRequest;
 	mfContext *mfc = (mfContext *)cliprdr->custom;
@@ -103,7 +102,7 @@
 	return 1;
 }
 
-static int mac_cliprdr_send_client_capabilities(CliprdrClientContext *cliprdr)
+int mac_cliprdr_send_client_capabilities(CliprdrClientContext *cliprdr)
 {
 	CLIPRDR_CAPABILITIES capabilities;
 	CLIPRDR_GENERAL_CAPABILITY_SET generalCapabilitySet;
@@ -127,8 +126,7 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT mac_cliprdr_monitor_ready(CliprdrClientContext *cliprdr,
-                                      const CLIPRDR_MONITOR_READY *monitorReady)
+UINT mac_cliprdr_monitor_ready(CliprdrClientContext *cliprdr, CLIPRDR_MONITOR_READY *monitorReady)
 {
 	mfContext *mfc = (mfContext *)cliprdr->custom;
 
@@ -144,8 +142,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT mac_cliprdr_server_capabilities(CliprdrClientContext *cliprdr,
-                                            const CLIPRDR_CAPABILITIES *capabilities)
+UINT mac_cliprdr_server_capabilities(CliprdrClientContext *cliprdr,
+                                     CLIPRDR_CAPABILITIES *capabilities)
 {
 	UINT32 index;
 	CLIPRDR_CAPABILITY_SET *capabilitySet;
@@ -174,8 +172,7 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT mac_cliprdr_server_format_list(CliprdrClientContext *cliprdr,
-                                           const CLIPRDR_FORMAT_LIST *formatList)
+UINT mac_cliprdr_server_format_list(CliprdrClientContext *cliprdr, CLIPRDR_FORMAT_LIST *formatList)
 {
 	UINT32 index;
 	CLIPRDR_FORMAT *format;
@@ -242,9 +239,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_format_list_response(CliprdrClientContext *cliprdr,
-                                        const CLIPRDR_FORMAT_LIST_RESPONSE *formatListResponse)
+UINT mac_cliprdr_server_format_list_response(CliprdrClientContext *cliprdr,
+                                             CLIPRDR_FORMAT_LIST_RESPONSE *formatListResponse)
 {
 	return CHANNEL_RC_OK;
 }
@@ -254,9 +250,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_lock_clipboard_data(CliprdrClientContext *cliprdr,
-                                       const CLIPRDR_LOCK_CLIPBOARD_DATA *lockClipboardData)
+UINT mac_cliprdr_server_lock_clipboard_data(CliprdrClientContext *cliprdr,
+                                            CLIPRDR_LOCK_CLIPBOARD_DATA *lockClipboardData)
 {
 	return CHANNEL_RC_OK;
 }
@@ -266,9 +261,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_unlock_clipboard_data(CliprdrClientContext *cliprdr,
-                                         const CLIPRDR_UNLOCK_CLIPBOARD_DATA *unlockClipboardData)
+UINT mac_cliprdr_server_unlock_clipboard_data(CliprdrClientContext *cliprdr,
+                                              CLIPRDR_UNLOCK_CLIPBOARD_DATA *unlockClipboardData)
 {
 	return CHANNEL_RC_OK;
 }
@@ -278,9 +272,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_format_data_request(CliprdrClientContext *cliprdr,
-                                       const CLIPRDR_FORMAT_DATA_REQUEST *formatDataRequest)
+UINT mac_cliprdr_server_format_data_request(CliprdrClientContext *cliprdr,
+                                            CLIPRDR_FORMAT_DATA_REQUEST *formatDataRequest)
 {
 	BYTE *data;
 	UINT32 size;
@@ -316,9 +309,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_format_data_response(CliprdrClientContext *cliprdr,
-                                        const CLIPRDR_FORMAT_DATA_RESPONSE *formatDataResponse)
+UINT mac_cliprdr_server_format_data_response(CliprdrClientContext *cliprdr,
+                                             CLIPRDR_FORMAT_DATA_RESPONSE *formatDataResponse)
 {
 	BYTE *data;
 	UINT32 size;
@@ -384,9 +376,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-mac_cliprdr_server_file_contents_request(CliprdrClientContext *cliprdr,
-                                         const CLIPRDR_FILE_CONTENTS_REQUEST *fileContentsRequest)
+UINT mac_cliprdr_server_file_contents_request(CliprdrClientContext *cliprdr,
+                                              CLIPRDR_FILE_CONTENTS_REQUEST *fileContentsRequest)
 {
 	return CHANNEL_RC_OK;
 }
@@ -396,8 +387,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT mac_cliprdr_server_file_contents_response(
-    CliprdrClientContext *cliprdr, const CLIPRDR_FILE_CONTENTS_RESPONSE *fileContentsResponse)
+UINT mac_cliprdr_server_file_contents_response(CliprdrClientContext *cliprdr,
+                                               CLIPRDR_FILE_CONTENTS_RESPONSE *fileContentsResponse)
 {
 	return CHANNEL_RC_OK;
 }
diff -urN client/Mac/mf_client.h ../../informatimago/FreeRDP/client/Mac/mf_client.h
--- client/Mac/mf_client.h	2019-07-25 19:50:59.757891948 +0300
+++ ../../informatimago/FreeRDP/client/Mac/mf_client.h	2019-07-25 20:11:23.807962055 +0300
@@ -29,12 +29,8 @@
 {
 #endif
 
-	FREERDP_API void mf_press_mouse_button(void* context, rdpInput* intput, int button, int x,
-	                                       int y, BOOL down);
 	FREERDP_API void mf_scale_mouse_event(void* context, rdpInput* input, UINT16 flags, UINT16 x,
 	                                      UINT16 y);
-	FREERDP_API void mf_scale_mouse_event_ex(void* context, rdpInput* input, UINT16 flags, UINT16 x,
-	                                         UINT16 y);
 
 	/**
 	 * Client Interface
diff -urN client/Mac/mf_client.m ../../informatimago/FreeRDP/client/Mac/mf_client.m
--- client/Mac/mf_client.m	2019-07-25 19:50:59.761891967 +0300
+++ ../../informatimago/FreeRDP/client/Mac/mf_client.m	2019-07-25 20:11:23.807962055 +0300
@@ -113,91 +113,33 @@
 	CloseHandle(mfc->stopEvent);
 }
 
-static void mf_scale_mouse_coordinates(mfContext *mfc, UINT16 *px, UINT16 *py)
-{
-	UINT16 x = *px;
-	UINT16 y = *py;
-	UINT32 ww = mfc->client_width;
-	UINT32 wh = mfc->client_height;
-	UINT32 dw = mfc->context.settings->DesktopWidth;
-	UINT32 dh = mfc->context.settings->DesktopHeight;
-
-	if (!mfc->context.settings->SmartSizing || ((ww == dw) && (wh == dh)))
-	{
-		y = y + mfc->yCurrentScroll;
-		x = x + mfc->xCurrentScroll;
-
-		y -= (dh - wh);
-		x -= (dw - ww);
-	}
-	else
-	{
-		y = y * dh / wh + mfc->yCurrentScroll;
-		x = x * dw / ww + mfc->xCurrentScroll;
-	}
-
-	*px = x;
-	*py = y;
-}
-
 void mf_scale_mouse_event(void *context, rdpInput *input, UINT16 flags, UINT16 x, UINT16 y)
 {
 	mfContext *mfc = (mfContext *)context;
 	MRDPView *view = (MRDPView *)mfc->view;
+	int ww, wh, dw, dh;
+	ww = mfc->client_width;
+	wh = mfc->client_height;
+	dw = mfc->context.settings->DesktopWidth;
+	dh = mfc->context.settings->DesktopHeight;
 	// Convert to windows coordinates
 	y = [view frame].size.height - y;
 
-	if ((flags & (PTR_FLAGS_WHEEL | PTR_FLAGS_HWHEEL)) == 0)
-		mf_scale_mouse_coordinates(mfc, &x, &y);
-	freerdp_input_send_mouse_event(input, flags, x, y);
-}
-
-void mf_scale_mouse_event_ex(void *context, rdpInput *input, UINT16 flags, UINT16 x, UINT16 y)
-{
-	mfContext *mfc = (mfContext *)context;
-	MRDPView *view = (MRDPView *)mfc->view;
-	// Convert to windows coordinates
-	y = [view frame].size.height - y;
-
-	mf_scale_mouse_coordinates(mfc, &x, &y);
-	freerdp_input_send_extended_mouse_event(input, flags, x, y);
-}
+	if (!mfc->context.settings->SmartSizing || ((ww == dw) && (wh == dh)))
+	{
+		y = y + mfc->yCurrentScroll;
 
-void mf_press_mouse_button(void *context, rdpInput *input, int button, int x, int y, BOOL down)
-{
-	UINT16 flags = 0;
-	UINT16 xflags = 0;
+		if (wh != dh)
+		{
+			y -= (dh - wh);
+		}
 
-	if (down)
-	{
-		flags |= PTR_FLAGS_DOWN;
-		xflags |= PTR_XFLAGS_DOWN;
+		freerdp_input_send_mouse_event(input, flags, x + mfc->xCurrentScroll, y);
 	}
-
-	switch (button)
+	else
 	{
-	case 0:
-		mf_scale_mouse_event(context, input, flags | PTR_FLAGS_BUTTON1, x, y);
-		break;
-
-	case 1:
-		mf_scale_mouse_event(context, input, flags | PTR_FLAGS_BUTTON2, x, y);
-		break;
-
-	case 2:
-		mf_scale_mouse_event(context, input, flags | PTR_FLAGS_BUTTON3, x, y);
-		break;
-
-	case 3:
-		mf_scale_mouse_event_ex(context, input, xflags | PTR_XFLAGS_BUTTON1, x, y);
-		break;
-
-	case 4:
-		mf_scale_mouse_event_ex(context, input, xflags | PTR_XFLAGS_BUTTON2, x, y);
-		break;
-
-	default:
-		break;
+		y = y * dh / wh + mfc->yCurrentScroll;
+		freerdp_input_send_mouse_event(input, flags, x * dw / ww + mfc->xCurrentScroll, y);
 	}
 }
 
diff -urN client/Mac/MRDPView.m ../../informatimago/FreeRDP/client/Mac/MRDPView.m
--- client/Mac/MRDPView.m	2019-07-25 19:50:59.749891908 +0300
+++ ../../informatimago/FreeRDP/client/Mac/MRDPView.m	2019-07-25 20:11:23.795961995 +0300
@@ -230,7 +230,6 @@
 		}
 
 	disconnect:
-		[view setIs_connected:0];
 		freerdp_disconnect(instance);
 
 		if (settings->AsyncInput && inputThread)
@@ -322,7 +321,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	mf_press_mouse_button(context, instance->input, 0, x, y, TRUE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_DOWN | PTR_FLAGS_BUTTON1, x, y);
 }
 
 - (void)mouseUp:(NSEvent *)event {
@@ -334,7 +333,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	mf_press_mouse_button(context, instance->input, 0, x, y, FALSE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_BUTTON1, x, y);
 }
 
 - (void)rightMouseDown:(NSEvent *)event {
@@ -346,7 +345,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	mf_press_mouse_button(context, instance->input, 1, x, y, TRUE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_DOWN | PTR_FLAGS_BUTTON2, x, y);
 }
 
 - (void)rightMouseUp:(NSEvent *)event {
@@ -358,7 +357,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	mf_press_mouse_button(context, instance->input, 1, x, y, FALSE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_BUTTON2, x, y);
 }
 
 - (void)otherMouseDown:(NSEvent *)event {
@@ -370,8 +369,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	int pressed = [event buttonNumber];
-	mf_press_mouse_button(context, instance->input, pressed, x, y, TRUE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_DOWN | PTR_FLAGS_BUTTON3, x, y);
 }
 
 - (void)otherMouseUp:(NSEvent *)event {
@@ -383,8 +381,7 @@
 	NSPoint loc = [event locationInWindow];
 	int x = (int)loc.x;
 	int y = (int)loc.y;
-	int pressed = [event buttonNumber];
-	mf_press_mouse_button(context, instance->input, pressed, x, y, FALSE);
+	mf_scale_mouse_event(context, instance->input, PTR_FLAGS_BUTTON3, x, y);
 }
 
 - (void)scrollWheel:(NSEvent *)event {
@@ -394,39 +391,20 @@
 	if (!self.is_connected)
 		return;
 
-	float dx = [event deltaX];
-	float dy = [event deltaY];
+	NSPoint loc = [event locationInWindow];
+	int x = (int)loc.x;
+	int y = (int)loc.y;
+	flags = PTR_FLAGS_WHEEL;
 	/* 1 event = 120 units */
-	UINT16 units = 0;
-
-	if (fabsf(dy) > FLT_EPSILON)
-	{
-		flags = PTR_FLAGS_HWHEEL;
-		units = fabsf(dy) * 120;
-
-		if (dy < 0)
-			flags |= PTR_FLAGS_WHEEL_NEGATIVE;
-	}
-	else if (fabsf(dx) > FLT_EPSILON)
-	{
-		flags = PTR_FLAGS_WHEEL;
-		units = fabsf(dx) * 120;
-
-		if (dx > 0)
-			flags |= PTR_FLAGS_WHEEL_NEGATIVE;
-	}
-	else
-		return;
+	int units = [event deltaY] * 120;
 
 	/* send out all accumulated rotations */
-	if (units > WheelRotationMask)
-		units = WheelRotationMask;
-
 	while (units != 0)
 	{
 		/* limit to maximum value in WheelRotationMask (9bit signed value) */
-		const UINT16 step = units & WheelRotationMask;
-		mf_scale_mouse_event(context, instance->input, flags | step, 0, 0);
+		int step = MIN(MAX(-256, units), 255);
+		mf_scale_mouse_event(context, instance->input, flags | ((UINT16)step & WheelRotationMask),
+		                     x, y);
 		units -= step;
 	}
 }
@@ -754,9 +732,6 @@
 }
 
 - (void)resume {
-	if (!self.is_connected)
-		return;
-
 	dispatch_async(dispatch_get_main_queue(), ^{
 		self->pasteboard_timer =
 		    [NSTimer scheduledTimerWithTimeInterval:0.5
@@ -892,16 +867,9 @@
 
 void mac_post_disconnect(freerdp *instance)
 {
-	mfContext *mfc;
-	MRDPView *view;
 	if (!instance || !instance->context)
 		return;
 
-	mfc = (mfContext *)instance->context;
-	view = (MRDPView *)mfc->view;
-
-	[view pause];
-
 	PubSub_UnsubscribeChannelConnected(instance->context->pubSub,
 	                                   mac_OnChannelConnectedEventHandler);
 	PubSub_UnsubscribeChannelDisconnected(instance->context->pubSub,
diff -urN client/Sample/tf_channels.c ../../informatimago/FreeRDP/client/Sample/tf_channels.c
--- client/Sample/tf_channels.c	2019-07-25 19:50:59.765891988 +0300
+++ ../../informatimago/FreeRDP/client/Sample/tf_channels.c	2019-07-25 20:11:23.815962094 +0300
@@ -42,8 +42,6 @@
 static UINT tf_encomsp_participant_created(EncomspClientContext* context,
                                            ENCOMSP_PARTICIPANT_CREATED_PDU* participantCreated)
 {
-	WINPR_UNUSED(context);
-	WINPR_UNUSED(participantCreated);
 	return CHANNEL_RC_OK;
 }
 
@@ -69,6 +67,8 @@
 void tf_OnChannelConnectedEventHandler(void* context, ChannelConnectedEventArgs* e)
 {
 	tfContext* tf = (tfContext*)context;
+	rdpSettings* settings;
+	settings = tf->context.settings;
 
 	if (strcmp(e->name, RDPEI_DVC_CHANNEL_NAME) == 0)
 	{
@@ -96,6 +96,8 @@
 void tf_OnChannelDisconnectedEventHandler(void* context, ChannelDisconnectedEventArgs* e)
 {
 	tfContext* tf = (tfContext*)context;
+	rdpSettings* settings;
+	settings = tf->context.settings;
 
 	if (strcmp(e->name, RDPEI_DVC_CHANNEL_NAME) == 0)
 	{
diff -urN client/Sample/tf_freerdp.c ../../informatimago/FreeRDP/client/Sample/tf_freerdp.c
--- client/Sample/tf_freerdp.c	2019-07-25 19:50:59.769892007 +0300
+++ ../../informatimago/FreeRDP/client/Sample/tf_freerdp.c	2019-07-25 20:11:23.819962114 +0300
@@ -74,8 +74,6 @@
 static BOOL tf_play_sound(rdpContext* context, const PLAY_SOUND_UPDATE* play_sound)
 {
 	/* TODO: Implement */
-	WINPR_UNUSED(context);
-	WINPR_UNUSED(play_sound);
 	return TRUE;
 }
 
@@ -83,8 +81,6 @@
 static BOOL tf_keyboard_set_indicators(rdpContext* context, UINT16 led_flags)
 {
 	/* TODO: Set local keyboard indicator LED status */
-	WINPR_UNUSED(context);
-	WINPR_UNUSED(led_flags);
 	return TRUE;
 }
 
@@ -170,7 +166,6 @@
 	                                      tf_OnChannelDisconnectedEventHandler);
 	gdi_free(instance);
 	/* TODO : Clean up custom stuff */
-	WINPR_UNUSED(context);
 }
 
 /* RDP main loop.
@@ -248,7 +243,6 @@
 
 	tf = (tfContext*)instance->context;
 	WLog_INFO(TAG, "Logon Error Info %s [%s]", str_data, str_type);
-	WINPR_UNUSED(tf);
 	return 1;
 }
 
@@ -268,7 +262,6 @@
 	instance->VerifyChangedCertificateEx = client_cli_verify_changed_certificate_ex;
 	instance->LogonErrorInfo = tf_logon_error_info;
 	/* TODO: Client display set up */
-	WINPR_UNUSED(tf);
 	return TRUE;
 }
 
@@ -280,20 +273,17 @@
 		return;
 
 	/* TODO: Client display tear down */
-	WINPR_UNUSED(tf);
 }
 
 static int tf_client_start(rdpContext* context)
 {
 	/* TODO: Start client related stuff */
-	WINPR_UNUSED(context);
 	return 0;
 }
 
 static int tf_client_stop(rdpContext* context)
 {
 	/* TODO: Stop client related stuff */
-	WINPR_UNUSED(context);
 	return 0;
 }
 
diff -urN client/Wayland/CMakeLists.txt ../../informatimago/FreeRDP/client/Wayland/CMakeLists.txt
--- client/Wayland/CMakeLists.txt	2019-07-24 06:11:52.418197327 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/CMakeLists.txt	2019-07-19 20:00:34.109156420 +0300
@@ -25,22 +25,15 @@
 set(${MODULE_PREFIX}_SRCS
     wlfreerdp.c
 	wlfreerdp.h
-	wlf_disp.c
-	wlf_disp.h
-	wlf_pointer.c
-	wlf_pointer.h
 	wlf_input.c
 	wlf_input.h
-	wlf_cliprdr.c
-	wlf_cliprdr.h
 	wlf_channels.c
 	wlf_channels.h
 	)
 
-list (APPEND ${MODULE_PREFIX}_LIBS freerdp-client freerdp uwac)
-
 add_executable(${MODULE_NAME} ${${MODULE_PREFIX}_SRCS})
 
+set(${MODULE_PREFIX}_LIBS ${${MODULE_PREFIX}_LIBS} freerdp-client freerdp uwac)
 target_link_libraries(${MODULE_NAME} ${${MODULE_PREFIX}_LIBS})
 
 install(TARGETS ${MODULE_NAME} DESTINATION ${CMAKE_INSTALL_BINDIR} COMPONENT client)
diff -urN client/Wayland/wlf_channels.c ../../informatimago/FreeRDP/client/Wayland/wlf_channels.c
--- client/Wayland/wlf_channels.c	2019-07-25 19:50:59.773892027 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_channels.c	2019-07-25 20:11:23.823962134 +0300
@@ -24,8 +24,6 @@
 #include <freerdp/gdi/gfx.h>
 
 #include "wlf_channels.h"
-#include "wlf_cliprdr.h"
-#include "wlf_disp.h"
 #include "wlfreerdp.h"
 
 /**
@@ -61,6 +59,8 @@
 void wlf_OnChannelConnectedEventHandler(void* context, ChannelConnectedEventArgs* e)
 {
 	wlfContext* wlf = (wlfContext*)context;
+	rdpSettings* settings;
+	settings = wlf->context.settings;
 
 	if (strcmp(e->name, RDPEI_DVC_CHANNEL_NAME) == 0)
 	{
@@ -71,28 +71,26 @@
 	}
 	else if (strcmp(e->name, RDPGFX_DVC_CHANNEL_NAME) == 0)
 	{
-		gdi_graphics_pipeline_init(wlf->context.gdi, (RdpgfxClientContext*)e->pInterface);
+		if (settings->SoftwareGdi)
+			gdi_graphics_pipeline_init(wlf->context.gdi, (RdpgfxClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, RAIL_SVC_CHANNEL_NAME) == 0)
 	{
 	}
 	else if (strcmp(e->name, CLIPRDR_SVC_CHANNEL_NAME) == 0)
 	{
-		wlf_cliprdr_init(wlf->clipboard, (CliprdrClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, ENCOMSP_SVC_CHANNEL_NAME) == 0)
 	{
 		wlf_encomsp_init(wlf, (EncomspClientContext*)e->pInterface);
 	}
-	else if (strcmp(e->name, DISP_DVC_CHANNEL_NAME) == 0)
-	{
-		wlf_disp_init(wlf->disp, (DispClientContext*)e->pInterface);
-	}
 }
 
 void wlf_OnChannelDisconnectedEventHandler(void* context, ChannelDisconnectedEventArgs* e)
 {
 	wlfContext* wlf = (wlfContext*)context;
+	rdpSettings* settings;
+	settings = wlf->context.settings;
 
 	if (strcmp(e->name, RDPEI_DVC_CHANNEL_NAME) == 0)
 	{
@@ -103,21 +101,17 @@
 	}
 	else if (strcmp(e->name, RDPGFX_DVC_CHANNEL_NAME) == 0)
 	{
-		gdi_graphics_pipeline_uninit(wlf->context.gdi, (RdpgfxClientContext*)e->pInterface);
+		if (settings->SoftwareGdi)
+			gdi_graphics_pipeline_uninit(wlf->context.gdi, (RdpgfxClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, RAIL_SVC_CHANNEL_NAME) == 0)
 	{
 	}
 	else if (strcmp(e->name, CLIPRDR_SVC_CHANNEL_NAME) == 0)
 	{
-		wlf_cliprdr_uninit(wlf->clipboard, (CliprdrClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, ENCOMSP_SVC_CHANNEL_NAME) == 0)
 	{
 		wlf_encomsp_uninit(wlf, (EncomspClientContext*)e->pInterface);
 	}
-	else if (strcmp(e->name, DISP_DVC_CHANNEL_NAME) == 0)
-	{
-		wlf_disp_uninit(wlf->disp, (DispClientContext*)e->pInterface);
-	}
 }
diff -urN client/Wayland/wlf_cliprdr.c ../../informatimago/FreeRDP/client/Wayland/wlf_cliprdr.c
--- client/Wayland/wlf_cliprdr.c	2019-07-25 19:50:59.785892087 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_cliprdr.c	1970-01-01 03:00:00.000000000 +0300
@@ -1,892 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Clipboard Redirection
- *
- * Copyright 2018 Armin Novak <armin.novak@thincast.com>
- * Copyright 2018 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifdef HAVE_CONFIG_H
-#	include "config.h"
-#endif
-
-#include <stdlib.h>
-
-#include <winpr/crt.h>
-#include <winpr/image.h>
-#include <winpr/stream.h>
-#include <winpr/clipboard.h>
-
-#include <freerdp/log.h>
-#include <freerdp/client/cliprdr.h>
-#include <freerdp/channels/channels.h>
-#include <freerdp/channels/cliprdr.h>
-
-#include "wlf_cliprdr.h"
-
-#define TAG CLIENT_TAG("wayland.cliprdr")
-
-#define MAX_CLIPBOARD_FORMATS 255
-
-static const char* mime_text[] = { "text/plain",  "text/plain;charset=utf-8",
-	                               "UTF8_STRING", "COMPOUND_TEXT",
-	                               "TEXT",        "STRING" };
-
-static const char* mime_image[] = {
-	"image/png",       "image/bmp",   "image/x-bmp",        "image/x-MS-bmp",
-	"image/x-icon",    "image/x-ico", "image/x-win-bitmap", "image/vmd.microsoft.icon",
-	"application/ico", "image/ico",   "image/icon",         "image/jpeg",
-	"image/tiff"
-};
-
-static const char* mime_html[] = { "text/html" };
-
-struct wlf_clipboard
-{
-	wlfContext* wfc;
-	rdpChannels* channels;
-	CliprdrClientContext* context;
-	wLog* log;
-
-	UwacSeat* seat;
-	wClipboard* system;
-	wClipboardDelegate* delegate;
-
-	size_t numClientFormats;
-	CLIPRDR_FORMAT* clientFormats;
-
-	size_t numServerFormats;
-	CLIPRDR_FORMAT* serverFormats;
-
-	BOOL sync;
-
-	/* File clipping */
-	BOOL streams_supported;
-	BOOL file_formats_registered;
-
-	/* Server response stuff */
-	FILE* responseFile;
-	UINT32 responseFormat;
-	const char* responseMime;
-};
-
-static BOOL wlf_mime_is_text(const char* mime)
-{
-	size_t x;
-
-	for (x = 0; x < ARRAYSIZE(mime_text); x++)
-	{
-		if (strcmp(mime, mime_text[x]) == 0)
-			return TRUE;
-	}
-
-	return FALSE;
-}
-
-static BOOL wlf_mime_is_image(const char* mime)
-{
-	size_t x;
-
-	for (x = 0; x < ARRAYSIZE(mime_image); x++)
-	{
-		if (strcmp(mime, mime_image[x]) == 0)
-			return TRUE;
-	}
-
-	return FALSE;
-}
-
-static BOOL wlf_mime_is_html(const char* mime)
-{
-	size_t x;
-
-	for (x = 0; x < ARRAYSIZE(mime_html); x++)
-	{
-		if (strcmp(mime, mime_html[x]) == 0)
-			return TRUE;
-	}
-
-	return FALSE;
-}
-
-static void wlf_cliprdr_free_server_formats(wfClipboard* clipboard)
-{
-	if (clipboard && clipboard->serverFormats)
-	{
-		size_t j;
-
-		for (j = 0; j < clipboard->numServerFormats; j++)
-		{
-			CLIPRDR_FORMAT* format = &clipboard->serverFormats[j];
-			free(format->formatName);
-		}
-
-		free(clipboard->serverFormats);
-		clipboard->serverFormats = NULL;
-		clipboard->numServerFormats = 0;
-	}
-
-	if (clipboard)
-		UwacClipboardOfferDestroy(clipboard->seat);
-}
-
-static void wlf_cliprdr_free_client_formats(wfClipboard* clipboard)
-{
-	if (clipboard && clipboard->numClientFormats)
-	{
-		size_t j;
-
-		for (j = 0; j < clipboard->numClientFormats; j++)
-		{
-			CLIPRDR_FORMAT* format = &clipboard->clientFormats[j];
-			free(format->formatName);
-		}
-
-		free(clipboard->clientFormats);
-		clipboard->clientFormats = NULL;
-		clipboard->numClientFormats = 0;
-	}
-
-	if (clipboard)
-		UwacClipboardOfferDestroy(clipboard->seat);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_send_client_format_list(wfClipboard* clipboard)
-{
-	CLIPRDR_FORMAT_LIST formatList = { 0 };
-	formatList.msgFlags = CB_RESPONSE_OK;
-	formatList.numFormats = (UINT32)clipboard->numClientFormats;
-	formatList.formats = clipboard->clientFormats;
-	return clipboard->context->ClientFormatList(clipboard->context, &formatList);
-}
-
-static void wfl_cliprdr_add_client_format_id(wfClipboard* clipboard, UINT32 formatId)
-{
-	size_t x;
-	CLIPRDR_FORMAT* format;
-	const char* name = ClipboardGetFormatName(clipboard->system, formatId);
-
-	for (x = 0; x < clipboard->numClientFormats; x++)
-	{
-		format = &clipboard->clientFormats[x];
-
-		if (format->formatId == formatId)
-			return;
-	}
-
-	format = realloc(clipboard->clientFormats,
-	                 (clipboard->numClientFormats + 1) * sizeof(CLIPRDR_FORMAT));
-
-	if (!format)
-		return;
-
-	clipboard->clientFormats = format;
-	format = &clipboard->clientFormats[clipboard->numClientFormats++];
-	format->formatId = formatId;
-	format->formatName = NULL;
-
-	if (name && (formatId >= CF_MAX))
-		format->formatName = _strdup(name);
-}
-
-static void wlf_cliprdr_add_client_format(wfClipboard* clipboard, const char* mime)
-{
-	if (wlf_mime_is_html(mime))
-	{
-		UINT32 formatId = ClipboardGetFormatId(clipboard->system, "HTML Format");
-		wfl_cliprdr_add_client_format_id(clipboard, formatId);
-	}
-	else if (wlf_mime_is_text(mime))
-	{
-		wfl_cliprdr_add_client_format_id(clipboard, CF_TEXT);
-		wfl_cliprdr_add_client_format_id(clipboard, CF_OEMTEXT);
-		wfl_cliprdr_add_client_format_id(clipboard, CF_UNICODETEXT);
-	}
-	else if (wlf_mime_is_image(mime))
-	{
-		UINT32 formatId = ClipboardGetFormatId(clipboard->system, "image/bmp");
-		wfl_cliprdr_add_client_format_id(clipboard, formatId);
-		wfl_cliprdr_add_client_format_id(clipboard, CF_DIB);
-	}
-
-	wlf_cliprdr_send_client_format_list(clipboard);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_send_data_request(wfClipboard* clipboard, UINT32 formatId)
-{
-	CLIPRDR_FORMAT_DATA_REQUEST request = { 0 };
-	request.requestedFormatId = formatId;
-	return clipboard->context->ClientFormatDataRequest(clipboard->context, &request);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_send_data_response(wfClipboard* clipboard, const BYTE* data, size_t size)
-{
-	CLIPRDR_FORMAT_DATA_RESPONSE response = { 0 };
-
-	if (size > UINT32_MAX)
-		return ERROR_INVALID_PARAMETER;
-
-	response.msgFlags = (data) ? CB_RESPONSE_OK : CB_RESPONSE_FAIL;
-	response.dataLen = (UINT32)size;
-	response.requestedFormatData = data;
-	return clipboard->context->ClientFormatDataResponse(clipboard->context, &response);
-}
-
-BOOL wlf_cliprdr_handle_event(wfClipboard* clipboard, const UwacClipboardEvent* event)
-{
-	if (!clipboard || !event)
-		return FALSE;
-
-	if (!clipboard->context)
-		return TRUE;
-
-	switch (event->type)
-	{
-	case UWAC_EVENT_CLIPBOARD_AVAILABLE:
-		clipboard->seat = event->seat;
-		return TRUE;
-
-	case UWAC_EVENT_CLIPBOARD_OFFER:
-		WLog_Print(clipboard->log, WLOG_INFO, "client announces mime %s", event->mime);
-		wlf_cliprdr_add_client_format(clipboard, event->mime);
-		return TRUE;
-
-	case UWAC_EVENT_CLIPBOARD_SELECT:
-		WLog_Print(clipboard->log, WLOG_DEBUG, "client announces new data");
-		wlf_cliprdr_free_client_formats(clipboard);
-		return TRUE;
-
-	default:
-		return FALSE;
-	}
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_send_client_capabilities(wfClipboard* clipboard)
-{
-	CLIPRDR_CAPABILITIES capabilities;
-	CLIPRDR_GENERAL_CAPABILITY_SET generalCapabilitySet;
-	capabilities.cCapabilitiesSets = 1;
-	capabilities.capabilitySets = (CLIPRDR_CAPABILITY_SET*)&(generalCapabilitySet);
-	generalCapabilitySet.capabilitySetType = CB_CAPSTYPE_GENERAL;
-	generalCapabilitySet.capabilitySetLength = 12;
-	generalCapabilitySet.version = CB_CAPS_VERSION_2;
-	generalCapabilitySet.generalFlags = CB_USE_LONG_FORMAT_NAMES;
-
-	if (clipboard->streams_supported && clipboard->file_formats_registered)
-		generalCapabilitySet.generalFlags |= CB_STREAM_FILECLIP_ENABLED | CB_FILECLIP_NO_FILE_PATHS;
-
-	return clipboard->context->ClientCapabilities(clipboard->context, &capabilities);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_send_client_format_list_response(wfClipboard* clipboard, BOOL status)
-{
-	CLIPRDR_FORMAT_LIST_RESPONSE formatListResponse;
-	formatListResponse.msgType = CB_FORMAT_LIST_RESPONSE;
-	formatListResponse.msgFlags = status ? CB_RESPONSE_OK : CB_RESPONSE_FAIL;
-	formatListResponse.dataLen = 0;
-	return clipboard->context->ClientFormatListResponse(clipboard->context, &formatListResponse);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_monitor_ready(CliprdrClientContext* context,
-                                      const CLIPRDR_MONITOR_READY* monitorReady)
-{
-	wfClipboard* clipboard = (wfClipboard*)context->custom;
-	UINT ret;
-	WINPR_UNUSED(monitorReady);
-
-	if ((ret = wlf_cliprdr_send_client_capabilities(clipboard)) != CHANNEL_RC_OK)
-		return ret;
-
-	if ((ret = wlf_cliprdr_send_client_format_list(clipboard)) != CHANNEL_RC_OK)
-		return ret;
-
-	clipboard->sync = TRUE;
-	return CHANNEL_RC_OK;
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_server_capabilities(CliprdrClientContext* context,
-                                            const CLIPRDR_CAPABILITIES* capabilities)
-{
-	UINT32 i;
-	const BYTE* capsPtr = (const BYTE*)capabilities->capabilitySets;
-	wfClipboard* clipboard = (wfClipboard*)context->custom;
-	clipboard->streams_supported = FALSE;
-
-	for (i = 0; i < capabilities->cCapabilitiesSets; i++)
-	{
-		const CLIPRDR_CAPABILITY_SET* caps = (const CLIPRDR_CAPABILITY_SET*)capsPtr;
-
-		if (caps->capabilitySetType == CB_CAPSTYPE_GENERAL)
-		{
-			const CLIPRDR_GENERAL_CAPABILITY_SET* generalCaps =
-			    (const CLIPRDR_GENERAL_CAPABILITY_SET*)caps;
-
-			if (generalCaps->generalFlags & CB_STREAM_FILECLIP_ENABLED)
-			{
-				clipboard->streams_supported = TRUE;
-			}
-		}
-
-		capsPtr += caps->capabilitySetLength;
-	}
-
-	return CHANNEL_RC_OK;
-}
-
-static void wlf_cliprdr_transfer_data(UwacSeat* seat, void* context, const char* mime, int fd)
-{
-	wfClipboard* clipboard = (wfClipboard*)context;
-	size_t x;
-	WINPR_UNUSED(seat);
-	clipboard->responseMime = NULL;
-
-	for (x = 0; x < ARRAYSIZE(mime_html); x++)
-	{
-		const char* mime_cur = mime_html[x];
-
-		if (strcmp(mime_cur, mime) == 0)
-		{
-			clipboard->responseMime = mime_cur;
-			clipboard->responseFormat = ClipboardGetFormatId(clipboard->system, "HTML Format");
-			break;
-		}
-	}
-
-	for (x = 0; x < ARRAYSIZE(mime_text); x++)
-	{
-		const char* mime_cur = mime_text[x];
-
-		if (strcmp(mime_cur, mime) == 0)
-		{
-			clipboard->responseMime = mime_cur;
-			clipboard->responseFormat = CF_UNICODETEXT;
-			break;
-		}
-	}
-
-	for (x = 0; x < ARRAYSIZE(mime_image); x++)
-	{
-		const char* mime_cur = mime_image[x];
-
-		if (strcmp(mime_cur, mime) == 0)
-		{
-			clipboard->responseMime = mime_cur;
-			clipboard->responseFormat = CF_DIB;
-			break;
-		}
-	}
-
-	if (clipboard->responseMime != NULL)
-	{
-		clipboard->responseFile = fdopen(fd, "w");
-
-		if (clipboard->responseFile)
-			wlf_cliprdr_send_data_request(clipboard, clipboard->responseFormat);
-		else
-			WLog_Print(clipboard->log, WLOG_ERROR,
-			           "failed to open clipboard file descriptor for MIME %s",
-			           clipboard->responseMime);
-	}
-}
-
-static void wlf_cliprdr_cancel_data(UwacSeat* seat, void* context)
-{
-	WINPR_UNUSED(seat);
-	WINPR_UNUSED(context);
-}
-
-/**
- * Called when the clipboard changes server side.
- *
- * Clear the local clipboard offer and replace it with a new one
- * that announces the formats we get listed here.
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT wlf_cliprdr_server_format_list(CliprdrClientContext* context,
-                                           const CLIPRDR_FORMAT_LIST* formatList)
-{
-	UINT32 i;
-	wfClipboard* clipboard;
-	BOOL html = FALSE;
-	BOOL text = FALSE;
-	BOOL image = FALSE;
-
-	if (!context || !context->custom)
-		return ERROR_INVALID_PARAMETER;
-
-	clipboard = (wfClipboard*)context->custom;
-	wlf_cliprdr_free_server_formats(clipboard);
-
-	if (!(clipboard->serverFormats =
-	          (CLIPRDR_FORMAT*)calloc(formatList->numFormats, sizeof(CLIPRDR_FORMAT))))
-	{
-		WLog_Print(clipboard->log, WLOG_ERROR,
-		           "failed to allocate %" PRIuz " CLIPRDR_FORMAT structs",
-		           clipboard->numServerFormats);
-		return CHANNEL_RC_NO_MEMORY;
-	}
-
-	clipboard->numServerFormats = formatList->numFormats;
-
-	if (!clipboard->seat)
-	{
-		WLog_Print(clipboard->log, WLOG_ERROR,
-		           "clipboard->seat=NULL, check your client implementation");
-		return ERROR_INTERNAL_ERROR;
-	}
-
-	for (i = 0; i < formatList->numFormats; i++)
-	{
-		const CLIPRDR_FORMAT* format = &formatList->formats[i];
-		CLIPRDR_FORMAT* srvFormat = &clipboard->serverFormats[i];
-		srvFormat->formatId = format->formatId;
-
-		if (format->formatName)
-		{
-			srvFormat->formatName = _strdup(format->formatName);
-
-			if (!srvFormat->formatName)
-			{
-				wlf_cliprdr_free_server_formats(clipboard);
-				return CHANNEL_RC_NO_MEMORY;
-			}
-		}
-
-		if (format->formatName)
-		{
-			if (strcmp(format->formatName, "HTML Format") == 0)
-			{
-				text = TRUE;
-				html = TRUE;
-			}
-		}
-		else
-		{
-			switch (format->formatId)
-			{
-			case CF_TEXT:
-			case CF_OEMTEXT:
-			case CF_UNICODETEXT:
-				text = TRUE;
-				break;
-
-			case CF_DIB:
-				image = TRUE;
-				break;
-
-			default:
-				break;
-			}
-		}
-	}
-
-	if (html)
-	{
-		size_t x;
-
-		for (x = 0; x < ARRAYSIZE(mime_html); x++)
-			UwacClipboardOfferCreate(clipboard->seat, mime_html[x]);
-	}
-
-	if (text)
-	{
-		size_t x;
-
-		for (x = 0; x < ARRAYSIZE(mime_text); x++)
-			UwacClipboardOfferCreate(clipboard->seat, mime_text[x]);
-	}
-
-	if (image)
-	{
-		size_t x;
-
-		for (x = 0; x < ARRAYSIZE(mime_image); x++)
-			UwacClipboardOfferCreate(clipboard->seat, mime_image[x]);
-	}
-
-	UwacClipboardOfferAnnounce(clipboard->seat, clipboard, wlf_cliprdr_transfer_data,
-	                           wlf_cliprdr_cancel_data);
-	return wlf_cliprdr_send_client_format_list_response(clipboard, TRUE);
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT
-wlf_cliprdr_server_format_list_response(CliprdrClientContext* context,
-                                        const CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
-{
-	// wfClipboard* clipboard = (wfClipboard*) context->custom;
-	return CHANNEL_RC_OK;
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT
-wlf_cliprdr_server_format_data_request(CliprdrClientContext* context,
-                                       const CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
-{
-	int cnv;
-	UINT rc = CHANNEL_RC_OK;
-	BYTE* data;
-	LPWSTR cdata;
-	size_t size;
-	const char* mime;
-	UINT32 formatId = formatDataRequest->requestedFormatId;
-	wfClipboard* clipboard = (wfClipboard*)context->custom;
-
-	switch (formatId)
-	{
-	case CF_TEXT:
-	case CF_OEMTEXT:
-	case CF_UNICODETEXT:
-		mime = "text/plain;charset=utf-8";
-		break;
-
-	case CF_DIB:
-	case CF_DIBV5:
-		mime = "image/bmp";
-		break;
-
-	default:
-		if (formatId == ClipboardGetFormatId(clipboard->system, "HTML Format"))
-			mime = "text/html";
-		else if (formatId == ClipboardGetFormatId(clipboard->system, "image/bmp"))
-			mime = "image/bmp";
-		else
-			mime = ClipboardGetFormatName(clipboard->system, formatId);
-
-		break;
-	}
-
-	data = UwacClipboardDataGet(clipboard->seat, mime, &size);
-
-	if (!data)
-		return ERROR_INTERNAL_ERROR;
-
-	switch (formatId)
-	{
-	case CF_UNICODETEXT:
-		if (size > INT_MAX)
-			rc = ERROR_INTERNAL_ERROR;
-		else
-		{
-			cnv = ConvertToUnicode(CP_UTF8, 0, (LPCSTR)data, (int)size, &cdata, 0);
-			free(data);
-			data = NULL;
-
-			if (cnv < 0)
-				rc = ERROR_INTERNAL_ERROR;
-			else
-			{
-				size = (size_t)cnv;
-				data = (BYTE*)cdata;
-				size *= sizeof(WCHAR);
-			}
-		}
-
-		break;
-
-	default:
-		// TODO: Image conversions
-		break;
-	}
-
-	if (rc != CHANNEL_RC_OK)
-		return rc;
-
-	rc = wlf_cliprdr_send_data_response(clipboard, data, size);
-	free(data);
-	return rc;
-}
-
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT
-wlf_cliprdr_server_format_data_response(CliprdrClientContext* context,
-                                        const CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
-{
-	int cnv;
-	UINT rc = ERROR_INTERNAL_ERROR;
-	UINT32 size = formatDataResponse->dataLen;
-	LPSTR cdata = NULL;
-	LPCSTR data = (LPCSTR)formatDataResponse->requestedFormatData;
-	const WCHAR* wdata = (const WCHAR*)formatDataResponse->requestedFormatData;
-	wfClipboard* clipboard = (wfClipboard*)context->custom;
-
-	if (size > INT_MAX * sizeof(WCHAR))
-		return ERROR_INTERNAL_ERROR;
-
-	switch (clipboard->responseFormat)
-	{
-	case CF_UNICODETEXT:
-		cnv = ConvertFromUnicode(CP_UTF8, 0, wdata, (int)(size / sizeof(WCHAR)), &cdata, 0, NULL,
-		                         NULL);
-
-		if (cnv < 0)
-			return ERROR_INTERNAL_ERROR;
-
-		size = (size_t)cnv;
-		data = cdata;
-		break;
-
-	default:
-		// TODO: Image conversions
-		break;
-	}
-
-	fwrite(data, 1, size, clipboard->responseFile);
-	fclose(clipboard->responseFile);
-	rc = CHANNEL_RC_OK;
-	free(cdata);
-	return rc;
-}
-
-static UINT
-wlf_cliprdr_server_file_size_request(wfClipboard* clipboard,
-                                     const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
-{
-	wClipboardFileSizeRequest request = { 0 };
-	request.streamId = fileContentsRequest->streamId;
-	request.listIndex = fileContentsRequest->listIndex;
-
-	if (fileContentsRequest->cbRequested != sizeof(UINT64))
-	{
-		WLog_Print(clipboard->log, WLOG_WARN,
-		           "unexpected FILECONTENTS_SIZE request: %" PRIu32 " bytes",
-		           fileContentsRequest->cbRequested);
-	}
-
-	return clipboard->delegate->ClientRequestFileSize(clipboard->delegate, &request);
-}
-
-static UINT
-wlf_cliprdr_server_file_range_request(wfClipboard* clipboard,
-                                      const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
-{
-	wClipboardFileRangeRequest request = { 0 };
-	request.streamId = fileContentsRequest->streamId;
-	request.listIndex = fileContentsRequest->listIndex;
-	request.nPositionLow = fileContentsRequest->nPositionLow;
-	request.nPositionHigh = fileContentsRequest->nPositionHigh;
-	request.cbRequested = fileContentsRequest->cbRequested;
-	return clipboard->delegate->ClientRequestFileRange(clipboard->delegate, &request);
-}
-
-static UINT
-wlf_cliprdr_send_file_contents_failure(CliprdrClientContext* context,
-                                       const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
-{
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
-	response.msgFlags = CB_RESPONSE_FAIL;
-	response.streamId = fileContentsRequest->streamId;
-	response.dwFlags = fileContentsRequest->dwFlags;
-	return context->ClientFileContentsResponse(context, &response);
-}
-
-static UINT
-wlf_cliprdr_server_file_contents_request(CliprdrClientContext* context,
-                                         const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
-{
-	UINT error = NO_ERROR;
-	wfClipboard* clipboard = context->custom;
-
-	/*
-	 * MS-RDPECLIP 2.2.5.3 File Contents Request PDU (CLIPRDR_FILECONTENTS_REQUEST):
-	 * The FILECONTENTS_SIZE and FILECONTENTS_RANGE flags MUST NOT be set at the same time.
-	 */
-	if ((fileContentsRequest->dwFlags & (FILECONTENTS_SIZE | FILECONTENTS_RANGE)) ==
-	    (FILECONTENTS_SIZE | FILECONTENTS_RANGE))
-	{
-		WLog_Print(clipboard->log, WLOG_ERROR, "invalid CLIPRDR_FILECONTENTS_REQUEST.dwFlags");
-		return wlf_cliprdr_send_file_contents_failure(context, fileContentsRequest);
-	}
-
-	if (fileContentsRequest->dwFlags & FILECONTENTS_SIZE)
-		error = wlf_cliprdr_server_file_size_request(clipboard, fileContentsRequest);
-
-	if (fileContentsRequest->dwFlags & FILECONTENTS_RANGE)
-		error = wlf_cliprdr_server_file_range_request(clipboard, fileContentsRequest);
-
-	if (error)
-	{
-		WLog_Print(clipboard->log, WLOG_ERROR,
-		           "failed to handle CLIPRDR_FILECONTENTS_REQUEST: 0x%08X", error);
-		return wlf_cliprdr_send_file_contents_failure(context, fileContentsRequest);
-	}
-
-	return CHANNEL_RC_OK;
-}
-
-static UINT wlf_cliprdr_clipboard_file_size_success(wClipboardDelegate* delegate,
-                                                    const wClipboardFileSizeRequest* request,
-                                                    UINT64 fileSize)
-{
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
-	wfClipboard* clipboard = delegate->custom;
-	response.msgFlags = CB_RESPONSE_OK;
-	response.streamId = request->streamId;
-	response.dwFlags = FILECONTENTS_SIZE;
-	response.cbRequested = sizeof(UINT64);
-	response.requestedData = (BYTE*)&fileSize;
-	return clipboard->context->ClientFileContentsResponse(clipboard->context, &response);
-}
-
-static UINT wlf_cliprdr_clipboard_file_size_failure(wClipboardDelegate* delegate,
-                                                    const wClipboardFileSizeRequest* request,
-                                                    UINT errorCode)
-{
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
-	wfClipboard* clipboard = delegate->custom;
-	WINPR_UNUSED(errorCode);
-	response.msgFlags = CB_RESPONSE_FAIL;
-	response.streamId = request->streamId;
-	response.dwFlags = FILECONTENTS_SIZE;
-	return clipboard->context->ClientFileContentsResponse(clipboard->context, &response);
-}
-
-static UINT wlf_cliprdr_clipboard_file_range_success(wClipboardDelegate* delegate,
-                                                     const wClipboardFileRangeRequest* request,
-                                                     const BYTE* data, UINT32 size)
-{
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
-	wfClipboard* clipboard = delegate->custom;
-	response.msgFlags = CB_RESPONSE_OK;
-	response.streamId = request->streamId;
-	response.dwFlags = FILECONTENTS_RANGE;
-	response.cbRequested = size;
-	response.requestedData = (const BYTE*)data;
-	return clipboard->context->ClientFileContentsResponse(clipboard->context, &response);
-}
-
-static UINT wlf_cliprdr_clipboard_file_range_failure(wClipboardDelegate* delegate,
-                                                     const wClipboardFileRangeRequest* request,
-                                                     UINT errorCode)
-{
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
-	wfClipboard* clipboard = delegate->custom;
-	WINPR_UNUSED(errorCode);
-	response.msgFlags = CB_RESPONSE_FAIL;
-	response.streamId = request->streamId;
-	response.dwFlags = FILECONTENTS_RANGE;
-	return clipboard->context->ClientFileContentsResponse(clipboard->context, &response);
-}
-
-wfClipboard* wlf_clipboard_new(wlfContext* wfc)
-{
-	rdpChannels* channels;
-	wfClipboard* clipboard;
-
-	if (!(clipboard = (wfClipboard*)calloc(1, sizeof(wfClipboard))))
-		return NULL;
-
-	clipboard->wfc = wfc;
-	channels = wfc->context.channels;
-	clipboard->log = WLog_Get(TAG);
-	clipboard->channels = channels;
-	clipboard->system = ClipboardCreate();
-	clipboard->delegate = ClipboardGetDelegate(clipboard->system);
-	clipboard->delegate->custom = clipboard;
-	/* TODO: set up a filesystem base path for local URI */
-	/* clipboard->delegate->basePath = "file:///tmp/foo/bar/gaga"; */
-	clipboard->delegate->ClipboardFileSizeSuccess = wlf_cliprdr_clipboard_file_size_success;
-	clipboard->delegate->ClipboardFileSizeFailure = wlf_cliprdr_clipboard_file_size_failure;
-	clipboard->delegate->ClipboardFileRangeSuccess = wlf_cliprdr_clipboard_file_range_success;
-	clipboard->delegate->ClipboardFileRangeFailure = wlf_cliprdr_clipboard_file_range_failure;
-	return clipboard;
-}
-
-void wlf_clipboard_free(wfClipboard* clipboard)
-{
-	if (!clipboard)
-		return;
-
-	wlf_cliprdr_free_server_formats(clipboard);
-	wlf_cliprdr_free_client_formats(clipboard);
-	ClipboardDestroy(clipboard->system);
-	free(clipboard);
-}
-
-BOOL wlf_cliprdr_init(wfClipboard* clipboard, CliprdrClientContext* cliprdr)
-{
-	if (!cliprdr || !clipboard)
-		return FALSE;
-
-	clipboard->context = cliprdr;
-	cliprdr->custom = (void*)clipboard;
-	cliprdr->MonitorReady = wlf_cliprdr_monitor_ready;
-	cliprdr->ServerCapabilities = wlf_cliprdr_server_capabilities;
-	cliprdr->ServerFormatList = wlf_cliprdr_server_format_list;
-	cliprdr->ServerFormatListResponse = wlf_cliprdr_server_format_list_response;
-	cliprdr->ServerFormatDataRequest = wlf_cliprdr_server_format_data_request;
-	cliprdr->ServerFormatDataResponse = wlf_cliprdr_server_format_data_response;
-	cliprdr->ServerFileContentsRequest = wlf_cliprdr_server_file_contents_request;
-	return TRUE;
-}
-
-BOOL wlf_cliprdr_uninit(wfClipboard* clipboard, CliprdrClientContext* cliprdr)
-{
-	if (cliprdr)
-		cliprdr->custom = NULL;
-
-	if (clipboard)
-		clipboard->context = NULL;
-
-	return TRUE;
-}
diff -urN client/Wayland/wlf_cliprdr.h ../../informatimago/FreeRDP/client/Wayland/wlf_cliprdr.h
--- client/Wayland/wlf_cliprdr.h	2019-07-24 06:11:52.418197327 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_cliprdr.h	1970-01-01 03:00:00.000000000 +0300
@@ -1,36 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Clipboard Redirection
- *
- * Copyright 2018 Armin Novak <armin.novak@thincast.com>
- * Copyright 2018 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef FREERDP_CLIENT_WAYLAND_CLIPRDR_H
-#define FREERDP_CLIENT_WAYLAND_CLIPRDR_H
-
-#include "wlfreerdp.h"
-
-#include <freerdp/client/cliprdr.h>
-
-wfClipboard* wlf_clipboard_new(wlfContext* wlc);
-void wlf_clipboard_free(wfClipboard* clipboard);
-
-BOOL wlf_cliprdr_init(wfClipboard* clipboard, CliprdrClientContext* cliprdr);
-BOOL wlf_cliprdr_uninit(wfClipboard* clipboard, CliprdrClientContext* cliprdr);
-
-BOOL wlf_cliprdr_handle_event(wfClipboard* clipboard, const UwacClipboardEvent* event);
-
-#endif /* FREERDP_CLIENT_WAYLAND_CLIPRDR_H */
diff -urN client/Wayland/wlf_disp.c ../../informatimago/FreeRDP/client/Wayland/wlf_disp.c
--- client/Wayland/wlf_disp.c	2019-07-25 19:50:59.793892125 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_disp.c	1970-01-01 03:00:00.000000000 +0300
@@ -1,379 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Display Control Channel
- *
- * Copyright 2018 Armin Novak <armin.novak@thincast.com>
- * Copyright 2018 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#include <winpr/sysinfo.h>
-
-#include "wlf_disp.h"
-
-#define TAG CLIENT_TAG("wayland.disp")
-
-#define RESIZE_MIN_DELAY 200 /* minimum delay in ms between two resizes */
-
-struct _wlfDispContext
-{
-	wlfContext* wlc;
-	DispClientContext* disp;
-	BOOL haveXRandr;
-	int eventBase, errorBase;
-	int lastSentWidth, lastSentHeight;
-	UINT64 lastSentDate;
-	int targetWidth, targetHeight;
-	BOOL activated;
-	BOOL waitingResize;
-	BOOL fullscreen;
-	UINT16 lastSentDesktopOrientation;
-	UINT32 lastSentDesktopScaleFactor;
-	UINT32 lastSentDeviceScaleFactor;
-};
-
-static UINT wlf_disp_sendLayout(DispClientContext* disp, rdpMonitor* monitors, size_t nmonitors);
-
-static BOOL wlf_disp_settings_changed(wlfDispContext* wlfDisp)
-{
-	rdpSettings* settings = wlfDisp->wlc->context.settings;
-
-	if (wlfDisp->lastSentWidth != wlfDisp->targetWidth)
-		return TRUE;
-
-	if (wlfDisp->lastSentHeight != wlfDisp->targetHeight)
-		return TRUE;
-
-	if (wlfDisp->lastSentDesktopOrientation != settings->DesktopOrientation)
-		return TRUE;
-
-	if (wlfDisp->lastSentDesktopScaleFactor != settings->DesktopScaleFactor)
-		return TRUE;
-
-	if (wlfDisp->lastSentDeviceScaleFactor != settings->DeviceScaleFactor)
-		return TRUE;
-
-	if (wlfDisp->fullscreen != wlfDisp->wlc->fullscreen)
-		return TRUE;
-
-	return FALSE;
-}
-
-static BOOL wlf_update_last_sent(wlfDispContext* wlfDisp)
-{
-	rdpSettings* settings = wlfDisp->wlc->context.settings;
-	wlfDisp->lastSentWidth = wlfDisp->targetWidth;
-	wlfDisp->lastSentHeight = wlfDisp->targetHeight;
-	wlfDisp->lastSentDesktopOrientation = settings->DesktopOrientation;
-	wlfDisp->lastSentDesktopScaleFactor = settings->DesktopScaleFactor;
-	wlfDisp->lastSentDeviceScaleFactor = settings->DeviceScaleFactor;
-	wlfDisp->fullscreen = wlfDisp->wlc->fullscreen;
-	return TRUE;
-}
-
-static BOOL wlf_disp_sendResize(wlfDispContext* wlfDisp)
-{
-	DISPLAY_CONTROL_MONITOR_LAYOUT layout;
-	wlfContext* wlc;
-	rdpSettings* settings;
-
-	if (!wlfDisp || !wlfDisp->wlc)
-		return FALSE;
-
-	wlc = wlfDisp->wlc;
-	settings = wlc->context.settings;
-
-	if (!settings)
-		return FALSE;
-
-	if (!wlfDisp->activated || !wlfDisp->disp)
-		return TRUE;
-
-	if (GetTickCount64() - wlfDisp->lastSentDate < RESIZE_MIN_DELAY)
-		return TRUE;
-
-	wlfDisp->lastSentDate = GetTickCount64();
-
-	if (!wlf_disp_settings_changed(wlfDisp))
-		return TRUE;
-
-	/* TODO: Multimonitor support for wayland
-	if (wlc->fullscreen && (settings->MonitorCount > 0))
-	{
-	    if (wlf_disp_sendLayout(wlfDisp->disp, settings->MonitorDefArray,
-	                           settings->MonitorCount) != CHANNEL_RC_OK)
-	        return FALSE;
-	}
-	else
-	*/
-	{
-		wlfDisp->waitingResize = TRUE;
-		layout.Flags = DISPLAY_CONTROL_MONITOR_PRIMARY;
-		layout.Top = layout.Left = 0;
-		layout.Width = wlfDisp->targetWidth;
-		layout.Height = wlfDisp->targetHeight;
-		layout.Orientation = settings->DesktopOrientation;
-		layout.DesktopScaleFactor = settings->DesktopScaleFactor;
-		layout.DeviceScaleFactor = settings->DeviceScaleFactor;
-		layout.PhysicalWidth = wlfDisp->targetWidth;
-		layout.PhysicalHeight = wlfDisp->targetHeight;
-
-		if (IFCALLRESULT(CHANNEL_RC_OK, wlfDisp->disp->SendMonitorLayout, wlfDisp->disp, 1,
-		                 &layout) != CHANNEL_RC_OK)
-			return FALSE;
-	}
-	return wlf_update_last_sent(wlfDisp);
-}
-
-static BOOL wlf_disp_set_window_resizable(wlfDispContext* wlfDisp)
-{
-#if 0 // TODO
-#endif
-	return TRUE;
-}
-
-static BOOL wlf_disp_check_context(void* context, wlfContext** ppwlc, wlfDispContext** ppwlfDisp,
-                                   rdpSettings** ppSettings)
-{
-	wlfContext* wlc;
-
-	if (!context)
-		return FALSE;
-
-	wlc = (wlfContext*)context;
-
-	if (!(wlc->disp))
-		return FALSE;
-
-	if (!wlc->context.settings)
-		return FALSE;
-
-	*ppwlc = wlc;
-	*ppwlfDisp = wlc->disp;
-	*ppSettings = wlc->context.settings;
-	return TRUE;
-}
-
-static void wlf_disp_OnActivated(void* context, ActivatedEventArgs* e)
-{
-	wlfContext* wlc;
-	wlfDispContext* wlfDisp;
-	rdpSettings* settings;
-
-	if (!wlf_disp_check_context(context, &wlc, &wlfDisp, &settings))
-		return;
-
-	wlfDisp->waitingResize = FALSE;
-
-	if (wlfDisp->activated && !settings->Fullscreen)
-	{
-		wlf_disp_set_window_resizable(wlfDisp);
-
-		if (e->firstActivation)
-			return;
-
-		wlf_disp_sendResize(wlfDisp);
-	}
-}
-
-static void wlf_disp_OnGraphicsReset(void* context, GraphicsResetEventArgs* e)
-{
-	wlfContext* wlc;
-	wlfDispContext* wlfDisp;
-	rdpSettings* settings;
-	WINPR_UNUSED(e);
-
-	if (!wlf_disp_check_context(context, &wlc, &wlfDisp, &settings))
-		return;
-
-	wlfDisp->waitingResize = FALSE;
-
-	if (wlfDisp->activated && !settings->Fullscreen)
-	{
-		wlf_disp_set_window_resizable(wlfDisp);
-		wlf_disp_sendResize(wlfDisp);
-	}
-}
-
-static void wlf_disp_OnTimer(void* context, TimerEventArgs* e)
-{
-	wlfContext* wlc;
-	wlfDispContext* wlfDisp;
-	rdpSettings* settings;
-	WINPR_UNUSED(e);
-
-	if (!wlf_disp_check_context(context, &wlc, &wlfDisp, &settings))
-		return;
-
-	if (!wlfDisp->activated || settings->Fullscreen)
-		return;
-
-	wlf_disp_sendResize(wlfDisp);
-}
-
-wlfDispContext* wlf_disp_new(wlfContext* wlc)
-{
-	wlfDispContext* ret;
-
-	if (!wlc || !wlc->context.settings || !wlc->context.pubSub)
-		return NULL;
-
-	ret = calloc(1, sizeof(wlfDispContext));
-
-	if (!ret)
-		return NULL;
-
-	ret->wlc = wlc;
-	ret->lastSentWidth = ret->targetWidth = wlc->context.settings->DesktopWidth;
-	ret->lastSentHeight = ret->targetHeight = wlc->context.settings->DesktopHeight;
-	PubSub_SubscribeActivated(wlc->context.pubSub, wlf_disp_OnActivated);
-	PubSub_SubscribeGraphicsReset(wlc->context.pubSub, wlf_disp_OnGraphicsReset);
-	PubSub_SubscribeTimer(wlc->context.pubSub, wlf_disp_OnTimer);
-	return ret;
-}
-
-void wlf_disp_free(wlfDispContext* disp)
-{
-	if (!disp)
-		return;
-
-	if (disp->wlc)
-	{
-		PubSub_UnsubscribeActivated(disp->wlc->context.pubSub, wlf_disp_OnActivated);
-		PubSub_UnsubscribeGraphicsReset(disp->wlc->context.pubSub, wlf_disp_OnGraphicsReset);
-		PubSub_UnsubscribeTimer(disp->wlc->context.pubSub, wlf_disp_OnTimer);
-	}
-
-	free(disp);
-}
-
-UINT wlf_disp_sendLayout(DispClientContext* disp, rdpMonitor* monitors, size_t nmonitors)
-{
-	UINT ret = CHANNEL_RC_OK;
-	DISPLAY_CONTROL_MONITOR_LAYOUT* layouts;
-	size_t i;
-	wlfDispContext* wlfDisp = (wlfDispContext*)disp->custom;
-	rdpSettings* settings = wlfDisp->wlc->context.settings;
-	layouts = calloc(nmonitors, sizeof(DISPLAY_CONTROL_MONITOR_LAYOUT));
-
-	if (!layouts)
-		return CHANNEL_RC_NO_MEMORY;
-
-	for (i = 0; i < nmonitors; i++)
-	{
-		layouts[i].Flags = (monitors[i].is_primary ? DISPLAY_CONTROL_MONITOR_PRIMARY : 0);
-		layouts[i].Left = monitors[i].x;
-		layouts[i].Top = monitors[i].y;
-		layouts[i].Width = monitors[i].width;
-		layouts[i].Height = monitors[i].height;
-		layouts[i].Orientation = ORIENTATION_LANDSCAPE;
-		layouts[i].PhysicalWidth = monitors[i].attributes.physicalWidth;
-		layouts[i].PhysicalHeight = monitors[i].attributes.physicalHeight;
-
-		switch (monitors[i].attributes.orientation)
-		{
-		case 90:
-			layouts[i].Orientation = ORIENTATION_PORTRAIT;
-			break;
-
-		case 180:
-			layouts[i].Orientation = ORIENTATION_LANDSCAPE_FLIPPED;
-			break;
-
-		case 270:
-			layouts[i].Orientation = ORIENTATION_PORTRAIT_FLIPPED;
-			break;
-
-		case 0:
-		default:
-			/* MS-RDPEDISP - 2.2.2.2.1:
-			 * Orientation (4 bytes): A 32-bit unsigned integer that specifies the
-			 * orientation of the monitor in degrees. Valid values are 0, 90, 180
-			 * or 270
-			 *
-			 * So we default to ORIENTATION_LANDSCAPE
-			 */
-			layouts[i].Orientation = ORIENTATION_LANDSCAPE;
-			break;
-		}
-
-		layouts[i].DesktopScaleFactor = settings->DesktopScaleFactor;
-		layouts[i].DeviceScaleFactor = settings->DeviceScaleFactor;
-	}
-
-	ret = IFCALLRESULT(CHANNEL_RC_OK, disp->SendMonitorLayout, disp, nmonitors, layouts);
-	free(layouts);
-	return ret;
-}
-
-BOOL wlf_disp_handle_configure(wlfDispContext* disp, int32_t width, int32_t height)
-{
-	if (!disp)
-		return FALSE;
-
-	disp->targetWidth = width;
-	disp->targetHeight = height;
-	return wlf_disp_sendResize(disp);
-}
-
-static UINT wlf_DisplayControlCaps(DispClientContext* disp, UINT32 maxNumMonitors,
-                                   UINT32 maxMonitorAreaFactorA, UINT32 maxMonitorAreaFactorB)
-{
-	/* we're called only if dynamic resolution update is activated */
-	wlfDispContext* wlfDisp = (wlfDispContext*)disp->custom;
-	rdpSettings* settings = wlfDisp->wlc->context.settings;
-	WLog_DBG(TAG,
-	         "DisplayControlCapsPdu: MaxNumMonitors: %" PRIu32 " MaxMonitorAreaFactorA: %" PRIu32
-	         " MaxMonitorAreaFactorB: %" PRIu32 "",
-	         maxNumMonitors, maxMonitorAreaFactorA, maxMonitorAreaFactorB);
-	wlfDisp->activated = TRUE;
-
-	if (settings->Fullscreen)
-		return CHANNEL_RC_OK;
-
-	WLog_DBG(TAG, "DisplayControlCapsPdu: setting the window as resizable");
-	return wlf_disp_set_window_resizable(wlfDisp) ? CHANNEL_RC_OK : CHANNEL_RC_NO_MEMORY;
-}
-
-BOOL wlf_disp_init(wlfDispContext* wlfDisp, DispClientContext* disp)
-{
-	rdpSettings* settings;
-
-	if (!wlfDisp || !wlfDisp->wlc || !disp)
-		return FALSE;
-
-	settings = wlfDisp->wlc->context.settings;
-
-	if (!settings)
-		return FALSE;
-
-	wlfDisp->disp = disp;
-	disp->custom = (void*)wlfDisp;
-
-	if (settings->DynamicResolutionUpdate)
-	{
-		disp->DisplayControlCaps = wlf_DisplayControlCaps;
-	}
-
-	return TRUE;
-}
-
-BOOL wlf_disp_uninit(wlfDispContext* wlfDisp, DispClientContext* disp)
-{
-	if (!wlfDisp || !disp)
-		return FALSE;
-
-	wlfDisp->disp = NULL;
-	return TRUE;
-}
diff -urN client/Wayland/wlf_disp.h ../../informatimago/FreeRDP/client/Wayland/wlf_disp.h
--- client/Wayland/wlf_disp.h	2019-07-24 06:11:52.418197327 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_disp.h	1970-01-01 03:00:00.000000000 +0300
@@ -1,36 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Display Control Channel
- *
- * Copyright 2018 Armin Novak <armin.novak@thincast.com>
- * Copyright 2018 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-#ifndef FREERDP_CLIENT_WAYLAND_DISP_H
-#define FREERDP_CLIENT_WAYLAND_DISP_H
-
-#include <freerdp/types.h>
-#include <freerdp/client/disp.h>
-
-#include "wlfreerdp.h"
-
-FREERDP_API BOOL wlf_disp_init(wlfDispContext* xfDisp, DispClientContext* disp);
-FREERDP_API BOOL wlf_disp_uninit(wlfDispContext* xfDisp, DispClientContext* disp);
-
-wlfDispContext* wlf_disp_new(wlfContext* wlc);
-void wlf_disp_free(wlfDispContext* disp);
-BOOL wlf_disp_handle_configure(wlfDispContext* disp, int32_t width, int32_t height);
-void wlf_disp_resized(wlfDispContext* disp);
-
-#endif /* FREERDP_CLIENT_WAYLAND_DISP_H */
diff -urN client/Wayland/wlf_input.c ../../informatimago/FreeRDP/client/Wayland/wlf_input.c
--- client/Wayland/wlf_input.c	2019-07-25 19:50:59.797892146 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_input.c	2019-07-25 20:11:23.827962154 +0300
@@ -23,57 +23,33 @@
 
 #include <freerdp/locale/keyboard.h>
 
-#include "wlfreerdp.h"
 #include "wlf_input.h"
 
-BOOL wlf_handle_pointer_enter(freerdp* instance, const UwacPointerEnterLeaveEvent* ev)
+BOOL wlf_handle_pointer_enter(freerdp* instance, UwacPointerEnterLeaveEvent* ev)
 {
-	uint32_t x, y;
-
 	if (!instance || !ev || !instance->input)
 		return FALSE;
 
-	x = ev->x;
-	y = ev->y;
-
-	if (!wlf_scale_coordinates(instance->context, &x, &y, TRUE))
-		return FALSE;
-
-	return freerdp_input_send_mouse_event(instance->input, PTR_FLAGS_MOVE, x, y);
+	return freerdp_input_send_mouse_event(instance->input, PTR_FLAGS_MOVE, ev->x, ev->y);
 }
 
-BOOL wlf_handle_pointer_motion(freerdp* instance, const UwacPointerMotionEvent* ev)
+BOOL wlf_handle_pointer_motion(freerdp* instance, UwacPointerMotionEvent* ev)
 {
-	uint32_t x, y;
-
 	if (!instance || !ev || !instance->input)
 		return FALSE;
 
-	x = ev->x;
-	y = ev->y;
-
-	if (!wlf_scale_coordinates(instance->context, &x, &y, TRUE))
-		return FALSE;
-
-	return freerdp_input_send_mouse_event(instance->input, PTR_FLAGS_MOVE, x, y);
+	return freerdp_input_send_mouse_event(instance->input, PTR_FLAGS_MOVE, ev->x, ev->y);
 }
 
-BOOL wlf_handle_pointer_buttons(freerdp* instance, const UwacPointerButtonEvent* ev)
+BOOL wlf_handle_pointer_buttons(freerdp* instance, UwacPointerButtonEvent* ev)
 {
 	rdpInput* input;
 	UINT16 flags = 0;
 	UINT16 xflags = 0;
-	uint32_t x, y;
 
 	if (!instance || !ev || !instance->input)
 		return FALSE;
 
-	x = ev->x;
-	y = ev->y;
-
-	if (!wlf_scale_coordinates(instance->context, &x, &y, TRUE))
-		return FALSE;
-
 	input = instance->input;
 
 	if (ev->state == WL_POINTER_BUTTON_STATE_PRESSED)
@@ -109,66 +85,49 @@
 	}
 
 	if ((flags & ~PTR_FLAGS_DOWN) != 0)
-		return freerdp_input_send_mouse_event(input, flags, x, y);
+		return freerdp_input_send_mouse_event(input, flags, ev->x, ev->y);
 
 	if ((xflags & ~PTR_XFLAGS_DOWN) != 0)
-		return freerdp_input_send_extended_mouse_event(input, xflags, x, y);
+		return freerdp_input_send_extended_mouse_event(input, xflags, ev->x, ev->y);
 
 	return FALSE;
 }
 
-BOOL wlf_handle_pointer_axis(freerdp* instance, const UwacPointerAxisEvent* ev)
+BOOL wlf_handle_pointer_axis(freerdp* instance, UwacPointerAxisEvent* ev)
 {
 	rdpInput* input;
 	UINT16 flags = 0;
 	int direction;
-	uint32_t step;
-	uint32_t x, y;
 
 	if (!instance || !ev || !instance->input)
 		return FALSE;
 
-	x = ev->x;
-	y = ev->y;
-
-	if (!wlf_scale_coordinates(instance->context, &x, &y, TRUE))
-		return FALSE;
-
 	input = instance->input;
-	direction = wl_fixed_to_int(ev->value);
 
 	switch (ev->axis)
 	{
 	case WL_POINTER_AXIS_VERTICAL_SCROLL:
 		flags |= PTR_FLAGS_WHEEL;
-
-		if (direction > 0)
-			flags |= PTR_FLAGS_WHEEL_NEGATIVE;
-
 		break;
 
 	case WL_POINTER_AXIS_HORIZONTAL_SCROLL:
 		flags |= PTR_FLAGS_HWHEEL;
-
-		if (direction < 0)
-			flags |= PTR_FLAGS_WHEEL_NEGATIVE;
-
 		break;
 
 	default:
 		return FALSE;
 	}
 
-	step = (uint32_t)abs(direction);
+	direction = wl_fixed_to_int(ev->value);
+	flags |= 0x0078; /* TODO: Calculate the distance with the provided value size */
 
-	if (step > WheelRotationMask)
-		step = WheelRotationMask;
+	if (direction < 0)
+		flags |= PTR_FLAGS_WHEEL_NEGATIVE;
 
-	flags |= step;
-	return freerdp_input_send_mouse_event(input, flags, (UINT16)x, (UINT16)y);
+	return freerdp_input_send_mouse_event(input, flags, ev->x, ev->y);
 }
 
-BOOL wlf_handle_key(freerdp* instance, const UwacKeyEvent* ev)
+BOOL wlf_handle_key(freerdp* instance, UwacKeyEvent* ev)
 {
 	rdpInput* input;
 	DWORD rdp_scancode;
@@ -185,7 +144,7 @@
 	return freerdp_input_send_keyboard_event_ex(input, ev->pressed, rdp_scancode);
 }
 
-BOOL wlf_keyboard_enter(freerdp* instance, const UwacKeyboardEnterLeaveEvent* ev)
+BOOL wlf_keyboard_enter(freerdp* instance, UwacKeyboardEnterLeaveEvent* ev)
 {
 	rdpInput* input;
 
diff -urN client/Wayland/wlf_input.h ../../informatimago/FreeRDP/client/Wayland/wlf_input.h
--- client/Wayland/wlf_input.h	2019-07-25 19:50:59.797892146 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_input.h	2019-07-25 20:11:23.827962154 +0300
@@ -26,12 +26,12 @@
 #include <freerdp/gdi/gfx.h>
 #include <uwac/uwac.h>
 
-BOOL wlf_handle_pointer_enter(freerdp* instance, const UwacPointerEnterLeaveEvent* ev);
-BOOL wlf_handle_pointer_motion(freerdp* instance, const UwacPointerMotionEvent* ev);
-BOOL wlf_handle_pointer_buttons(freerdp* instance, const UwacPointerButtonEvent* ev);
-BOOL wlf_handle_pointer_axis(freerdp* instance, const UwacPointerAxisEvent* ev);
+BOOL wlf_handle_pointer_enter(freerdp* instance, UwacPointerEnterLeaveEvent* ev);
+BOOL wlf_handle_pointer_motion(freerdp* instance, UwacPointerMotionEvent* ev);
+BOOL wlf_handle_pointer_buttons(freerdp* instance, UwacPointerButtonEvent* ev);
+BOOL wlf_handle_pointer_axis(freerdp* instance, UwacPointerAxisEvent* ev);
 
-BOOL wlf_handle_key(freerdp* instance, const UwacKeyEvent* ev);
-BOOL wlf_keyboard_enter(freerdp* instance, const UwacKeyboardEnterLeaveEvent* ev);
+BOOL wlf_handle_key(freerdp* instance, UwacKeyEvent* ev);
+BOOL wlf_keyboard_enter(freerdp* instance, UwacKeyboardEnterLeaveEvent* ev);
 
 #endif /* FREERDP_CLIENT_WAYLAND_INPUT_H */
diff -urN client/Wayland/wlf_pointer.c ../../informatimago/FreeRDP/client/Wayland/wlf_pointer.c
--- client/Wayland/wlf_pointer.c	2019-07-25 19:50:59.801892166 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_pointer.c	1970-01-01 03:00:00.000000000 +0300
@@ -1,170 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Mouse Pointer
- *
- * Copyright 2019 Armin Novak <armin.novak@thincast.com>
- * Copyright 2019 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifdef HAVE_CONFIG_H
-#	include "config.h"
-#endif
-
-#include "wlf_pointer.h"
-#include "wlfreerdp.h"
-
-#define TAG CLIENT_TAG("wayland.pointer")
-
-struct wlf_pointer
-{
-	rdpPointer pointer;
-	size_t size;
-	void* data;
-};
-typedef struct wlf_pointer wlfPointer;
-
-static BOOL wlf_Pointer_New(rdpContext* context, rdpPointer* pointer)
-{
-	wlfPointer* ptr = (wlfPointer*)pointer;
-
-	if (!ptr)
-		return FALSE;
-
-	ptr->size = pointer->width * pointer->height * 4;
-	ptr->data = _aligned_malloc(ptr->size, 16);
-
-	if (!ptr->data)
-		return FALSE;
-
-	if (!freerdp_image_copy_from_pointer_data(
-	        ptr->data, PIXEL_FORMAT_BGRA32, 0, 0, 0, pointer->width, pointer->height,
-	        pointer->xorMaskData, pointer->lengthXorMask, pointer->andMaskData,
-	        pointer->lengthAndMask, pointer->xorBpp, &context->gdi->palette))
-	{
-		_aligned_free(ptr->data);
-		return FALSE;
-	}
-
-	return TRUE;
-}
-
-static void wlf_Pointer_Free(rdpContext* context, rdpPointer* pointer)
-{
-	wlfPointer* ptr = (wlfPointer*)pointer;
-	WINPR_UNUSED(context);
-
-	if (ptr)
-		_aligned_free(ptr->data);
-}
-
-static BOOL wlf_Pointer_Set(rdpContext* context, const rdpPointer* pointer)
-{
-	wlfContext* wlf = (wlfContext*)context;
-	wlfPointer* ptr = (wlfPointer*)pointer;
-	void* data;
-	UINT32 w, h, x, y;
-	size_t size;
-	UwacReturnCode rc;
-	BOOL res = FALSE;
-	RECTANGLE_16 area;
-
-	if (!wlf || !wlf->seat)
-		return FALSE;
-
-	x = pointer->xPos;
-	y = pointer->yPos;
-	w = pointer->width;
-	h = pointer->height;
-
-	if (!wlf_scale_coordinates(context, &x, &y, FALSE) ||
-	    !wlf_scale_coordinates(context, &w, &h, FALSE))
-		return FALSE;
-
-	size = w * h * 4;
-	data = malloc(size);
-
-	if (!data)
-		return FALSE;
-
-	area.top = 0;
-	area.left = 0;
-	area.right = (UINT16)pointer->width;
-	area.bottom = (UINT16)pointer->height;
-
-	if (!wlf_copy_image(ptr->data, pointer->width * 4, pointer->width, pointer->height, data, w * 4,
-	                    w, h, &area, context->settings->SmartSizing))
-		goto fail;
-
-	rc = UwacSeatSetMouseCursor(wlf->seat, data, size, w, h, x, y);
-
-	if (rc == UWAC_SUCCESS)
-		res = TRUE;
-
-fail:
-	free(data);
-	return res;
-}
-
-static BOOL wlf_Pointer_SetNull(rdpContext* context)
-{
-	wlfContext* wlf = (wlfContext*)context;
-
-	if (!wlf || !wlf->seat)
-		return FALSE;
-
-	if (UwacSeatSetMouseCursor(wlf->seat, NULL, 0, 0, 0, 0, 0) != UWAC_SUCCESS)
-		return FALSE;
-
-	return TRUE;
-}
-
-static BOOL wlf_Pointer_SetDefault(rdpContext* context)
-{
-	wlfContext* wlf = (wlfContext*)context;
-
-	if (!wlf || !wlf->seat)
-		return FALSE;
-
-	if (UwacSeatSetMouseCursor(wlf->seat, NULL, 1, 0, 0, 0, 0) != UWAC_SUCCESS)
-		return FALSE;
-
-	return TRUE;
-}
-
-static BOOL wlf_Pointer_SetPosition(rdpContext* context, UINT32 x, UINT32 y)
-{
-	// TODO
-	WLog_WARN(TAG, "%s not implemented", __FUNCTION__);
-	return TRUE;
-}
-
-BOOL wlf_register_pointer(rdpGraphics* graphics)
-{
-	rdpPointer* pointer = NULL;
-
-	if (!(pointer = (rdpPointer*)calloc(1, sizeof(rdpPointer))))
-		return FALSE;
-
-	pointer->size = sizeof(wlfPointer);
-	pointer->New = wlf_Pointer_New;
-	pointer->Free = wlf_Pointer_Free;
-	pointer->Set = wlf_Pointer_Set;
-	pointer->SetNull = wlf_Pointer_SetNull;
-	pointer->SetDefault = wlf_Pointer_SetDefault;
-	pointer->SetPosition = wlf_Pointer_SetPosition;
-	graphics_register_pointer(graphics, pointer);
-	free(pointer);
-	return TRUE;
-}
diff -urN client/Wayland/wlf_pointer.h ../../informatimago/FreeRDP/client/Wayland/wlf_pointer.h
--- client/Wayland/wlf_pointer.h	2019-07-24 06:11:52.418197327 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlf_pointer.h	1970-01-01 03:00:00.000000000 +0300
@@ -1,28 +0,0 @@
-/**
- * FreeRDP: A Remote Desktop Protocol Implementation
- * Wayland Mouse Pointer
- *
- * Copyright 2019 Armin Novak <armin.novak@thincast.com>
- * Copyright 2019 Thincast Technologies GmbH
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-#ifndef FREERDP_CLIENT_WAYLAND_POINTER_H
-#define FREERDP_CLIENT_WAYLAND_POINTER_H
-
-#include <freerdp/graphics.h>
-
-BOOL wlf_register_pointer(rdpGraphics* graphics);
-
-#endif /* FREERDP_CLIENT_WAYLAND_POINTER_H */
diff -urN client/Wayland/wlfreerdp.c ../../informatimago/FreeRDP/client/Wayland/wlfreerdp.c
--- client/Wayland/wlfreerdp.c	2019-07-25 19:50:59.813892226 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlfreerdp.c	2019-07-25 20:11:23.831962173 +0300
@@ -22,7 +22,6 @@
 #include <stdio.h>
 #include <errno.h>
 #include <locale.h>
-#include <float.h>
 
 #include <freerdp/client/cmdline.h>
 #include <freerdp/channels/channels.h>
@@ -37,95 +36,47 @@
 
 #include "wlfreerdp.h"
 #include "wlf_input.h"
-#include "wlf_cliprdr.h"
-#include "wlf_disp.h"
 #include "wlf_channels.h"
-#include "wlf_pointer.h"
 
-#define TAG CLIENT_TAG("wayland")
-
-static BOOL wl_begin_paint(rdpContext* context)
+static BOOL wl_update_content(wlfContext* context_w)
 {
-	rdpGdi* gdi;
-
-	if (!context || !context->gdi)
+	if (!context_w)
 		return FALSE;
 
-	gdi = context->gdi;
-
-	if (!gdi->primary)
-		return FALSE;
+	if (!context_w->waitingFrameDone && context_w->haveDamage)
+	{
+		UwacWindowSubmitBuffer(context_w->window, true);
+		context_w->waitingFrameDone = TRUE;
+		context_w->haveDamage = FALSE;
+	}
 
-	gdi->primary->hdc->hwnd->invalid->null = TRUE;
 	return TRUE;
 }
 
-static BOOL wl_update_buffer(wlfContext* context_w, INT32 ix, INT32 iy, INT32 iw, INT32 ih)
+static BOOL wl_begin_paint(rdpContext* context)
 {
 	rdpGdi* gdi;
-	char* data;
-	UINT32 x, y, w, h;
-	UwacSize geometry;
-	size_t stride;
-	UwacReturnCode rc;
-	RECTANGLE_16 area;
-
-	if (!context_w)
-		return FALSE;
 
-	if ((ix < 0) || (iy < 0) || (iw < 0) || (ih < 0))
-		return FALSE;
-
-	x = (UINT32)ix;
-	y = (UINT32)iy;
-	w = (UINT32)iw;
-	h = (UINT32)ih;
-	rc = UwacWindowGetDrawingBufferGeometry(context_w->window, &geometry, &stride);
-	data = UwacWindowGetDrawingBuffer(context_w->window);
-
-	if (!data || (rc != UWAC_SUCCESS))
-		return FALSE;
-
-	gdi = context_w->context.gdi;
-
-	if (!gdi)
-		return FALSE;
-
-	/* Ignore output if the surface size does not match. */
-	if (((INT64)x > geometry.width) || ((INT64)y > geometry.height))
-		return TRUE;
-
-	area.left = x;
-	area.top = y;
-	area.right = x + w;
-	area.bottom = y + h;
-
-	if (!wlf_copy_image(gdi->primary_buffer, gdi->stride, gdi->width, gdi->height, data, stride,
-	                    geometry.width, geometry.height, &area,
-	                    context_w->context.settings->SmartSizing))
-		return FALSE;
-
-	if (!wlf_scale_coordinates(&context_w->context, &x, &y, FALSE))
-		return FALSE;
-
-	if (!wlf_scale_coordinates(&context_w->context, &w, &h, FALSE))
+	if (!context || !context->gdi)
 		return FALSE;
 
-	if (UwacWindowAddDamage(context_w->window, x, y, w, h) != UWAC_SUCCESS)
-		return FALSE;
+	gdi = context->gdi;
 
-	if (UwacWindowSubmitBuffer(context_w->window, true) != UWAC_SUCCESS)
+	if (!gdi->primary)
 		return FALSE;
 
+	gdi->primary->hdc->hwnd->invalid->null = TRUE;
 	return TRUE;
 }
 
 static BOOL wl_end_paint(rdpContext* context)
 {
 	rdpGdi* gdi;
+	char* data;
 	wlfContext* context_w;
 	INT32 x, y;
-	INT32 w, h;
+	UINT32 w, h;
+	UINT32 i;
 
 	if (!context || !context->gdi || !context->gdi->primary)
 		return FALSE;
@@ -140,30 +91,25 @@
 	w = gdi->primary->hdc->hwnd->invalid->w;
 	h = gdi->primary->hdc->hwnd->invalid->h;
 	context_w = (wlfContext*)context;
-	return wl_update_buffer(context_w, x, y, w, h);
-}
-
-static BOOL wl_refresh_display(wlfContext* context)
-{
-	rdpGdi* gdi;
+	data = UwacWindowGetDrawingBuffer(context_w->window);
 
-	if (!context || !context->context.gdi)
+	if (!data)
 		return FALSE;
 
-	gdi = context->context.gdi;
-	return wl_update_buffer(context, 0, 0, gdi->width, gdi->height);
-}
-
-static BOOL wl_resize_display(rdpContext* context)
-{
-	wlfContext* wlc = (wlfContext*)context;
-	rdpGdi* gdi = context->gdi;
-	rdpSettings* settings = context->settings;
+	for (i = 0; i < h; i++)
+	{
+		memcpy(data + ((i + y) * (gdi->width * GetBytesPerPixel(gdi->dstFormat))) +
+		           x * GetBytesPerPixel(gdi->dstFormat),
+		       gdi->primary_buffer + ((i + y) * (gdi->width * GetBytesPerPixel(gdi->dstFormat))) +
+		           x * GetBytesPerPixel(gdi->dstFormat),
+		       w * GetBytesPerPixel(gdi->dstFormat));
+	}
 
-	if (!gdi_resize(gdi, settings->DesktopWidth, settings->DesktopHeight))
+	if (UwacWindowAddDamage(context_w->window, x, y, w, h) != UWAC_SUCCESS)
 		return FALSE;
 
-	return wl_refresh_display(wlc);
+	context_w->haveDamage = TRUE;
+	return wl_update_content(context_w);
 }
 
 static BOOL wl_pre_connect(freerdp* instance)
@@ -215,60 +161,36 @@
 	rdpGdi* gdi;
 	UwacWindow* window;
 	wlfContext* context;
-	rdpSettings* settings;
-	UINT32 w, h;
 
 	if (!instance || !instance->context)
 		return FALSE;
 
-	context = (wlfContext*)instance->context;
-	settings = instance->context->settings;
-
 	if (!gdi_init(instance, PIXEL_FORMAT_BGRA32))
 		return FALSE;
 
 	gdi = instance->context->gdi;
 
-	if (!gdi || (gdi->width < 0) || (gdi->height < 0))
-		return FALSE;
-
-	if (!wlf_register_pointer(instance->context->graphics))
+	if (!gdi)
 		return FALSE;
 
-	w = (UINT32)gdi->width;
-	h = (UINT32)gdi->height;
-
-	if (settings->SmartSizing && !context->fullscreen)
-	{
-		if (settings->SmartSizingWidth > 0)
-			w = settings->SmartSizingWidth;
-
-		if (settings->SmartSizingHeight > 0)
-			h = settings->SmartSizingHeight;
-	}
-
-	context->window = window = UwacCreateWindowShm(context->display, w, h, WL_SHM_FORMAT_XRGB8888);
+	context = (wlfContext*)instance->context;
+	context->window = window =
+	    UwacCreateWindowShm(context->display, gdi->width, gdi->height, WL_SHM_FORMAT_XRGB8888);
 
 	if (!window)
 		return FALSE;
 
 	UwacWindowSetFullscreenState(window, NULL, instance->context->settings->Fullscreen);
 	UwacWindowSetTitle(window, "FreeRDP");
-	UwacWindowSetOpaqueRegion(context->window, 0, 0, w, h);
+	UwacWindowSetOpaqueRegion(context->window, 0, 0, gdi->width, gdi->height);
 	instance->update->BeginPaint = wl_begin_paint;
 	instance->update->EndPaint = wl_end_paint;
-	instance->update->DesktopResize = wl_resize_display;
+	memcpy(UwacWindowGetDrawingBuffer(context->window), gdi->primary_buffer,
+	       gdi->width * gdi->height * 4);
+	UwacWindowAddDamage(context->window, 0, 0, gdi->width, gdi->height);
+	context->haveDamage = TRUE;
 	freerdp_keyboard_init(instance->context->settings->KeyboardLayout);
-
-	if (!(context->disp = wlf_disp_new(context)))
-		return FALSE;
-
-	context->clipboard = wlf_clipboard_new(context);
-
-	if (!context->clipboard)
-		return FALSE;
-
-	return wl_refresh_display(context);
+	return wl_update_content(context);
 }
 
 static void wl_post_disconnect(freerdp* instance)
@@ -283,8 +205,6 @@
 
 	context = (wlfContext*)instance->context;
 	gdi_free(instance);
-	wlf_clipboard_free(context->clipboard);
-	wlf_disp_free(context->disp);
 
 	if (context->window)
 		UwacDestroyWindow(&context->window);
@@ -298,8 +218,6 @@
 	if (UwacDisplayDispatch(display, 1) < 0)
 		return FALSE;
 
-	context = (wlfContext*)instance->context;
-
 	while (UwacHasEvent(display))
 	{
 		if (UwacNextEvent(display, &event) != UWAC_SUCCESS)
@@ -308,16 +226,14 @@
 		/*printf("UWAC event type %d\n", event.type);*/
 		switch (event.type)
 		{
-		case UWAC_EVENT_NEW_SEAT:
-			context->seat = event.seat_new.seat;
-			break;
+		case UWAC_EVENT_FRAME_DONE:
+			if (!instance)
+				continue;
 
-		case UWAC_EVENT_REMOVED_SEAT:
-			context->seat = NULL;
-			break;
+			context = (wlfContext*)instance->context;
+			context->waitingFrameDone = FALSE;
 
-		case UWAC_EVENT_FRAME_DONE:
-			if (UwacWindowSubmitBuffer(context->window, true) != UWAC_SUCCESS)
+			if (context->haveDamage && !wl_update_content(context))
 				return FALSE;
 
 			break;
@@ -353,32 +269,11 @@
 			break;
 
 		case UWAC_EVENT_KEYBOARD_ENTER:
-			if (instance->context->settings->GrabKeyboard)
-				UwacSeatInhibitShortcuts(event.keyboard_enter_leave.seat, true);
-
 			if (!wlf_keyboard_enter(instance, &event.keyboard_enter_leave))
 				return FALSE;
 
 			break;
 
-		case UWAC_EVENT_CONFIGURE:
-			if (!wlf_disp_handle_configure(context->disp, event.configure.width,
-			                               event.configure.height))
-				return FALSE;
-
-			if (!wl_refresh_display(context))
-				return FALSE;
-
-			break;
-
-		case UWAC_EVENT_CLIPBOARD_AVAILABLE:
-		case UWAC_EVENT_CLIPBOARD_OFFER:
-		case UWAC_EVENT_CLIPBOARD_SELECT:
-			if (!wlf_cliprdr_handle_event(context->clipboard, &event.clipboard))
-				return FALSE;
-
-			break;
-
 		default:
 			break;
 		}
@@ -387,22 +282,6 @@
 	return TRUE;
 }
 
-static BOOL handle_window_events(freerdp* instance)
-{
-	rdpSettings* settings;
-
-	if (!instance || !instance->settings)
-		return FALSE;
-
-	settings = instance->settings;
-
-	if (!settings->AsyncInput)
-	{
-	}
-
-	return TRUE;
-}
-
 static int wlfreerdp_run(freerdp* instance)
 {
 	wlfContext* context;
@@ -420,7 +299,7 @@
 
 	if (!freerdp_connect(instance))
 	{
-		WLog_Print(context->log, WLOG_ERROR, "Failed to connect");
+		printf("Failed to connect\n");
 		return -1;
 	}
 
@@ -431,7 +310,7 @@
 
 		if (count <= 1)
 		{
-			WLog_Print(context->log, WLOG_ERROR, "Failed to get FreeRDP file descriptor");
+			printf("Failed to get FreeRDP file descriptor\n");
 			break;
 		}
 
@@ -439,32 +318,20 @@
 
 		if (WAIT_FAILED == status)
 		{
-			WLog_Print(context->log, WLOG_ERROR, "%s: WaitForMultipleObjects failed", __FUNCTION__);
+			printf("%s: WaitForMultipleObjects failed\n", __FUNCTION__);
 			break;
 		}
 
 		if (!handle_uwac_events(instance, context->display))
 		{
-			WLog_Print(context->log, WLOG_ERROR, "error handling UWAC events");
+			printf("error handling UWAC events\n");
 			break;
 		}
 
 		if (freerdp_check_event_handles(instance->context) != TRUE)
 		{
-			if (client_auto_reconnect_ex(instance, handle_window_events))
-				continue;
-			else
-			{
-				/*
-				 * Indicate an unsuccessful connection attempt if reconnect
-				 * did not succeed and no other error was specified.
-				 */
-				if (freerdp_error_info(instance) == 0)
-					status = 42;
-			}
-
 			if (freerdp_get_last_error(instance->context) == FREERDP_ERROR_SUCCESS)
-				WLog_Print(context->log, WLOG_ERROR, "Failed to check FreeRDP file descriptor");
+				printf("Failed to check FreeRDP file descriptor\n");
 
 			break;
 		}
@@ -498,7 +365,7 @@
 		return -1;
 
 	wlf = (wlfContext*)instance->context;
-	WLog_Print(wlf->log, WLOG_INFO, "Logon Error Info %s [%s]", str_data, str_type);
+	WLog_INFO(TAG, "Logon Error Info %s [%s]", str_data, str_type);
 	return 1;
 }
 
@@ -518,10 +385,9 @@
 	instance->VerifyCertificateEx = client_cli_verify_certificate_ex;
 	instance->VerifyChangedCertificateEx = client_cli_verify_changed_certificate_ex;
 	instance->LogonErrorInfo = wlf_logon_error_info;
-	wfl->log = WLog_Get(TAG);
 	wfl->display = UwacOpenDisplay(NULL, &status);
 
-	if (!wfl->display || (status != UWAC_SUCCESS) || !wfl->log)
+	if (!wfl->display || (status != UWAC_SUCCESS))
 		return FALSE;
 
 	wfl->displayHandle = CreateFileDescriptorEvent(NULL, FALSE, FALSE,
@@ -549,13 +415,11 @@
 
 static int wfl_client_start(rdpContext* context)
 {
-	WINPR_UNUSED(context);
 	return 0;
 }
 
 static int wfl_client_stop(rdpContext* context)
 {
-	WINPR_UNUSED(context);
 	return 0;
 }
 
@@ -577,7 +441,7 @@
 int main(int argc, char* argv[])
 {
 	int rc = -1;
-	int status;
+	DWORD status;
 	RDP_CLIENT_ENTRY_POINTS clientEntryPoints;
 	rdpContext* context;
 	RdpClientEntry(&clientEntryPoints);
@@ -605,75 +469,3 @@
 	freerdp_client_context_free(context);
 	return rc;
 }
-
-BOOL wlf_copy_image(const void* src, size_t srcStride, size_t srcWidth, size_t srcHeight, void* dst,
-                    size_t dstStride, size_t dstWidth, size_t dstHeight, const RECTANGLE_16* area,
-                    BOOL scale)
-{
-	BOOL rc = FALSE;
-
-	if (!src || !dst || !area)
-		return FALSE;
-
-	if (scale)
-	{
-		return freerdp_image_scale(dst, PIXEL_FORMAT_BGRA32, dstStride, 0, 0, dstWidth, dstHeight,
-		                           src, PIXEL_FORMAT_BGRA32, srcStride, 0, 0, srcWidth, srcHeight);
-	}
-	else
-	{
-		size_t i;
-		const size_t baseSrcOffset = area->top * srcStride + area->left * 4;
-		const size_t baseDstOffset = area->top * dstStride + area->left * 4;
-		const size_t width = MIN((size_t)area->right - area->left, dstWidth - area->left);
-		const size_t height = MIN((size_t)area->bottom - area->top, dstHeight - area->top);
-		const BYTE* psrc = (const BYTE*)src;
-		BYTE* pdst = (BYTE*)dst;
-
-		for (i = 0; i < height; i++)
-		{
-			const size_t srcOffset = i * srcStride + baseSrcOffset;
-			const size_t dstOffset = i * dstStride + baseDstOffset;
-			memcpy(&pdst[dstOffset], &psrc[srcOffset], width * 4);
-		}
-
-		rc = TRUE;
-	}
-
-	return rc;
-}
-
-BOOL wlf_scale_coordinates(rdpContext* context, UINT32* px, UINT32* py, BOOL fromLocalToRDP)
-{
-	wlfContext* wlf = (wlfContext*)context;
-	rdpGdi* gdi;
-	UwacSize geometry;
-	double sx, sy;
-
-	if (!context || !px || !py || !context->gdi)
-		return FALSE;
-
-	if (!context->settings->SmartSizing)
-		return TRUE;
-
-	gdi = context->gdi;
-
-	if (UwacWindowGetDrawingBufferGeometry(wlf->window, &geometry, NULL) != UWAC_SUCCESS)
-		return FALSE;
-
-	sx = geometry.width / (double)gdi->width;
-	sy = geometry.height / (double)gdi->height;
-
-	if (!fromLocalToRDP)
-	{
-		*px *= sx;
-		*py *= sy;
-	}
-	else
-	{
-		*px /= sx;
-		*py /= sy;
-	}
-
-	return TRUE;
-}
diff -urN client/Wayland/wlfreerdp.h ../../informatimago/FreeRDP/client/Wayland/wlfreerdp.h
--- client/Wayland/wlfreerdp.h	2019-07-25 19:50:59.813892226 +0300
+++ ../../informatimago/FreeRDP/client/Wayland/wlfreerdp.h	2019-07-25 20:11:23.835962194 +0300
@@ -28,9 +28,9 @@
 #include <winpr/wtypes.h>
 #include <uwac/uwac.h>
 
+#define TAG CLIENT_TAG("wayland")
+
 typedef struct wlf_context wlfContext;
-typedef struct wlf_clipboard wfClipboard;
-typedef struct _wlfDispContext wlfDispContext;
 
 struct wlf_context
 {
@@ -39,22 +39,14 @@
 	UwacDisplay* display;
 	HANDLE displayHandle;
 	UwacWindow* window;
-	UwacSeat* seat;
 
-	BOOL fullscreen;
+	BOOL waitingFrameDone;
+	BOOL haveDamage;
 
 	/* Channels */
 	RdpeiClientContext* rdpei;
 	RdpgfxClientContext* gfx;
 	EncomspClientContext* encomsp;
-	wfClipboard* clipboard;
-	wlfDispContext* disp;
-	wLog* log;
 };
 
-BOOL wlf_scale_coordinates(rdpContext* context, UINT32* px, UINT32* py, BOOL fromLocalToRDP);
-BOOL wlf_copy_image(const void* src, size_t srcStride, size_t srcWidth, size_t srcHeight, void* dst,
-                    size_t dstStride, size_t dstWidth, size_t dstHeight, const RECTANGLE_16* area,
-                    BOOL scale);
-
 #endif /* FREERDP_CLIENT_WAYLAND_FREERDP_H */
diff -urN client/Windows/cli/wfreerdp.c ../../informatimago/FreeRDP/client/Windows/cli/wfreerdp.c
--- client/Windows/cli/wfreerdp.c	2019-07-25 19:50:59.813892226 +0300
+++ ../../informatimago/FreeRDP/client/Windows/cli/wfreerdp.c	2019-07-25 20:11:23.835962194 +0300
@@ -53,7 +53,7 @@
 	RDP_CLIENT_ENTRY_POINTS clientEntryPoints;
 	int ret = 1;
 	int argc = 0, i;
-	LPWSTR* args = NULL;
+	LPWSTR* args;
 	LPWSTR cmd;
 	char** argv;
 	ZeroMemory(&clientEntryPoints, sizeof(RDP_CLIENT_ENTRY_POINTS));
diff -urN client/Windows/CMakeLists.txt ../../informatimago/FreeRDP/client/Windows/CMakeLists.txt
--- client/Windows/CMakeLists.txt	2019-07-24 06:11:52.418197327 +0300
+++ ../../informatimago/FreeRDP/client/Windows/CMakeLists.txt	2019-07-19 20:00:34.109156420 +0300
@@ -78,7 +78,6 @@
 
 set(${MODULE_PREFIX}_LIBS ${${MODULE_PREFIX}_LIBS} freerdp-client)
 set(${MODULE_PREFIX}_LIBS ${${MODULE_PREFIX}_LIBS} winpr freerdp)
-set(${MODULE_PREFIX}_LIBS ${${MODULE_PREFIX}_LIBS} msimg32)
 target_link_libraries(${MODULE_NAME} ${${MODULE_PREFIX}_LIBS})
 
 if(WITH_CLIENT_INTERFACE)
diff -urN client/Windows/wf_client.c ../../informatimago/FreeRDP/client/Windows/wf_client.c
--- client/Windows/wf_client.c	2019-07-25 19:50:59.833892325 +0300
+++ ../../informatimago/FreeRDP/client/Windows/wf_client.c	2019-07-25 20:11:23.859962312 +0300
@@ -760,7 +760,7 @@
 	return 0;
 }
 
-int freerdp_client_set_window_size(wfContext* wfc, int width, int height)
+static int freerdp_client_set_window_size(wfContext* wfc, int width, int height)
 {
 	WLog_DBG(TAG, "freerdp_client_set_window_size %d, %d", width, height);
 
@@ -800,6 +800,7 @@
 		SCROLLINFO si;
 		BOOL horiz = wfc->xScrollVisible;
 		BOOL vert = wfc->yScrollVisible;
+		;
 
 		if (!horiz && client_width < wfc->context.settings->DesktopWidth)
 		{
diff -urN client/Windows/wf_cliprdr.c ../../informatimago/FreeRDP/client/Windows/wf_cliprdr.c
--- client/Windows/wf_cliprdr.c	2019-07-25 19:50:59.885892582 +0300
+++ ../../informatimago/FreeRDP/client/Windows/wf_cliprdr.c	2019-07-25 20:11:23.907962550 +0300
@@ -27,10 +27,10 @@
 #define CINTERFACE
 #define COBJMACROS
 
-#include <ole2.h>
-#include <shlobj.h>
-#include <windows.h>
-#include <winuser.h>
+#include <Ole2.h>
+#include <ShlObj.h>
+#include <Windows.h>
+#include <WinUser.h>
 
 #include <assert.h>
 
@@ -41,7 +41,7 @@
 #include <freerdp/log.h>
 #include <freerdp/client/cliprdr.h>
 
-#include <strsafe.h>
+#include <Strsafe.h>
 
 #include "wf_cliprdr.h"
 
@@ -1180,8 +1180,8 @@
 	return clipboard->context->TempDirectory(clipboard->context, &tempDirectory);
 }
 
-static BOOL cliprdr_GetUpdatedClipboardFormats(wfClipboard* clipboard, PUINT lpuiFormats,
-                                               UINT cFormats, PUINT pcFormatsOut)
+BOOL cliprdr_GetUpdatedClipboardFormats(wfClipboard* clipboard, PUINT lpuiFormats, UINT cFormats,
+                                        PUINT pcFormatsOut)
 {
 	UINT index = 0;
 	UINT format = 0;
@@ -1815,7 +1815,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT wf_cliprdr_monitor_ready(CliprdrClientContext* context,
-                                     const CLIPRDR_MONITOR_READY* monitorReady)
+                                     CLIPRDR_MONITOR_READY* monitorReady)
 {
 	UINT rc;
 	wfClipboard* clipboard = (wfClipboard*)context->custom;
@@ -1838,7 +1838,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT wf_cliprdr_server_capabilities(CliprdrClientContext* context,
-                                           const CLIPRDR_CAPABILITIES* capabilities)
+                                           CLIPRDR_CAPABILITIES* capabilities)
 {
 	UINT32 index;
 	CLIPRDR_CAPABILITY_SET* capabilitySet;
@@ -1870,7 +1870,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT wf_cliprdr_server_format_list(CliprdrClientContext* context,
-                                          const CLIPRDR_FORMAT_LIST* formatList)
+                                          CLIPRDR_FORMAT_LIST* formatList)
 {
 	UINT rc = ERROR_INTERNAL_ERROR;
 	UINT32 i;
@@ -1940,9 +1940,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-wf_cliprdr_server_format_list_response(CliprdrClientContext* context,
-                                       const CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
+static UINT wf_cliprdr_server_format_list_response(CliprdrClientContext* context,
+                                                   CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
 {
 	(void)context;
 	(void)formatListResponse;
@@ -1958,9 +1957,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-wf_cliprdr_server_lock_clipboard_data(CliprdrClientContext* context,
-                                      const CLIPRDR_LOCK_CLIPBOARD_DATA* lockClipboardData)
+static UINT wf_cliprdr_server_lock_clipboard_data(CliprdrClientContext* context,
+                                                  CLIPRDR_LOCK_CLIPBOARD_DATA* lockClipboardData)
 {
 	(void)context;
 	(void)lockClipboardData;
@@ -1974,7 +1972,7 @@
  */
 static UINT
 wf_cliprdr_server_unlock_clipboard_data(CliprdrClientContext* context,
-                                        const CLIPRDR_UNLOCK_CLIPBOARD_DATA* unlockClipboardData)
+                                        CLIPRDR_UNLOCK_CLIPBOARD_DATA* unlockClipboardData)
 {
 	(void)context;
 	(void)unlockClipboardData;
@@ -2019,9 +2017,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-wf_cliprdr_server_format_data_request(CliprdrClientContext* context,
-                                      const CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
+static UINT wf_cliprdr_server_format_data_request(CliprdrClientContext* context,
+                                                  CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
 {
 	UINT rc;
 	size_t size = 0;
@@ -2165,9 +2162,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-wf_cliprdr_server_format_data_response(CliprdrClientContext* context,
-                                       const CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
+static UINT wf_cliprdr_server_format_data_response(CliprdrClientContext* context,
+                                                   CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
 {
 	BYTE* data;
 	HANDLE hMem;
@@ -2220,7 +2216,7 @@
  */
 static UINT
 wf_cliprdr_server_file_contents_request(CliprdrClientContext* context,
-                                        const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
+                                        CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
 	DWORD uSize = 0;
 	BYTE* pData = NULL;
@@ -2234,7 +2230,6 @@
 	wfClipboard* clipboard;
 	UINT rc = ERROR_INTERNAL_ERROR;
 	UINT sRc;
-	UINT32 cbRequested;
 
 	if (!context || !fileContentsRequest)
 		return ERROR_INTERNAL_ERROR;
@@ -2244,12 +2239,10 @@
 	if (!clipboard)
 		return ERROR_INTERNAL_ERROR;
 
-	cbRequested = fileContentsRequest->cbRequested;
-
 	if (fileContentsRequest->dwFlags == FILECONTENTS_SIZE)
-		cbRequested = sizeof(UINT64);
+		fileContentsRequest->cbRequested = sizeof(UINT64);
 
-	pData = (BYTE*)calloc(1, cbRequested);
+	pData = (BYTE*)calloc(1, fileContentsRequest->cbRequested);
 
 	if (!pData)
 		goto error;
@@ -2323,7 +2316,7 @@
 			{
 				*((UINT32*)&pData[0]) = vStatStg.cbSize.LowPart;
 				*((UINT32*)&pData[4]) = vStatStg.cbSize.HighPart;
-				uSize = cbRequested;
+				uSize = fileContentsRequest->cbRequested;
 			}
 		}
 		else if (fileContentsRequest->dwFlags == FILECONTENTS_RANGE)
@@ -2335,7 +2328,8 @@
 			hRet = IStream_Seek(pStreamStc, dlibMove, STREAM_SEEK_SET, &dlibNewPosition);
 
 			if (SUCCEEDED(hRet))
-				hRet = IStream_Read(pStreamStc, pData, cbRequested, (PULONG)&uSize);
+				hRet = IStream_Read(pStreamStc, pData, fileContentsRequest->cbRequested,
+				                    (PULONG)&uSize);
 		}
 	}
 	else
@@ -2346,15 +2340,15 @@
 			    clipboard->fileDescriptor[fileContentsRequest->listIndex]->nFileSizeLow;
 			*((UINT32*)&pData[4]) =
 			    clipboard->fileDescriptor[fileContentsRequest->listIndex]->nFileSizeHigh;
-			uSize = cbRequested;
+			uSize = fileContentsRequest->cbRequested;
 		}
 		else if (fileContentsRequest->dwFlags == FILECONTENTS_RANGE)
 		{
 			BOOL bRet;
 			bRet = wf_cliprdr_get_file_contents(
 			    clipboard->file_names[fileContentsRequest->listIndex], pData,
-			    fileContentsRequest->nPositionLow, fileContentsRequest->nPositionHigh, cbRequested,
-			    &uSize);
+			    fileContentsRequest->nPositionLow, fileContentsRequest->nPositionHigh,
+			    fileContentsRequest->cbRequested, &uSize);
 
 			if (bRet == FALSE)
 			{
@@ -2394,7 +2388,7 @@
  */
 static UINT
 wf_cliprdr_server_file_contents_response(CliprdrClientContext* context,
-                                         const CLIPRDR_FILE_CONTENTS_RESPONSE* fileContentsResponse)
+                                         CLIPRDR_FILE_CONTENTS_RESPONSE* fileContentsResponse)
 {
 	wfClipboard* clipboard;
 
diff -urN client/Windows/wf_event.c ../../informatimago/FreeRDP/client/Windows/wf_event.c
--- client/Windows/wf_event.c	2019-07-25 19:50:59.901892661 +0300
+++ ../../informatimago/FreeRDP/client/Windows/wf_event.c	2019-07-25 20:11:23.923962630 +0300
@@ -457,7 +457,6 @@
 			// User dragged the scroll box.
 			case SB_THUMBPOSITION:
 				xNewPos = HIWORD(wParam);
-				break;
 
 			// user is dragging the scrollbar
 			case SB_THUMBTRACK:
diff -urN client/Windows/wf_floatbar.c ../../informatimago/FreeRDP/client/Windows/wf_floatbar.c
--- client/Windows/wf_floatbar.c	2019-07-25 19:50:59.913892721 +0300
+++ ../../informatimago/FreeRDP/client/Windows/wf_floatbar.c	2019-07-25 20:11:23.935962689 +0300
@@ -123,7 +123,7 @@
 
 	floatbar->animating = timer;
 
-	if (SetTimer(floatbar->hwnd, timer, USER_TIMER_MINIMUM, NULL) == NULL)
+	if (SetTimer(floatbar->hwnd, timer, 10, NULL) == NULL)
 	{
 		DWORD err = GetLastError();
 		WLog_ERR(TAG, "SetTimer failed with %08" PRIx32, err);
diff -urN client/Windows/wf_gdi.c ../../informatimago/FreeRDP/client/Windows/wf_gdi.c
--- client/Windows/wf_gdi.c	2019-07-25 19:50:59.929892800 +0300
+++ ../../informatimago/FreeRDP/client/Windows/wf_gdi.c	2019-07-25 20:11:23.951962769 +0300
@@ -347,17 +347,7 @@
 
 		if (settings->EmbeddedWindow)
 		{
-			if (!wfc->client_height)
-				wfc->client_height = settings->DesktopHeight;
-
-			if (!wfc->client_width)
-				wfc->client_width = settings->DesktopWidth;
-
 			wf_update_canvas_diff(wfc);
-			/* Now resize to get full canvas size and room for caption and borders */
-			SetWindowPos(wfc->hwnd, HWND_TOP, wfc->client_x, wfc->client_y,
-			             wfc->client_width + wfc->diff.x, wfc->client_height + wfc->diff.y,
-			             0 /*SWP_FRAMECHANGED*/);
 		}
 		else
 		{
Binary files client/X11/generate_argument_docbook and ../../informatimago/FreeRDP/client/X11/generate_argument_docbook differ
diff -urN client/X11/xf_channels.c ../../informatimago/FreeRDP/client/X11/xf_channels.c
--- client/X11/xf_channels.c	2019-07-25 19:50:59.965892979 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_channels.c	2019-07-25 20:11:23.987962948 +0300
@@ -49,7 +49,10 @@
 	}
 	else if (strcmp(e->name, RDPGFX_DVC_CHANNEL_NAME) == 0)
 	{
-		xf_graphics_pipeline_init(xfc, (RdpgfxClientContext*)e->pInterface);
+		if (settings->SoftwareGdi)
+			gdi_graphics_pipeline_init(xfc->context.gdi, (RdpgfxClientContext*)e->pInterface);
+		else
+			xf_graphics_pipeline_init(xfc, (RdpgfxClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, RAIL_SVC_CHANNEL_NAME) == 0)
 	{
@@ -73,7 +76,10 @@
 	}
 	else if (strcmp(e->name, VIDEO_CONTROL_DVC_CHANNEL_NAME) == 0)
 	{
-		xf_video_control_init(xfc, (VideoClientContext*)e->pInterface);
+		if (settings->SoftwareGdi)
+			gdi_video_control_init(xfc->context.gdi, (VideoClientContext*)e->pInterface);
+		else
+			xf_video_control_init(xfc, (VideoClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, VIDEO_DATA_DVC_CHANNEL_NAME) == 0)
 	{
@@ -100,7 +106,10 @@
 	}
 	else if (strcmp(e->name, RDPGFX_DVC_CHANNEL_NAME) == 0)
 	{
-		xf_graphics_pipeline_uninit(xfc, (RdpgfxClientContext*)e->pInterface);
+		if (settings->SoftwareGdi)
+			gdi_graphics_pipeline_uninit(xfc->context.gdi, (RdpgfxClientContext*)e->pInterface);
+		else
+			xf_graphics_pipeline_uninit(xfc, (RdpgfxClientContext*)e->pInterface);
 	}
 	else if (strcmp(e->name, RAIL_SVC_CHANNEL_NAME) == 0)
 	{
diff -urN client/X11/xf_client.c ../../informatimago/FreeRDP/client/X11/xf_client.c
--- client/X11/xf_client.c	2019-07-25 19:51:00.001893158 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_client.c	2019-07-25 20:11:24.019963106 +0300
@@ -194,9 +194,8 @@
 {
 	rdpSettings* settings = xfc->context.settings;
 
-	if ((xfc->offset_x != 0) || (xfc->offset_y != 0) ||
-	    (xfc->scaledWidth != (INT64)settings->DesktopWidth) ||
-	    (xfc->scaledHeight != (INT64)settings->DesktopHeight))
+	if (xfc->offset_x || xfc->offset_y || xfc->scaledWidth != settings->DesktopWidth ||
+	    xfc->scaledHeight != settings->DesktopHeight)
 	{
 		return TRUE;
 	}
@@ -755,7 +754,6 @@
 
 void xf_encomsp_uninit(xfContext* xfc, EncomspClientContext* encomsp)
 {
-	WINPR_UNUSED(encomsp);
 	xfc->encomsp = NULL;
 }
 
@@ -899,7 +897,6 @@
 static BOOL xf_play_sound(rdpContext* context, const PLAY_SOUND_UPDATE* play_sound)
 {
 	xfContext* xfc = (xfContext*)context;
-	WINPR_UNUSED(play_sound);
 	XkbBell(xfc->display, None, 100, 0);
 	return TRUE;
 }
@@ -1661,7 +1658,6 @@
 static void xf_TerminateEventHandler(void* context, TerminateEventArgs* e)
 {
 	rdpContext* ctx = (rdpContext*)context;
-	WINPR_UNUSED(e);
 	freerdp_abort_connect(ctx->instance);
 }
 
diff -urN client/X11/xf_cliprdr.c ../../informatimago/FreeRDP/client/X11/xf_cliprdr.c
--- client/X11/xf_cliprdr.c	2019-07-25 19:51:00.041893355 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_cliprdr.c	2019-07-25 20:11:24.055963284 +0300
@@ -258,7 +258,8 @@
  */
 static UINT xf_cliprdr_send_data_request(xfClipboard* clipboard, UINT32 formatId)
 {
-	CLIPRDR_FORMAT_DATA_REQUEST request = { 0 };
+	CLIPRDR_FORMAT_DATA_REQUEST request;
+	ZeroMemory(&request, sizeof(CLIPRDR_FORMAT_DATA_REQUEST));
 	request.requestedFormatId = formatId;
 	return clipboard->context->ClientFormatDataRequest(clipboard->context, &request);
 }
@@ -270,7 +271,8 @@
  */
 static UINT xf_cliprdr_send_data_response(xfClipboard* clipboard, BYTE* data, int size)
 {
-	CLIPRDR_FORMAT_DATA_RESPONSE response = { 0 };
+	CLIPRDR_FORMAT_DATA_RESPONSE response;
+	ZeroMemory(&response, sizeof(CLIPRDR_FORMAT_DATA_RESPONSE));
 	response.msgFlags = (data) ? CB_RESPONSE_OK : CB_RESPONSE_FAIL;
 	response.dataLen = size;
 	response.requestedFormatData = data;
@@ -436,7 +438,7 @@
 static CLIPRDR_FORMAT* xf_cliprdr_get_formats_from_targets(xfClipboard* clipboard,
                                                            UINT32* numFormats)
 {
-	unsigned long i;
+	int i;
 	Atom atom;
 	BYTE* data = NULL;
 	int format_property;
@@ -528,8 +530,9 @@
 {
 	UINT32 numFormats = 0;
 	CLIPRDR_FORMAT* formats = NULL;
-	CLIPRDR_FORMAT_LIST formatList = { 0 };
+	CLIPRDR_FORMAT_LIST formatList;
 	formats = xf_cliprdr_get_client_formats(clipboard, &numFormats);
+	ZeroMemory(&formatList, sizeof(CLIPRDR_FORMAT_LIST));
 	formatList.msgFlags = CB_RESPONSE_OK;
 	formatList.numFormats = numFormats;
 	formatList.formats = formats;
@@ -731,10 +734,7 @@
 {
 	int i;
 
-	if (clipboard->numTargets < 0)
-		return;
-
-	if ((size_t)clipboard->numTargets >= ARRAYSIZE(clipboard->targets))
+	if (clipboard->numTargets >= ARRAYSIZE(clipboard->targets))
 		return;
 
 	for (i = 0; i < clipboard->numTargets; i++)
@@ -935,7 +935,6 @@
 static BOOL xf_cliprdr_process_selection_clear(xfClipboard* clipboard, XEvent* xevent)
 {
 	xfContext* xfc = clipboard->xfc;
-	WINPR_UNUSED(xevent);
 
 	if (xf_cliprdr_is_self_owned(clipboard))
 		return FALSE;
@@ -1068,9 +1067,10 @@
 {
 	UINT32 i, numFormats;
 	CLIPRDR_FORMAT* formats = NULL;
-	CLIPRDR_FORMAT_LIST formatList = { 0 };
+	CLIPRDR_FORMAT_LIST formatList;
 	xfContext* xfc = clipboard->xfc;
 	UINT ret;
+	ZeroMemory(&formatList, sizeof(CLIPRDR_FORMAT_LIST));
 	numFormats = clipboard->numClientFormats;
 
 	if (numFormats)
@@ -1124,11 +1124,10 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT xf_cliprdr_monitor_ready(CliprdrClientContext* context,
-                                     const CLIPRDR_MONITOR_READY* monitorReady)
+                                     CLIPRDR_MONITOR_READY* monitorReady)
 {
 	xfClipboard* clipboard = (xfClipboard*)context->custom;
 	UINT ret;
-	WINPR_UNUSED(monitorReady);
 
 	if ((ret = xf_cliprdr_send_client_capabilities(clipboard)) != CHANNEL_RC_OK)
 		return ret;
@@ -1146,7 +1145,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT xf_cliprdr_server_capabilities(CliprdrClientContext* context,
-                                           const CLIPRDR_CAPABILITIES* capabilities)
+                                           CLIPRDR_CAPABILITIES* capabilities)
 {
 	UINT32 i;
 	const CLIPRDR_CAPABILITY_SET* caps;
@@ -1181,7 +1180,7 @@
  * @return 0 on success, otherwise a Win32 error code
  */
 static UINT xf_cliprdr_server_format_list(CliprdrClientContext* context,
-                                          const CLIPRDR_FORMAT_LIST* formatList)
+                                          CLIPRDR_FORMAT_LIST* formatList)
 {
 	UINT32 i;
 	int j;
@@ -1268,9 +1267,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-xf_cliprdr_server_format_list_response(CliprdrClientContext* context,
-                                       const CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
+static UINT xf_cliprdr_server_format_list_response(CliprdrClientContext* context,
+                                                   CLIPRDR_FORMAT_LIST_RESPONSE* formatListResponse)
 {
 	// xfClipboard* clipboard = (xfClipboard*) context->custom;
 	return CHANNEL_RC_OK;
@@ -1281,9 +1279,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-xf_cliprdr_server_format_data_request(CliprdrClientContext* context,
-                                      const CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
+static UINT xf_cliprdr_server_format_data_request(CliprdrClientContext* context,
+                                                  CLIPRDR_FORMAT_DATA_REQUEST* formatDataRequest)
 {
 	BOOL rawTransfer;
 	xfCliprdrFormat* format = NULL;
@@ -1317,9 +1314,8 @@
  *
  * @return 0 on success, otherwise a Win32 error code
  */
-static UINT
-xf_cliprdr_server_format_data_response(CliprdrClientContext* context,
-                                       const CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
+static UINT xf_cliprdr_server_format_data_response(CliprdrClientContext* context,
+                                                   CLIPRDR_FORMAT_DATA_RESPONSE* formatDataResponse)
 {
 	BOOL bSuccess;
 	BYTE* pDstData;
@@ -1355,13 +1351,6 @@
 			dstFormatId = ClipboardGetFormatId(clipboard->system, "text/html");
 			nullTerminated = TRUE;
 		}
-
-		if (strcmp(clipboard->data_format_name, "FileGroupDescriptorW") == 0)
-		{
-			srcFormatId = ClipboardGetFormatId(clipboard->system, "FileGroupDescriptorW");
-			dstFormatId = ClipboardGetFormatId(clipboard->system, "text/uri-list");
-			nullTerminated = FALSE;
-		}
 	}
 	else
 	{
@@ -1406,21 +1395,21 @@
 			return CHANNEL_RC_OK;
 		}
 
+		DstSize = 0;
 		pDstData = (BYTE*)ClipboardGetData(clipboard->system, dstFormatId, &DstSize);
 
 		if (!pDstData)
 		{
-			WLog_WARN(TAG, "failed to get clipboard data in format %s [source format %s]",
-			          ClipboardGetFormatName(clipboard->system, dstFormatId),
-			          ClipboardGetFormatName(clipboard->system, srcFormatId));
+			WLog_ERR(TAG, "failed to get clipboard data in format %s [source format %s]",
+			         ClipboardGetFormatName(clipboard->system, dstFormatId),
+			         ClipboardGetFormatName(clipboard->system, srcFormatId));
+			return ERROR_INTERNAL_ERROR;
 		}
 
 		if (nullTerminated)
 		{
-			BYTE* nullTerminator = memchr(pDstData, '\0', DstSize);
-
-			if (nullTerminator)
-				DstSize = nullTerminator - pDstData;
+			while (DstSize > 0 && pDstData[DstSize - 1] == '\0')
+				DstSize--;
 		}
 	}
 
@@ -1456,7 +1445,8 @@
 xf_cliprdr_server_file_size_request(xfClipboard* clipboard,
                                     const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
-	wClipboardFileSizeRequest request = { 0 };
+	wClipboardFileSizeRequest request;
+	ZeroMemory(&request, sizeof(request));
 	request.streamId = fileContentsRequest->streamId;
 	request.listIndex = fileContentsRequest->listIndex;
 
@@ -1473,7 +1463,8 @@
 xf_cliprdr_server_file_range_request(xfClipboard* clipboard,
                                      const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
-	wClipboardFileRangeRequest request = { 0 };
+	wClipboardFileRangeRequest request;
+	ZeroMemory(&request, sizeof(request));
 	request.streamId = fileContentsRequest->streamId;
 	request.listIndex = fileContentsRequest->listIndex;
 	request.nPositionLow = fileContentsRequest->nPositionLow;
@@ -1486,7 +1477,8 @@
 xf_cliprdr_send_file_contents_failure(CliprdrClientContext* context,
                                       const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
+	CLIPRDR_FILE_CONTENTS_RESPONSE response;
+	ZeroMemory(&response, sizeof(response));
 	response.msgFlags = CB_RESPONSE_FAIL;
 	response.streamId = fileContentsRequest->streamId;
 	response.dwFlags = fileContentsRequest->dwFlags;
@@ -1495,7 +1487,7 @@
 
 static UINT
 xf_cliprdr_server_file_contents_request(CliprdrClientContext* context,
-                                        const CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
+                                        CLIPRDR_FILE_CONTENTS_REQUEST* fileContentsRequest)
 {
 	UINT error = NO_ERROR;
 	xfClipboard* clipboard = context->custom;
@@ -1530,8 +1522,9 @@
                                                    const wClipboardFileSizeRequest* request,
                                                    UINT64 fileSize)
 {
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
+	CLIPRDR_FILE_CONTENTS_RESPONSE response;
 	xfClipboard* clipboard = delegate->custom;
+	ZeroMemory(&response, sizeof(response));
 	response.msgFlags = CB_RESPONSE_OK;
 	response.streamId = request->streamId;
 	response.dwFlags = FILECONTENTS_SIZE;
@@ -1544,9 +1537,9 @@
                                                    const wClipboardFileSizeRequest* request,
                                                    UINT errorCode)
 {
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
+	CLIPRDR_FILE_CONTENTS_RESPONSE response;
 	xfClipboard* clipboard = delegate->custom;
-	WINPR_UNUSED(errorCode);
+	ZeroMemory(&response, sizeof(response));
 	response.msgFlags = CB_RESPONSE_FAIL;
 	response.streamId = request->streamId;
 	response.dwFlags = FILECONTENTS_SIZE;
@@ -1557,8 +1550,9 @@
                                                     const wClipboardFileRangeRequest* request,
                                                     const BYTE* data, UINT32 size)
 {
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
+	CLIPRDR_FILE_CONTENTS_RESPONSE response;
 	xfClipboard* clipboard = delegate->custom;
+	ZeroMemory(&response, sizeof(response));
 	response.msgFlags = CB_RESPONSE_OK;
 	response.streamId = request->streamId;
 	response.dwFlags = FILECONTENTS_RANGE;
@@ -1571,9 +1565,9 @@
                                                     const wClipboardFileRangeRequest* request,
                                                     UINT errorCode)
 {
-	CLIPRDR_FILE_CONTENTS_RESPONSE response = { 0 };
+	CLIPRDR_FILE_CONTENTS_RESPONSE response;
 	xfClipboard* clipboard = delegate->custom;
-	WINPR_UNUSED(errorCode);
+	ZeroMemory(&response, sizeof(response));
 	response.msgFlags = CB_RESPONSE_FAIL;
 	response.streamId = request->streamId;
 	response.dwFlags = FILECONTENTS_RANGE;
@@ -1697,8 +1691,6 @@
 	clipboard->incr_atom = XInternAtom(xfc->display, "INCR", FALSE);
 	clipboard->delegate = ClipboardGetDelegate(clipboard->system);
 	clipboard->delegate->custom = clipboard;
-	/* TODO: set up a filesystem base path for local URI */
-	/* clipboard->delegate->basePath = "file:///tmp/foo/bar/gaga"; */
 	clipboard->delegate->ClipboardFileSizeSuccess = xf_cliprdr_clipboard_file_size_success;
 	clipboard->delegate->ClipboardFileSizeFailure = xf_cliprdr_clipboard_file_size_failure;
 	clipboard->delegate->ClipboardFileRangeSuccess = xf_cliprdr_clipboard_file_range_success;
diff -urN client/X11/xf_disp.c ../../informatimago/FreeRDP/client/X11/xf_disp.c
--- client/X11/xf_disp.c	2019-07-25 19:51:00.045893376 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_disp.c	2019-07-25 20:11:24.063963324 +0300
@@ -213,7 +213,6 @@
 	xfContext* xfc;
 	xfDispContext* xfDisp;
 	rdpSettings* settings;
-	WINPR_UNUSED(e);
 
 	if (!xf_disp_check_context(context, &xfc, &xfDisp, &settings))
 		return;
@@ -232,7 +231,6 @@
 	xfContext* xfc;
 	xfDispContext* xfDisp;
 	rdpSettings* settings;
-	WINPR_UNUSED(e);
 
 	if (!xf_disp_check_context(context, &xfc, &xfDisp, &settings))
 		return;
diff -urN client/X11/xf_event.c ../../informatimago/FreeRDP/client/X11/xf_event.c
--- client/X11/xf_event.c	2019-07-25 19:51:00.065893475 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_event.c	2019-07-25 20:11:24.083963423 +0300
@@ -220,7 +220,7 @@
 	char buffer[1024] = { 0 };
 	char command[1024] = { 0 };
 
-	if (!xfc->actionScriptExists || !xfc->xevents || !xfc->window)
+	if (!xfc->actionScriptExists || !xfc->xevents)
 		return FALSE;
 
 	if (event->type > LASTEvent)
@@ -305,14 +305,14 @@
 		h = event->xexpose.height;
 	}
 
-	if (!app)
+	if (xfc->context.gdi->gfx)
 	{
-		if (xfc->context.gdi->gfx)
-		{
-			xf_OutputExpose(xfc, x, y, w, h);
-			return TRUE;
-		}
+		xf_OutputExpose(xfc, x, y, w, h);
+		return TRUE;
+	}
 
+	if (!app)
+	{
 		xf_draw_screen(xfc, x, y, w, h);
 	}
 	else
@@ -330,7 +330,6 @@
 }
 static BOOL xf_event_VisibilityNotify(xfContext* xfc, XEvent* event, BOOL app)
 {
-	WINPR_UNUSED(app);
 	xfc->unobscured = event->xvisibility.state == VisibilityUnobscured;
 	return TRUE;
 }
@@ -467,7 +466,6 @@
 {
 	KeySym keysym;
 	char str[256];
-	WINPR_UNUSED(app);
 	XLookupString((XKeyEvent*)event, str, sizeof(str), &keysym, NULL);
 	xf_keyboard_key_press(xfc, event->xkey.keycode, keysym);
 	return TRUE;
@@ -476,7 +474,6 @@
 {
 	KeySym keysym;
 	char str[256];
-	WINPR_UNUSED(app);
 	XLookupString((XKeyEvent*)event, str, sizeof(str), &keysym, NULL);
 	xf_keyboard_key_release(xfc, event->xkey.keycode, keysym);
 	return TRUE;
@@ -489,13 +486,8 @@
 	xfc->focused = TRUE;
 
 	if (xfc->mouse_active && !app)
-	{
-		if (!xfc->window)
-			return FALSE;
-
 		XGrabKeyboard(xfc->display, xfc->window->handle, TRUE, GrabModeAsync, GrabModeAsync,
 		              CurrentTime);
-	}
 
 	if (app)
 	{
@@ -534,8 +526,6 @@
 }
 static BOOL xf_event_MappingNotify(xfContext* xfc, XEvent* event, BOOL app)
 {
-	WINPR_UNUSED(app);
-
 	if (event->xmapping.request == MappingModifier)
 	{
 		if (xfc->modifierMap)
@@ -576,9 +566,6 @@
 {
 	if (!app)
 	{
-		if (!xfc->window)
-			return FALSE;
-
 		xfc->mouse_active = TRUE;
 
 		if (xfc->fullscreen)
@@ -605,8 +592,6 @@
 }
 static BOOL xf_event_LeaveNotify(xfContext* xfc, XEvent* event, BOOL app)
 {
-	WINPR_UNUSED(event);
-
 	if (!app)
 	{
 		xfc->mouse_active = FALSE;
@@ -619,14 +604,10 @@
 {
 	Window childWindow;
 	xfAppWindow* appWindow;
-	rdpSettings* settings;
-	settings = xfc->context.settings;
+	rdpSettings* settings = xfc->context.settings;
 
 	if (!app)
 	{
-		if (!xfc->window)
-			return FALSE;
-
 		if (xfc->window->left != event->xconfigure.x)
 			xfc->window->left = event->xconfigure.x;
 
@@ -720,7 +701,7 @@
 			 * Doing this here would inhibit the ability to restore a maximized window
 			 * that is minimized back to the maximized state
 			 */
-			xf_rail_send_client_system_command(xfc, appWindow->windowId, SC_RESTORE);
+			// xf_rail_send_client_system_command(xfc, appWindow->windowId, SC_RESTORE);
 			appWindow->is_mapped = TRUE;
 		}
 	}
@@ -758,7 +739,7 @@
 	    (((Atom)event->xproperty.atom == xfc->WM_STATE) &&
 	     (event->xproperty.state != PropertyDelete)))
 	{
-		unsigned long i;
+		int i;
 		BOOL status;
 		BOOL maxVert = FALSE;
 		BOOL maxHorz = FALSE;
@@ -932,7 +913,6 @@
 
 	return FALSE;
 }
-
 BOOL xf_event_process(freerdp* instance, XEvent* event)
 {
 	BOOL status = TRUE;
diff -urN client/X11/xf_floatbar.c ../../informatimago/FreeRDP/client/X11/xf_floatbar.c
--- client/X11/xf_floatbar.c	2019-07-25 19:51:00.085893573 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_floatbar.c	2019-07-25 20:11:24.099963503 +0300
@@ -19,6 +19,7 @@
 #include <X11/Xutil.h>
 #include <X11/Xatom.h>
 #include <X11/extensions/shape.h>
+#include <X11/extensions/Xfixes.h>
 #include <X11/cursorfont.h>
 
 #include "xf_floatbar.h"
@@ -353,7 +354,6 @@
 	XPoint shape[5], border[5];
 	int len;
 	Display* display = floatbar->xfc->display;
-	WINPR_UNUSED(event);
 	/* create the pixmap that we'll use for shaping the window */
 	pmap = XCreatePixmap(display, floatbar->handle, floatbar->width, floatbar->height, 1);
 	gc = XCreateGC(display, floatbar->handle, 0, 0);
@@ -663,7 +663,6 @@
 static void xf_floatbar_event_focusout(xfFloatbar* floatbar, XEvent* event)
 {
 	xfContext* xfc = floatbar->xfc;
-	WINPR_UNUSED(event);
 
 	if (xfc->pointer)
 	{
@@ -675,6 +674,7 @@
 {
 	xfFloatbarButton* button;
 	size_t i, size;
+	xfContext* xfc;
 
 	if (!floatbar || !floatbar->xfc || !event)
 		return FALSE;
@@ -682,6 +682,8 @@
 	if (!floatbar->created)
 		return FALSE;
 
+	xfc = floatbar->xfc;
+
 	if (event->xany.window == floatbar->handle)
 		return TRUE;
 
diff -urN client/X11/xf_gdi.c ../../informatimago/FreeRDP/client/X11/xf_gdi.c
--- client/X11/xf_gdi.c	2019-07-25 19:51:00.109893693 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_gdi.c	2019-07-25 20:11:24.123963621 +0300
@@ -725,8 +725,7 @@
 
 static BOOL xf_gdi_polygon_sc(rdpContext* context, const POLYGON_SC_ORDER* polygon_sc)
 {
-	UINT32 i;
-	int npoints;
+	int i, npoints;
 	XPoint* points;
 	XColor brush_color;
 	xfContext* xfc = (xfContext*)context;
@@ -788,8 +787,7 @@
 
 static BOOL xf_gdi_polygon_cb(rdpContext* context, POLYGON_CB_ORDER* polygon_cb)
 {
-	UINT32 i;
-	int npoints;
+	int i, npoints;
 	XPoint* points;
 	Pixmap pattern;
 	const rdpBrush* brush;
diff -urN client/X11/xf_gfx.c ../../informatimago/FreeRDP/client/X11/xf_gfx.c
--- client/X11/xf_gfx.c	2019-07-25 19:51:00.117893732 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_gfx.c	2019-07-25 20:11:24.131963661 +0300
@@ -38,22 +38,19 @@
 	RECTANGLE_16 surfaceRect;
 	rdpGdi* gdi;
 	UINT32 nbRects, x;
-	double sx, sy;
 	const RECTANGLE_16* rects;
 	gdi = xfc->context.gdi;
 	surfaceX = surface->gdi.outputOriginX;
 	surfaceY = surface->gdi.outputOriginY;
 	surfaceRect.left = 0;
 	surfaceRect.top = 0;
-	surfaceRect.right = surface->gdi.mappedWidth;
-	surfaceRect.bottom = surface->gdi.mappedHeight;
+	surfaceRect.right = surface->gdi.width;
+	surfaceRect.bottom = surface->gdi.height;
 	XSetClipMask(xfc->display, xfc->gc, None);
 	XSetFunction(xfc->display, xfc->gc, GXcopy);
 	XSetFillStyle(xfc->display, xfc->gc, FillSolid);
 	region16_intersect_rect(&(surface->gdi.invalidRegion), &(surface->gdi.invalidRegion),
 	                        &surfaceRect);
-	sx = surface->gdi.outputTargetWidth / (double)surface->gdi.mappedWidth;
-	sy = surface->gdi.outputTargetHeight / (double)surface->gdi.mappedHeight;
 
 	if (!(rects = region16_rects(&surface->gdi.invalidRegion, &nbRects)))
 		return CHANNEL_RC_OK;
@@ -62,27 +59,25 @@
 	{
 		const UINT32 nXSrc = rects[x].left;
 		const UINT32 nYSrc = rects[x].top;
-		const UINT32 swidth = rects[x].right - nXSrc;
-		const UINT32 sheight = rects[x].bottom - nYSrc;
-		const UINT32 nXDst = surfaceX + nXSrc * sx;
-		const UINT32 nYDst = surfaceY + nYSrc * sy;
-		const UINT32 dwidth = swidth * sx;
-		const UINT32 dheight = sheight * sy;
+		const UINT32 width = rects[x].right - nXSrc;
+		const UINT32 height = rects[x].bottom - nYSrc;
+		const UINT32 nXDst = surfaceX + nXSrc;
+		const UINT32 nYDst = surfaceY + nYSrc;
 
 		if (surface->stage)
 		{
-			if (!freerdp_image_scale(surface->stage, gdi->dstFormat, surface->stageScanline, nXSrc,
-			                         nYSrc, dwidth, dheight, surface->gdi.data, surface->gdi.format,
-			                         surface->gdi.scanline, nXSrc, nYSrc, swidth, sheight))
+			if (!freerdp_image_copy(surface->stage, gdi->dstFormat, surface->stageScanline, nXSrc,
+			                        nYSrc, width, height, surface->gdi.data, surface->gdi.format,
+			                        surface->gdi.scanline, nXSrc, nYSrc, NULL, FREERDP_FLIP_NONE))
 				goto fail;
 		}
 
 		if (xfc->remote_app)
 		{
 			XPutImage(xfc->display, xfc->primary, xfc->gc, surface->image, nXSrc, nYSrc, nXDst,
-			          nYDst, dwidth, dheight);
+			          nYDst, width, height);
 			xf_lock_x11(xfc, FALSE);
-			xf_rail_paint(xfc, nXDst, nYDst, nXDst + dwidth, nYDst + dheight);
+			xf_rail_paint(xfc, nXDst, nYDst, nXDst + width, nYDst + height);
 			xf_unlock_x11(xfc, FALSE);
 		}
 		else
@@ -90,14 +85,14 @@
 		    if (xfc->context.settings->SmartSizing || xfc->context.settings->MultiTouchGestures)
 		{
 			XPutImage(xfc->display, xfc->primary, xfc->gc, surface->image, nXSrc, nYSrc, nXDst,
-			          nYDst, dwidth, dheight);
-			xf_draw_screen(xfc, nXDst, nYDst, dwidth, dheight);
+			          nYDst, width, height);
+			xf_draw_screen(xfc, nXDst, nYDst, width, height);
 		}
 		else
 #endif
 		{
 			XPutImage(xfc->display, xfc->drawable, xfc->gc, surface->image, nXSrc, nYSrc, nXDst,
-			          nYDst, dwidth, dheight);
+			          nYDst, width, height);
 		}
 	}
 
@@ -114,6 +109,7 @@
 	UINT16 count;
 	UINT32 index;
 	UINT status = CHANNEL_RC_OK;
+	xfGfxSurface* surface;
 	UINT16* pSurfaceIds = NULL;
 	rdpGdi* gdi = (rdpGdi*)context->custom;
 	xfContext* xfc = (xfContext*)gdi->context;
@@ -132,22 +128,12 @@
 
 	for (index = 0; index < count; index++)
 	{
-		xfGfxSurface* surface = (xfGfxSurface*)context->GetSurfaceData(context, pSurfaceIds[index]);
+		surface = (xfGfxSurface*)context->GetSurfaceData(context, pSurfaceIds[index]);
 
-		if (!surface)
+		if (!surface || !surface->gdi.outputMapped)
 			continue;
 
-		/* If UpdateSurfaceArea callback is available, the output has already been updated. */
-		if (context->UpdateSurfaceArea)
-		{
-			if (surface->gdi.windowId != 0)
-				continue;
-		}
-
-		status = ERROR_INTERNAL_ERROR;
-
-		if (surface->gdi.outputMapped)
-			status = xf_OutputUpdate(xfc, surface);
+		status = xf_OutputUpdate(xfc, surface);
 
 		if (status != 0)
 			break;
@@ -189,8 +175,8 @@
 
 		surfaceRect.left = surface->gdi.outputOriginX;
 		surfaceRect.top = surface->gdi.outputOriginY;
-		surfaceRect.right = surface->gdi.outputOriginX + surface->gdi.outputTargetWidth;
-		surfaceRect.bottom = surface->gdi.outputOriginY + surface->gdi.outputTargetHeight;
+		surfaceRect.right = surface->gdi.outputOriginX + surface->gdi.width;
+		surfaceRect.bottom = surface->gdi.outputOriginY + surface->gdi.height;
 
 		if (rectangles_intersection(&invalidRect, &surfaceRect, &intersection))
 		{
@@ -261,12 +247,8 @@
 	}
 
 	surface->gdi.surfaceId = createSurface->surfaceId;
-	surface->gdi.width = x11_pad_scanline(createSurface->width, 0);
-	surface->gdi.height = x11_pad_scanline(createSurface->height, 0);
-	surface->gdi.mappedWidth = createSurface->width;
-	surface->gdi.mappedHeight = createSurface->height;
-	surface->gdi.outputTargetWidth = createSurface->width;
-	surface->gdi.outputTargetHeight = createSurface->height;
+	surface->gdi.width = (UINT32)createSurface->width;
+	surface->gdi.height = (UINT32)createSurface->height;
 
 	switch (createSurface->pixelFormat)
 	{
@@ -300,10 +282,9 @@
 
 	if (AreColorFormatsEqualNoAlpha(gdi->dstFormat, surface->gdi.format))
 	{
-		surface->image =
-		    XCreateImage(xfc->display, xfc->visual, xfc->depth, ZPixmap, 0,
-		                 (char*)surface->gdi.data, surface->gdi.mappedWidth,
-		                 surface->gdi.mappedHeight, xfc->scanline_pad, surface->gdi.scanline);
+		surface->image = XCreateImage(
+		    xfc->display, xfc->visual, xfc->depth, ZPixmap, 0, (char*)surface->gdi.data,
+		    surface->gdi.width, surface->gdi.height, xfc->scanline_pad, surface->gdi.scanline);
 	}
 	else
 	{
@@ -321,10 +302,9 @@
 		}
 
 		ZeroMemory(surface->stage, size);
-		surface->image =
-		    XCreateImage(xfc->display, xfc->visual, xfc->depth, ZPixmap, 0, (char*)surface->stage,
-		                 surface->gdi.mappedWidth, surface->gdi.mappedHeight, xfc->scanline_pad,
-		                 surface->stageScanline);
+		surface->image = XCreateImage(
+		    xfc->display, xfc->visual, xfc->depth, ZPixmap, 0, (char*)surface->stage,
+		    surface->gdi.width, surface->gdi.height, xfc->scanline_pad, surface->stageScanline);
 	}
 
 	if (!surface->image)
@@ -373,9 +353,6 @@
 
 	if (surface)
 	{
-		if (surface->gdi.windowId > 0)
-			IFCALL(context->UnmapWindowForSurface, context, surface->gdi.windowId);
-
 #ifdef WITH_GFX_H264
 		h264_context_free(surface->gdi.h264);
 #endif
@@ -401,13 +378,9 @@
 {
 	rdpGdi* gdi = xfc->context.gdi;
 	gdi_graphics_pipeline_init(gdi, gfx);
-
-	if (!xfc->context.settings->SoftwareGdi)
-	{
-		gfx->UpdateSurfaces = xf_UpdateSurfaces;
-		gfx->CreateSurface = xf_CreateSurface;
-		gfx->DeleteSurface = xf_DeleteSurface;
-	}
+	gfx->UpdateSurfaces = xf_UpdateSurfaces;
+	gfx->CreateSurface = xf_CreateSurface;
+	gfx->DeleteSurface = xf_DeleteSurface;
 }
 
 void xf_graphics_pipeline_uninit(xfContext* xfc, RdpgfxClientContext* gfx)
diff -urN client/X11/xf_gfx.h ../../informatimago/FreeRDP/client/X11/xf_gfx.h
--- client/X11/xf_gfx.h	2019-07-25 19:51:00.117893732 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_gfx.h	2019-07-25 20:11:24.131963661 +0300
@@ -36,10 +36,20 @@
 };
 typedef struct xf_gfx_surface xfGfxSurface;
 
+struct xf_gfx_cache_entry
+{
+	UINT64 cacheKey;
+	UINT32 width;
+	UINT32 height;
+	BYTE* data;
+	UINT32 scanline;
+	UINT32 format;
+};
+typedef struct xf_gfx_cache_entry xfGfxCacheEntry;
+
 UINT xf_OutputExpose(xfContext* xfc, UINT32 x, UINT32 y, UINT32 width, UINT32 height);
 
 void xf_graphics_pipeline_init(xfContext* xfc, RdpgfxClientContext* gfx);
-
 void xf_graphics_pipeline_uninit(xfContext* xfc, RdpgfxClientContext* gfx);
 
 #endif /* FREERDP_CLIENT_X11_GFX_H */
diff -urN client/X11/xf_graphics.c ../../informatimago/FreeRDP/client/X11/xf_graphics.c
--- client/X11/xf_graphics.c	2019-07-25 19:51:00.129893792 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_graphics.c	2019-07-25 20:11:24.143963721 +0300
@@ -122,7 +122,7 @@
 	{
 		XSetFunction(xfc->display, xfc->gc, GXcopy);
 
-		if ((INT64)depth != xfc->depth)
+		if (depth != xfc->depth)
 		{
 			if (!(data = _aligned_malloc(bitmap->width * bitmap->height * 4, 16)))
 				goto unlock;
diff -urN client/X11/xf_input.c ../../informatimago/FreeRDP/client/X11/xf_input.c
--- client/X11/xf_input.c	2019-07-25 19:51:00.137893832 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_input.c	2019-07-25 20:11:24.151963760 +0300
@@ -379,7 +379,6 @@
 static void xf_input_touch_begin(xfContext* xfc, XIDeviceEvent* event)
 {
 	int i;
-	WINPR_UNUSED(xfc);
 
 	for (i = 0; i < MAX_CONTACTS; i++)
 	{
@@ -418,7 +417,6 @@
 static void xf_input_touch_end(xfContext* xfc, XIDeviceEvent* event)
 {
 	int i;
-	WINPR_UNUSED(xfc);
 
 	for (i = 0; i < MAX_CONTACTS; i++)
 	{
diff -urN client/X11/xf_keyboard.c ../../informatimago/FreeRDP/client/X11/xf_keyboard.c
--- client/X11/xf_keyboard.c	2019-07-25 19:51:00.149893891 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_keyboard.c	2019-07-25 20:11:24.159963800 +0300
@@ -321,7 +321,6 @@
 	KeyCode keycode;
 	int keysyms[] = { XK_Shift_L,   XK_Shift_R,   XK_Alt_L,   XK_Alt_R,
 		              XK_Control_L, XK_Control_R, XK_Super_L, XK_Super_R };
-	xf_keyboard_clear(xfc);
 	state = xf_keyboard_read_keyboard_state(xfc);
 
 	for (i = 0; i < ARRAYSIZE(keysyms); i++)
diff -urN client/X11/xf_monitor.c ../../informatimago/FreeRDP/client/X11/xf_monitor.c
--- client/X11/xf_monitor.c	2019-07-25 19:51:00.165893970 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_monitor.c	2019-07-25 20:11:24.175963880 +0300
@@ -115,7 +115,7 @@
 
 static BOOL xf_is_monitor_id_active(xfContext* xfc, UINT32 id)
 {
-	UINT32 index;
+	int index;
 	rdpSettings* settings = xfc->context.settings;
 
 	if (!settings->NumMonitorIds)
@@ -132,11 +132,12 @@
 
 BOOL xf_detect_monitors(xfContext* xfc, UINT32* pMaxWidth, UINT32* pMaxHeight)
 {
+	UINT32 i;
 	int nmonitors = 0;
 	int monitor_index = 0;
 	BOOL primaryMonitorFound = FALSE;
 	VIRTUAL_SCREEN* vscreen;
-	rdpSettings* settings;
+	rdpSettings* settings = xfc->context.settings;
 	int mouse_x, mouse_y, _dummy_i;
 	Window _dummy_w;
 	int current_monitor = 0;
@@ -149,11 +150,6 @@
 	XRRMonitorInfo* rrmonitors = NULL;
 	BOOL useXRandr = FALSE;
 #endif
-
-	if (!xfc || !pMaxWidth || !pMaxHeight || !xfc->context.settings)
-		return FALSE;
-
-	settings = xfc->context.settings;
 	vscreen = &xfc->vscreen;
 	*pMaxWidth = settings->DesktopWidth;
 	*pMaxHeight = settings->DesktopHeight;
@@ -176,8 +172,6 @@
 
 		if (vscreen->nmonitors)
 		{
-			int i;
-
 			for (i = 0; i < vscreen->nmonitors; i++)
 			{
 				vscreen->monitors[i].area.left = rrmonitors[i].x;
@@ -203,8 +197,6 @@
 
 		if (vscreen->nmonitors)
 		{
-			int i;
-
 			for (i = 0; i < vscreen->nmonitors; i++)
 			{
 				vscreen->monitors[i].area.left = screenInfo[i].x_org;
@@ -224,8 +216,6 @@
 	/* Determine which monitor that the mouse cursor is on */
 	if (vscreen->monitors)
 	{
-		int i;
-
 		for (i = 0; i < vscreen->nmonitors; i++)
 		{
 			if ((mouse_x >= vscreen->monitors[i].area.left) &&
@@ -279,10 +269,6 @@
 		if (settings->NumMonitorIds == 1)
 		{
 			monitor = vscreen->monitors + current_monitor;
-
-			if (!monitor)
-				return FALSE;
-
 			xfc->workArea.x = monitor->area.left;
 			xfc->workArea.y = monitor->area.top;
 			xfc->workArea.width = monitor->area.right - monitor->area.left + 1;
@@ -314,9 +300,6 @@
 		 */
 		if (vscreen->nmonitors > 0)
 		{
-			if (!vscreen->monitors)
-				return FALSE;
-
 			*pMaxWidth = vscreen->monitors[current_monitor].area.right -
 			             vscreen->monitors[current_monitor].area.left + 1;
 			*pMaxHeight = vscreen->monitors[current_monitor].area.bottom -
@@ -354,69 +337,59 @@
 
 	/* Create array of all active monitors by taking into account monitors requested on the
 	 * command-line */
+	for (i = 0; i < vscreen->nmonitors; i++)
 	{
-		int i;
-
-		for (i = 0; i < vscreen->nmonitors; i++)
-		{
-			MONITOR_ATTRIBUTES* attrs;
-
-			if (!xf_is_monitor_id_active(xfc, (UINT32)i))
-				continue;
+		MONITOR_ATTRIBUTES* attrs;
 
-			if (!vscreen->monitors)
-				return FALSE;
+		if (!xf_is_monitor_id_active(xfc, i))
+			continue;
 
-			settings->MonitorDefArray[nmonitors].x = vscreen->monitors[i].area.left;
-			settings->MonitorDefArray[nmonitors].y = vscreen->monitors[i].area.top;
-			settings->MonitorDefArray[nmonitors].width =
-			    vscreen->monitors[i].area.right - vscreen->monitors[i].area.left + 1;
-			settings->MonitorDefArray[nmonitors].height =
-			    vscreen->monitors[i].area.bottom - vscreen->monitors[i].area.top + 1;
-			settings->MonitorDefArray[nmonitors].orig_screen = i;
+		settings->MonitorDefArray[nmonitors].x = vscreen->monitors[i].area.left;
+		settings->MonitorDefArray[nmonitors].y = vscreen->monitors[i].area.top;
+		settings->MonitorDefArray[nmonitors].width =
+		    vscreen->monitors[i].area.right - vscreen->monitors[i].area.left + 1;
+		settings->MonitorDefArray[nmonitors].height =
+		    vscreen->monitors[i].area.bottom - vscreen->monitors[i].area.top + 1;
+		settings->MonitorDefArray[nmonitors].orig_screen = i;
 #ifdef USABLE_XRANDR
 
-			if (useXRandr && rrmonitors)
-			{
-				Rotation rot, ret;
-				attrs = &settings->MonitorDefArray[nmonitors].attributes;
-				attrs->physicalWidth = rrmonitors[i].mwidth;
-				attrs->physicalHeight = rrmonitors[i].mheight;
-				ret = XRRRotations(xfc->display, i, &rot);
-				attrs->orientation = rot;
-			}
+		if (useXRandr && rrmonitors)
+		{
+			Rotation rot, ret;
+			attrs = &settings->MonitorDefArray[nmonitors].attributes;
+			attrs->physicalWidth = rrmonitors[i].mwidth;
+			attrs->physicalHeight = rrmonitors[i].mheight;
+			ret = XRRRotations(xfc->display, i, &rot);
+			attrs->orientation = rot;
+		}
 
 #endif
 
-			if ((UINT32)i == settings->MonitorIds[0])
-			{
-				settings->MonitorDefArray[nmonitors].is_primary = TRUE;
-				settings->MonitorLocalShiftX = settings->MonitorDefArray[nmonitors].x;
-				settings->MonitorLocalShiftY = settings->MonitorDefArray[nmonitors].y;
-				primaryMonitorFound = TRUE;
-			}
-
-			nmonitors++;
+		if (i == settings->MonitorIds[0])
+		{
+			settings->MonitorDefArray[nmonitors].is_primary = TRUE;
+			settings->MonitorLocalShiftX = settings->MonitorDefArray[nmonitors].x;
+			settings->MonitorLocalShiftY = settings->MonitorDefArray[nmonitors].y;
+			primaryMonitorFound = TRUE;
 		}
+
+		nmonitors++;
 	}
 
 	/* If no monitor is active(bogus command-line monitor specification) - then lets try to fallback
 	 * to go fullscreen on the current monitor only */
 	if (nmonitors == 0 && vscreen->nmonitors > 0)
 	{
-		INT32 width, height;
-
-		if (!vscreen->monitors)
-			return FALSE;
-
-		width = vscreen->monitors[current_monitor].area.right -
-		        vscreen->monitors[current_monitor].area.left + 1L;
-		height = vscreen->monitors[current_monitor].area.bottom -
-		         vscreen->monitors[current_monitor].area.top + 1L;
 		settings->MonitorDefArray[0].x = vscreen->monitors[current_monitor].area.left;
 		settings->MonitorDefArray[0].y = vscreen->monitors[current_monitor].area.top;
-		settings->MonitorDefArray[0].width = MIN(width, (INT64)(*pMaxWidth));
-		settings->MonitorDefArray[0].height = MIN(height, (INT64)(*pMaxHeight));
+		settings->MonitorDefArray[0].width =
+		    MIN(vscreen->monitors[current_monitor].area.right -
+		            vscreen->monitors[current_monitor].area.left + 1,
+		        *pMaxWidth);
+		settings->MonitorDefArray[0].height =
+		    MIN(vscreen->monitors[current_monitor].area.bottom -
+		            vscreen->monitors[current_monitor].area.top + 1,
+		        *pMaxHeight);
 		settings->MonitorDefArray[0].orig_screen = current_monitor;
 		nmonitors = 1;
 	}
@@ -426,7 +399,6 @@
 	/* If we have specific monitor information */
 	if (settings->MonitorCount)
 	{
-		UINT32 i;
 		/* Initialize bounding rectangle for all monitors */
 		int vX = settings->MonitorDefArray[0].x;
 		int vY = settings->MonitorDefArray[0].y;
@@ -541,8 +513,8 @@
 
 		/* Set the desktop width and height according to the bounding rectangle around the active
 		 * monitors */
-		*pMaxWidth = MIN(*pMaxWidth, (UINT32)vscreen->area.right - vscreen->area.left + 1);
-		*pMaxHeight = MIN(*pMaxHeight, (UINT32)vscreen->area.bottom - vscreen->area.top + 1);
+		*pMaxWidth = MIN(*pMaxWidth, vscreen->area.right - vscreen->area.left + 1);
+		*pMaxHeight = MIN(*pMaxHeight, vscreen->area.bottom - vscreen->area.top + 1);
 	}
 
 	/* some 2008 server freeze at logon if we announce support for monitor layout PDU with
diff -urN client/X11/xf_rail.c ../../informatimago/FreeRDP/client/X11/xf_rail.c
--- client/X11/xf_rail.c	2019-07-25 19:51:00.181894049 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_rail.c	2019-07-25 20:11:24.195963979 +0300
@@ -129,8 +129,7 @@
 
 	/* If current window position disagrees with RDP window position, send update to RDP server */
 	if (appWindow->x != appWindow->windowOffsetX || appWindow->y != appWindow->windowOffsetY ||
-	    appWindow->width != (INT64)appWindow->windowWidth ||
-	    appWindow->height != (INT64)appWindow->windowHeight)
+	    appWindow->width != appWindow->windowWidth || appWindow->height != appWindow->windowHeight)
 	{
 		windowMove.windowId = appWindow->windowId;
 		/*
@@ -199,7 +198,7 @@
 static void xf_rail_invalidate_region(xfContext* xfc, REGION16* invalidRegion)
 {
 	int index;
-	int count = 0;
+	int count;
 	RECTANGLE_16 updateRect;
 	RECTANGLE_16 windowRect;
 	ULONG_PTR* pKeys = NULL;
@@ -207,13 +206,11 @@
 	const RECTANGLE_16* extents;
 	REGION16 windowInvalidRegion;
 	region16_init(&windowInvalidRegion);
-
-	if (xfc->railWindows)
-		count = HashTable_GetKeys(xfc->railWindows, &pKeys);
+	count = HashTable_GetKeys(xfc->railWindows, &pKeys);
 
 	for (index = 0; index < count; index++)
 	{
-		appWindow = xf_rail_get_window(xfc, *(UINT64*)pKeys[index]);
+		appWindow = (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, (void*)pKeys[index]);
 
 		if (appWindow)
 		{
@@ -258,27 +255,29 @@
 
 /* RemoteApp Core Protocol Extension */
 
-static BOOL xf_rail_window_common(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                  const WINDOW_STATE_ORDER* windowState)
+static BOOL xf_rail_window_common(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                  WINDOW_STATE_ORDER* windowState)
 {
 	xfAppWindow* appWindow = NULL;
 	xfContext* xfc = (xfContext*)context;
 	UINT32 fieldFlags = orderInfo->fieldFlags;
 	BOOL position_or_size_updated = FALSE;
-	appWindow = xf_rail_get_window(xfc, orderInfo->windowId);
 
 	if (fieldFlags & WINDOW_ORDER_STATE_NEW)
 	{
-		if (!appWindow)
-			appWindow = xf_rail_add_window(xfc, orderInfo->windowId, windowState->windowOffsetX,
-			                               windowState->windowOffsetY, windowState->windowWidth,
-			                               windowState->windowHeight, 0xFFFFFFFF);
+		appWindow = (xfAppWindow*)calloc(1, sizeof(xfAppWindow));
 
 		if (!appWindow)
 			return FALSE;
 
+		appWindow->xfc = xfc;
+		appWindow->windowId = orderInfo->windowId;
 		appWindow->dwStyle = windowState->style;
 		appWindow->dwExStyle = windowState->extendedStyle;
+		appWindow->x = appWindow->windowOffsetX = windowState->windowOffsetX;
+		appWindow->y = appWindow->windowOffsetY = windowState->windowOffsetY;
+		appWindow->width = appWindow->windowWidth = windowState->windowWidth;
+		appWindow->height = appWindow->windowHeight = windowState->windowHeight;
 
 		/* Ensure window always gets a window title */
 		if (fieldFlags & WINDOW_ORDER_FIELD_TITLE)
@@ -315,8 +314,13 @@
 			return FALSE;
 		}
 
+		HashTable_Add(xfc->railWindows, &appWindow->windowId, (void*)appWindow);
 		xf_AppWindowInit(xfc, appWindow);
 	}
+	else
+	{
+		appWindow = (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, &orderInfo->windowId);
+	}
 
 	if (!appWindow)
 		return FALSE;
@@ -490,10 +494,10 @@
 		if (appWindow->rail_state != WINDOW_SHOW_MINIMIZED)
 		{
 			/* Redraw window area if already in the correct position */
-			if (appWindow->x == (INT64)appWindow->windowOffsetX &&
-			    appWindow->y == (INT64)appWindow->windowOffsetY &&
-			    appWindow->width == (INT64)appWindow->windowWidth &&
-			    appWindow->height == (INT64)appWindow->windowHeight)
+			if (appWindow->x == appWindow->windowOffsetX &&
+			    appWindow->y == appWindow->windowOffsetY &&
+			    appWindow->width == appWindow->windowWidth &&
+			    appWindow->height == appWindow->windowHeight)
 			{
 				xf_UpdateWindowArea(xfc, appWindow, 0, 0, appWindow->windowWidth,
 				                    appWindow->windowHeight);
@@ -518,10 +522,15 @@
 	return TRUE;
 }
 
-static BOOL xf_rail_window_delete(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo)
+static BOOL xf_rail_window_delete(rdpContext* context, WINDOW_ORDER_INFO* orderInfo)
 {
 	xfContext* xfc = (xfContext*)context;
-	return xf_rail_del_window(xfc, orderInfo->windowId);
+
+	if (!xfc)
+		return FALSE;
+
+	HashTable_Remove(xfc->railWindows, &orderInfo->windowId);
+	return TRUE;
 }
 
 static xfRailIconCache* RailIconCache_New(rdpSettings* settings)
@@ -588,6 +597,130 @@
 }
 
 /*
+ * DIB color palettes are arrays of RGBQUAD structs with colors in BGRX format.
+ * They are used only by 1, 2, 4, and 8-bit bitmaps.
+ */
+static void fill_gdi_palette_for_icon(ICON_INFO* iconInfo, gdiPalette* palette)
+{
+	UINT32 i;
+	palette->format = PIXEL_FORMAT_BGRX32;
+	ZeroMemory(palette->palette, sizeof(palette->palette));
+
+	if (!iconInfo->cbColorTable)
+		return;
+
+	if ((iconInfo->cbColorTable % 4 != 0) || (iconInfo->cbColorTable / 4 > 256))
+	{
+		WLog_WARN(TAG, "weird palette size: %u", iconInfo->cbColorTable);
+		return;
+	}
+
+	for (i = 0; i < iconInfo->cbColorTable / 4; i++)
+	{
+		palette->palette[i] = ReadColor(&iconInfo->colorTable[4 * i], palette->format);
+	}
+}
+
+static BOOL convert_icon_color_to_argb(ICON_INFO* iconInfo, BYTE* argbPixels)
+{
+	DWORD format;
+	gdiPalette palette;
+
+	/*
+	 * Color formats used by icons are DIB bitmap formats (2-bit format
+	 * is not used by MS-RDPERP). Note that 16-bit is RGB555, not RGB565,
+	 * and that 32-bit format uses BGRA order.
+	 */
+	switch (iconInfo->bpp)
+	{
+	case 1:
+	case 4:
+		/*
+		 * These formats are not supported by freerdp_image_copy().
+		 * PIXEL_FORMAT_MONO and PIXEL_FORMAT_A4 are *not* correct
+		 * color formats for this. Please fix freerdp_image_copy()
+		 * if you came here to fix a broken icon of some weird app
+		 * that still uses 1 or 4bpp format in the 21st century.
+		 */
+		WLog_WARN(TAG, "1bpp and 4bpp icons are not supported");
+		return FALSE;
+
+	case 8:
+		format = PIXEL_FORMAT_RGB8;
+		break;
+
+	case 16:
+		format = PIXEL_FORMAT_RGB15;
+		break;
+
+	case 24:
+		format = PIXEL_FORMAT_RGB24;
+		break;
+
+	case 32:
+		format = PIXEL_FORMAT_BGRA32;
+		break;
+
+	default:
+		WLog_WARN(TAG, "invalid icon bpp: %d", iconInfo->bpp);
+		return FALSE;
+	}
+
+	fill_gdi_palette_for_icon(iconInfo, &palette);
+	return freerdp_image_copy(argbPixels, PIXEL_FORMAT_ARGB32, 0, 0, 0, iconInfo->width,
+	                          iconInfo->height, iconInfo->bitsColor, format, 0, 0, 0, &palette,
+	                          FREERDP_FLIP_VERTICAL);
+}
+
+static inline UINT32 div_ceil(UINT32 a, UINT32 b)
+{
+	return (a + (b - 1)) / b;
+}
+
+static inline UINT32 round_up(UINT32 a, UINT32 b)
+{
+	return b * div_ceil(a, b);
+}
+
+static void apply_icon_alpha_mask(ICON_INFO* iconInfo, BYTE* argbPixels)
+{
+	BYTE nextBit;
+	BYTE* maskByte;
+	UINT32 x, y;
+	UINT32 stride;
+
+	if (!iconInfo->cbBitsMask)
+		return;
+
+	/*
+	 * Each byte encodes 8 adjacent pixels (with LSB padding as needed).
+	 * And due to hysterical raisins, stride of DIB bitmaps must be
+	 * a multiple of 4 bytes.
+	 */
+	stride = round_up(div_ceil(iconInfo->width, 8), 4);
+
+	for (y = 0; y < iconInfo->height; y++)
+	{
+		/* ɐᴉlɐɹʇsn∀ uᴉ ǝɹ,ǝʍ ʇɐɥʇ ʇǝƃɹoɟ ʇ,uop */
+		maskByte = &iconInfo->bitsMask[stride * (iconInfo->height - 1 - y)];
+		nextBit = 0x80;
+
+		for (x = 0; x < iconInfo->width; x++)
+		{
+			BYTE alpha = (*maskByte & nextBit) ? 0x00 : 0xFF;
+			argbPixels[4 * (x + y * iconInfo->width)] &= alpha;
+			nextBit >>= 1;
+
+			if (!nextBit)
+			{
+				nextBit = 0x80;
+				maskByte++;
+			}
+		}
+	}
+}
+
+/*
  * _NET_WM_ICON format is defined as "array of CARDINAL" values which for
  * Xlib must be represented with an array of C's "long" values. Note that
  * "long" != "INT32" on 64-bit systems. Therefore we can't simply cast
@@ -599,7 +732,7 @@
  */
 static BOOL convert_rail_icon(ICON_INFO* iconInfo, xfRailIcon* railIcon)
 {
-	BYTE* argbPixels = NULL;
+	BYTE* argbPixels;
 	BYTE* nextPixel;
 	long* pixels;
 	int i;
@@ -609,12 +742,10 @@
 	if (!argbPixels)
 		goto error;
 
-	if (!freerdp_image_copy_from_icon_data(
-	        argbPixels, PIXEL_FORMAT_ARGB32, 0, 0, 0, iconInfo->width, iconInfo->height,
-	        iconInfo->bitsColor, iconInfo->cbBitsColor, iconInfo->bitsMask, iconInfo->cbBitsMask,
-	        iconInfo->colorTable, iconInfo->cbColorTable, iconInfo->bpp))
+	if (!convert_icon_color_to_argb(iconInfo, argbPixels))
 		goto error;
 
+	apply_icon_alpha_mask(iconInfo, argbPixels);
 	nelements = 2 + iconInfo->width * iconInfo->height;
 	pixels = realloc(railIcon->data, nelements * sizeof(long));
 
@@ -649,14 +780,19 @@
 	XFlush(xfc->display);
 }
 
-static BOOL xf_rail_window_icon(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                const WINDOW_ICON_ORDER* windowIcon)
+static xfAppWindow* xf_rail_get_window_by_id(xfContext* xfc, UINT32 windowId)
+{
+	return (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, &windowId);
+}
+
+static BOOL xf_rail_window_icon(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                WINDOW_ICON_ORDER* windowIcon)
 {
 	xfContext* xfc = (xfContext*)context;
 	xfAppWindow* railWindow;
 	xfRailIcon* icon;
 	BOOL replaceIcon;
-	railWindow = xf_rail_get_window(xfc, orderInfo->windowId);
+	railWindow = xf_rail_get_window_by_id(xfc, orderInfo->windowId);
 
 	if (!railWindow)
 		return TRUE;
@@ -682,14 +818,14 @@
 	return TRUE;
 }
 
-static BOOL xf_rail_window_cached_icon(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                       const WINDOW_CACHED_ICON_ORDER* windowCachedIcon)
+static BOOL xf_rail_window_cached_icon(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                       WINDOW_CACHED_ICON_ORDER* windowCachedIcon)
 {
 	xfContext* xfc = (xfContext*)context;
 	xfAppWindow* railWindow;
 	xfRailIcon* icon;
 	BOOL replaceIcon;
-	railWindow = xf_rail_get_window(xfc, orderInfo->windowId);
+	railWindow = xf_rail_get_window_by_id(xfc, orderInfo->windowId);
 
 	if (!railWindow)
 		return TRUE;
@@ -709,8 +845,8 @@
 	return TRUE;
 }
 
-static BOOL xf_rail_notify_icon_common(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                       const NOTIFY_ICON_STATE_ORDER* notifyIconState)
+static BOOL xf_rail_notify_icon_common(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                       NOTIFY_ICON_STATE_ORDER* notifyIconState)
 {
 	if (orderInfo->fieldFlags & WINDOW_ORDER_FIELD_NOTIFY_VERSION)
 	{
@@ -739,30 +875,30 @@
 	return TRUE;
 }
 
-static BOOL xf_rail_notify_icon_create(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                       const NOTIFY_ICON_STATE_ORDER* notifyIconState)
+static BOOL xf_rail_notify_icon_create(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                       NOTIFY_ICON_STATE_ORDER* notifyIconState)
 {
 	return xf_rail_notify_icon_common(context, orderInfo, notifyIconState);
 }
 
-static BOOL xf_rail_notify_icon_update(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                       const NOTIFY_ICON_STATE_ORDER* notifyIconState)
+static BOOL xf_rail_notify_icon_update(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                       NOTIFY_ICON_STATE_ORDER* notifyIconState)
 {
 	return xf_rail_notify_icon_common(context, orderInfo, notifyIconState);
 }
 
-static BOOL xf_rail_notify_icon_delete(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo)
+static BOOL xf_rail_notify_icon_delete(rdpContext* context, WINDOW_ORDER_INFO* orderInfo)
 {
 	return TRUE;
 }
 
-static BOOL xf_rail_monitored_desktop(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo,
-                                      const MONITORED_DESKTOP_ORDER* monitoredDesktop)
+static BOOL xf_rail_monitored_desktop(rdpContext* context, WINDOW_ORDER_INFO* orderInfo,
+                                      MONITORED_DESKTOP_ORDER* monitoredDesktop)
 {
 	return TRUE;
 }
 
-static BOOL xf_rail_non_monitored_desktop(rdpContext* context, const WINDOW_ORDER_INFO* orderInfo)
+static BOOL xf_rail_non_monitored_desktop(rdpContext* context, WINDOW_ORDER_INFO* orderInfo)
 {
 	xfContext* xfc = (xfContext*)context;
 	xf_rail_disable_remoteapp_mode(xfc);
@@ -818,28 +954,31 @@
 static UINT xf_rail_server_system_param(RailClientContext* context,
                                         const RAIL_SYSPARAM_ORDER* sysparam)
 {
-	// TODO: Actually apply param
 	return CHANNEL_RC_OK;
 }
 
-static UINT xf_rail_server_start_cmd(RailClientContext* context)
+/**
+ * Function description
+ *
+ * @return 0 on success, otherwise a Win32 error code
+ */
+static UINT xf_rail_server_handshake(RailClientContext* context,
+                                     const RAIL_HANDSHAKE_ORDER* handshake)
 {
 	UINT status;
 	RAIL_EXEC_ORDER exec = { 0 };
 	RAIL_SYSPARAM_ORDER sysparam = { 0 };
+	RAIL_HANDSHAKE_ORDER clientHandshake;
 	RAIL_CLIENT_STATUS_ORDER clientStatus = { 0 };
 	xfContext* xfc = (xfContext*)context->custom;
 	rdpSettings* settings = xfc->context.settings;
-	clientStatus.flags = TS_RAIL_CLIENTSTATUS_ALLOWLOCALMOVESIZE;
+	clientHandshake.buildNumber = 0x00001DB0;
+	status = context->ClientHandshake(context, &clientHandshake);
 
-	if (settings->AutoReconnectionEnabled)
-		clientStatus.flags |= TS_RAIL_CLIENTSTATUS_AUTORECONNECT;
+	if (status != CHANNEL_RC_OK)
+		return status;
 
-	clientStatus.flags |= TS_RAIL_CLIENTSTATUS_ZORDER_SYNC;
-	clientStatus.flags |= TS_RAIL_CLIENTSTATUS_WINDOW_RESIZE_MARGIN_SUPPORTED;
-	clientStatus.flags |= TS_RAIL_CLIENTSTATUS_APPBAR_REMOTING_SUPPORTED;
-	clientStatus.flags |= TS_RAIL_CLIENTSTATUS_POWER_DISPLAY_REQUEST_SUPPORTED;
-	clientStatus.flags |= TS_RAIL_CLIENTSTATUS_BIDIRECTIONAL_CLOAK_SUPPORTED;
+	clientStatus.flags = RAIL_CLIENTSTATUS_ALLOWLOCALMOVESIZE;
 	status = context->ClientInformation(context, &clientStatus);
 
 	if (status != CHANNEL_RC_OK)
@@ -849,10 +988,7 @@
 	{
 		RAIL_LANGBAR_INFO_ORDER langBarInfo;
 		langBarInfo.languageBarStatus = 0x00000008; /* TF_SFT_HIDDEN */
-		status = context->ClientLanguageBarInfo(context, &langBarInfo);
-
-		if (status != CHANNEL_RC_OK)
-			return status;
+		context->ClientLanguageBarInfo(context, &langBarInfo);
 	}
 
 	sysparam.params = 0;
@@ -884,16 +1020,6 @@
 	exec.RemoteApplicationArguments = settings->RemoteApplicationCmdLine;
 	return context->ClientExecute(context, &exec);
 }
-/**
- * Function description
- *
- * @return 0 on success, otherwise a Win32 error code
- */
-static UINT xf_rail_server_handshake(RailClientContext* context,
-                                     const RAIL_HANDSHAKE_ORDER* handshake)
-{
-	return xf_rail_server_start_cmd(context);
-}
 
 /**
  * Function description
@@ -903,7 +1029,7 @@
 static UINT xf_rail_server_handshake_ex(RailClientContext* context,
                                         const RAIL_HANDSHAKE_EX_ORDER* handshakeEx)
 {
-	return xf_rail_server_start_cmd(context);
+	return CHANNEL_RC_OK;
 }
 
 /**
@@ -917,8 +1043,10 @@
 	int x = 0, y = 0;
 	int direction = 0;
 	Window child_window;
+	xfAppWindow* appWindow = NULL;
 	xfContext* xfc = (xfContext*)context->custom;
-	xfAppWindow* appWindow = xf_rail_get_window(xfc, localMoveSize->windowId);
+	appWindow =
+	    (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, (void*)&localMoveSize->windowId);
 
 	if (!appWindow)
 		return ERROR_INTERNAL_ERROR;
@@ -1010,8 +1138,10 @@
 static UINT xf_rail_server_min_max_info(RailClientContext* context,
                                         const RAIL_MINMAXINFO_ORDER* minMaxInfo)
 {
+	xfAppWindow* appWindow = NULL;
 	xfContext* xfc = (xfContext*)context->custom;
-	xfAppWindow* appWindow = xf_rail_get_window(xfc, minMaxInfo->windowId);
+	appWindow =
+	    (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, (void*)&minMaxInfo->windowId);
 
 	if (appWindow)
 	{
@@ -1048,19 +1178,12 @@
 
 static BOOL rail_window_key_equals(void* key1, void* key2)
 {
-	const UINT64* k1 = (const UINT64*)key1;
-	const UINT64* k2 = (const UINT64*)key2;
-
-	if (!k1 || !k2)
-		return FALSE;
-
-	return *k1 == *k2;
+	return *(UINT32*)key1 == *(UINT32*)key2;
 }
 
 static UINT32 rail_window_key_hash(void* key)
 {
-	const UINT64* k1 = (const UINT64*)key;
-	return (UINT32)*k1;
+	return *(UINT32*)key;
 }
 
 static void rail_window_free(void* value)
@@ -1112,8 +1235,6 @@
 
 int xf_rail_uninit(xfContext* xfc, RailClientContext* rail)
 {
-	WINPR_UNUSED(rail);
-
 	if (xfc->rail)
 	{
 		xfc->rail->custom = NULL;
@@ -1134,50 +1255,3 @@
 
 	return 1;
 }
-
-xfAppWindow* xf_rail_add_window(xfContext* xfc, UINT64 id, UINT32 x, UINT32 y, UINT32 width,
-                                UINT32 height, UINT32 surfaceId)
-{
-	xfAppWindow* appWindow;
-
-	if (!xfc)
-		return NULL;
-
-	appWindow = (xfAppWindow*)calloc(1, sizeof(xfAppWindow));
-
-	if (!appWindow)
-		return NULL;
-
-	appWindow->xfc = xfc;
-	appWindow->windowId = id;
-	appWindow->surfaceId = surfaceId;
-	appWindow->x = x;
-	appWindow->y = y;
-	appWindow->width = width;
-	appWindow->height = height;
-	xf_AppWindowCreate(xfc, appWindow);
-	HashTable_Add(xfc->railWindows, &appWindow->windowId, (void*)appWindow);
-	return appWindow;
-}
-
-BOOL xf_rail_del_window(xfContext* xfc, UINT64 id)
-{
-	if (!xfc)
-		return FALSE;
-
-	if (!xfc->railWindows)
-		return FALSE;
-
-	return HashTable_Remove(xfc->railWindows, &id);
-}
-
-xfAppWindow* xf_rail_get_window(xfContext* xfc, UINT64 id)
-{
-	if (!xfc)
-		return NULL;
-
-	if (!xfc->railWindows)
-		return FALSE;
-
-	return HashTable_GetItemValue(xfc->railWindows, &id);
-}
diff -urN client/X11/xf_rail.h ../../informatimago/FreeRDP/client/X11/xf_rail.h
--- client/X11/xf_rail.h	2019-07-25 19:51:00.185894070 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_rail.h	2019-07-19 20:00:17.385205782 +0300
@@ -33,16 +33,6 @@
 void xf_rail_enable_remoteapp_mode(xfContext* xfc);
 void xf_rail_disable_remoteapp_mode(xfContext* xfc);
 
-xfAppWindow* xf_rail_add_window(xfContext* xfc, UINT64 id, UINT32 x, UINT32 y, UINT32 width,
-                                UINT32 height, UINT32 surfaceId);
-xfAppWindow* xf_rail_get_window(xfContext* xfc, UINT64 id);
-
-BOOL xf_rail_del_window(xfContext* xfc, UINT64 id);
-
-BOOL xf_rail_draw_window(xfContext* xfc, xfAppWindow* window, const char* data, UINT32 scanline,
-                         UINT32 width, UINT32 height, const RECTANGLE_16* src,
-                         const RECTANGLE_16* dst);
-
 int xf_rail_init(xfContext* xfc, RailClientContext* rail);
 int xf_rail_uninit(xfContext* xfc, RailClientContext* rail);
 
diff -urN client/X11/xfreerdp-argument.1.xml ../../informatimago/FreeRDP/client/X11/xfreerdp-argument.1.xml
--- client/X11/xfreerdp-argument.1.xml	2019-07-25 19:43:34.887685863 +0300
+++ ../../informatimago/FreeRDP/client/X11/xfreerdp-argument.1.xml	2019-07-25 18:38:20.124273025 +0300
@@ -64,12 +64,6 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>/app-workdir</option>:<replaceable>workspace path</replaceable></term>
-				<listitem>
-					<para>Remote application workspace path</para>
-				</listitem>
-			</varlistentry>
-			<varlistentry>
 				<term><option>/assistance</option>:<replaceable>password</replaceable></term>
 				<listitem>
 					<para>Remote assistance password</para>
@@ -124,9 +118,9 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>+bitmap-cache</option></term>
+				<term><option>-bitmap-cache</option></term>
 				<listitem>
-					<para>bitmap cache (default:off)</para>
+					<para>bitmap cache (default:on)</para>
 				</listitem>
 			</varlistentry>
 			<varlistentry>
@@ -142,12 +136,6 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>/cert-deny</option></term>
-				<listitem>
-					<para>Automatically abort connection for any certificate that can not be validated.</para>
-				</listitem>
-			</varlistentry>
-			<varlistentry>
 				<term><option>/cert-ignore</option></term>
 				<listitem>
 					<para>Ignore certificate</para>
@@ -284,7 +272,7 @@
 			<varlistentry>
 				<term><option>/floatbar</option>[:sticky:[on|off],default:[visible|hidden],show:[always|fullscreen||window]]</term>
 				<listitem>
-					<para>floatbar is disabled by default (when enabled defaults to sticky in fullscreen mode)</para>
+					<para>floatbar (default sticky in fullscreen mode)</para>
 				</listitem>
 			</varlistentry>
 			<varlistentry>
@@ -409,9 +397,9 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>-heartbeat</option></term>
+				<term><option>+heartbeat</option></term>
 				<listitem>
-					<para>Support heartbeat PDUs (default:on)</para>
+					<para>Support heartbeat PDUs (default:off)</para>
 				</listitem>
 			</varlistentry>
 			<varlistentry>
@@ -570,9 +558,9 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>+offscreen-cache</option></term>
+				<term><option>-offscreen-cache</option></term>
 				<listitem>
-					<para>offscreen bitmap cache (default:off)</para>
+					<para>offscreen bitmap cache (default:on)</para>
 				</listitem>
 			</varlistentry>
 			<varlistentry>
@@ -679,12 +667,6 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
-				<term><option>/rdp2tcp</option>:<replaceable>executable path[:arg...]</replaceable></term>
-				<listitem>
-					<para>TCP redirection</para>
-				</listitem>
-			</varlistentry>
-			<varlistentry>
 				<term><option>/reconnect-cookie</option>:<replaceable>base64-cookie</replaceable></term>
 				<listitem>
 					<para>Pass base64 reconnect cookie to the connection</para>
@@ -814,6 +796,60 @@
 				</listitem>
 			</varlistentry>
 			<varlistentry>
+				<term><option>/pin</option>[:<replaceable>PIN code</replaceable>]</term>
+				<listitem>
+					<para>PIN code</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/pkcs11-module</option>[:<replaceable>module</replaceable>]</term>
+				<listitem>
+					<para>Module PKCS11</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/pkinit-anchors</option>[:<replaceable>pkinit anchors</replaceable>]</term>
+				<listitem>
+					<para>PKINIT anchors</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/start-time</option>[:<replaceable>start time</replaceable>]</term>
+				<listitem>
+					<para>Kerberos Ticket start time</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/lifetime</option>[:<replaceable>lifetime</replaceable>]</term>
+				<listitem>
+					<para>Kerberos Ticket lifetime</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/renewable-lifetime</option>[:<replaceable>renewable lifetime</replaceable>]</term>
+				<listitem>
+					<para>Kerberos Ticket renewable lifetime</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/T</option></term>
+				<listitem>
+					<para>Activate KRB5 PKINIT Trace</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/csp</option>[:<replaceable>csp name</replaceable>]</term>
+				<listitem>
+					<para>CSP Name</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
+				<term><option>/card</option>[:<replaceable>card name</replaceable>]</term>
+				<listitem>
+					<para>Card Name</para>
+				</listitem>
+			</varlistentry>
+			<varlistentry>
 				<term><option>/sound</option>[:[sys:<replaceable>sys</replaceable>,][dev:<replaceable>dev</replaceable>,][format:<replaceable>format</replaceable>,][rate:<replaceable>rate</replaceable>,][channel:<replaceable>channel</replaceable>,][latency:<replaceable>latency</replaceable>,][quality:<replaceable>quality</replaceable>]]</term>
 				<term><option>/audio</option>[:[sys:<replaceable>sys</replaceable>,][dev:<replaceable>dev</replaceable>,][format:<replaceable>format</replaceable>,][rate:<replaceable>rate</replaceable>,][channel:<replaceable>channel</replaceable>,][latency:<replaceable>latency</replaceable>,][quality:<replaceable>quality</replaceable>]]</term>
 				<listitem>
diff -urN client/X11/xf_tsmf.c ../../informatimago/FreeRDP/client/X11/xf_tsmf.c
--- client/X11/xf_tsmf.c	2019-07-25 19:51:00.193894109 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_tsmf.c	2019-07-25 20:11:24.203964018 +0300
@@ -72,7 +72,7 @@
 	return FALSE;
 }
 
-static int xf_tsmf_xv_video_frame_event(TsmfClientContext* tsmf, TSMF_VIDEO_FRAME_EVENT* event)
+int xf_tsmf_xv_video_frame_event(TsmfClientContext* tsmf, TSMF_VIDEO_FRAME_EVENT* event)
 {
 	int i;
 	int x, y;
@@ -87,7 +87,7 @@
 	int numRects = 0;
 	xfContext* xfc;
 	xfXvContext* xv;
-	XRectangle* xrects = NULL;
+	XRectangle* xrects;
 	XShmSegmentInfo shminfo;
 	BOOL converti420yv12 = FALSE;
 
@@ -277,19 +277,8 @@
 		break;
 
 	default:
-		if (image->data_size < 0)
-		{
-			free(xrects);
-			return -2000;
-		}
-		else
-		{
-			const size_t size = ((UINT32)image->data_size <= event->frameSize)
-			                        ? (UINT32)image->data_size
-			                        : event->frameSize;
-			CopyMemory(image->data, event->frameData, size);
-		}
-
+		CopyMemory(image->data, event->frameData,
+		           image->data_size <= event->frameSize ? image->data_size : event->frameSize);
 		break;
 	}
 
@@ -399,7 +388,7 @@
 	{
 		xv->xv_pixfmts = (UINT32*)calloc((ret + 1), sizeof(UINT32));
 
-		for (i = 0; i < (unsigned int)ret; i++)
+		for (i = 0; i < ret; i++)
 		{
 			xv->xv_pixfmts[i] = fo[i].id;
 			WLog_DBG(TAG, "%c%c%c%c ", ((char*)(xv->xv_pixfmts + i))[0],
@@ -425,7 +414,6 @@
 int xf_tsmf_xv_uninit(xfContext* xfc, TsmfClientContext* tsmf)
 {
 	xfXvContext* xv = (xfXvContext*)xfc->xv_context;
-	WINPR_UNUSED(tsmf);
 
 	if (xv)
 	{
diff -urN client/X11/xf_video.c ../../informatimago/FreeRDP/client/X11/xf_video.c
--- client/X11/xf_video.c	2019-07-25 19:51:00.193894109 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_video.c	2019-07-25 20:11:24.207964038 +0300
@@ -83,7 +83,6 @@
 static BOOL xfVideoDeleteSurface(VideoClientContext* video, VideoSurface* surface)
 {
 	xfVideoSurface* xfSurface = (xfVideoSurface*)surface;
-	WINPR_UNUSED(video);
 
 	if (xfSurface)
 		XFree(xfSurface->image);
diff -urN client/X11/xf_window.c ../../informatimago/FreeRDP/client/X11/xf_window.c
--- client/X11/xf_window.c	2019-07-25 19:51:00.225894268 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_window.c	2019-07-25 20:11:24.235964177 +0300
@@ -397,7 +397,7 @@
 	if (!status)
 		return FALSE;
 
-	if ((xfc->current_desktop * 4 + 3) >= (INT64)nitems)
+	if ((xfc->current_desktop * 4 + 3) >= nitems)
 	{
 		free(prop);
 		return FALSE;
@@ -742,23 +742,6 @@
 
 int xf_AppWindowInit(xfContext* xfc, xfAppWindow* appWindow)
 {
-	if (!xfc || !appWindow)
-		return -1;
-
-	xf_SetWindowDecorations(xfc, appWindow->handle, appWindow->decorations);
-	xf_SetWindowStyle(xfc, appWindow, appWindow->dwStyle, appWindow->dwExStyle);
-	xf_SetWindowPID(xfc, appWindow->handle, 0);
-	xf_ShowWindow(xfc, appWindow, WINDOW_SHOW);
-	XClearWindow(xfc->display, appWindow->handle);
-	XMapWindow(xfc->display, appWindow->handle);
-	/* Move doesn't seem to work until window is mapped. */
-	xf_MoveWindow(xfc, appWindow, appWindow->x, appWindow->y, appWindow->width, appWindow->height);
-	xf_SetWindowText(xfc, appWindow, appWindow->title);
-	return 1;
-}
-
-int xf_AppWindowCreate(xfContext* xfc, xfAppWindow* appWindow)
-{
 	XGCValues gcv;
 	int input_mask;
 	XWMHints* InputModeHint;
@@ -794,7 +777,7 @@
 		else
 		{
 			class = malloc(sizeof("RAIL:00000000"));
-			sprintf_s(class, sizeof("RAIL:00000000"), "RAIL:%08" PRIX64 "", appWindow->windowId);
+			sprintf_s(class, sizeof("RAIL:00000000"), "RAIL:%08" PRIX32 "", appWindow->windowId);
 			class_hints->res_class = class;
 		}
 
@@ -818,6 +801,15 @@
 	             StructureNotifyMask | SubstructureNotifyMask | SubstructureRedirectMask |
 	             FocusChangeMask | PropertyChangeMask | ColormapChangeMask | OwnerGrabButtonMask;
 	XSelectInput(xfc->display, appWindow->handle, input_mask);
+	xf_SetWindowDecorations(xfc, appWindow->handle, appWindow->decorations);
+	xf_SetWindowStyle(xfc, appWindow, appWindow->dwStyle, appWindow->dwExStyle);
+	xf_SetWindowPID(xfc, appWindow->handle, 0);
+	xf_ShowWindow(xfc, appWindow, WINDOW_SHOW);
+	XClearWindow(xfc->display, appWindow->handle);
+	XMapWindow(xfc->display, appWindow->handle);
+	/* Move doesn't seem to work until window is mapped. */
+	xf_MoveWindow(xfc, appWindow, appWindow->x, appWindow->y, appWindow->width, appWindow->height);
+	xf_SetWindowText(xfc, appWindow, appWindow->title);
 	return 1;
 }
 
@@ -1037,9 +1029,6 @@
 	if (appWindow == NULL)
 		return;
 
-	if (appWindow->surfaceId < UINT16_MAX)
-		return;
-
 	ax = x + appWindow->windowOffsetX;
 	ay = y + appWindow->windowOffsetY;
 
@@ -1102,10 +1091,7 @@
 
 	for (index = 0; index < count; index++)
 	{
-		appWindow = xf_rail_get_window(xfc, *(UINT64*)pKeys[index]);
-
-		if (!appWindow)
-			return NULL;
+		appWindow = (xfAppWindow*)HashTable_GetItemValue(xfc->railWindows, (void*)pKeys[index]);
 
 		if (appWindow->handle == wnd)
 		{
diff -urN client/X11/xf_window.h ../../informatimago/FreeRDP/client/X11/xf_window.h
--- client/X11/xf_window.h	2019-07-25 19:51:00.229894288 +0300
+++ ../../informatimago/FreeRDP/client/X11/xf_window.h	2019-07-25 20:11:24.239964197 +0300
@@ -97,8 +97,7 @@
 	int height;
 	char* title;
 
-	UINT32 surfaceId;
-	UINT64 windowId;
+	UINT32 windowId;
 	UINT32 ownerWindowId;
 
 	UINT32 dwStyle;
@@ -161,7 +160,6 @@
                           unsigned long* nitems, unsigned long* bytes, BYTE** prop);
 void xf_SendClientEvent(xfContext* xfc, Window window, Atom atom, unsigned int numArgs, ...);
 
-int xf_AppWindowCreate(xfContext* xfc, xfAppWindow* appWindow);
 int xf_AppWindowInit(xfContext* xfc, xfAppWindow* appWindow);
 void xf_SetWindowText(xfContext* xfc, xfAppWindow* appWindow, const char* name);
 void xf_MoveWindow(xfContext* xfc, xfAppWindow* appWindow, int x, int y, int width, int height);
